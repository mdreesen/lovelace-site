{"version":3,"file":"static/chunks/638-2baf2e9408bf9264.js","mappings":"oFAAAA,EAAOC,QAAU,EAAjB,O,qBCAC,IAA4CC,EAA0Q,oBAAoBC,MAAKA,KAAnSD,EAA6S,SAAUE,GAAG,OAAO,SAASA,GAAG,IAAIF,EAAE,GAAG,SAAS,EAAoBG,GAAG,GAAGH,EAAEG,GAAG,OAAOH,EAAEG,GAAGJ,QAAQ,IAAIK,EAAEJ,EAAEG,GAAG,CAACE,EAAEF,EAAEG,GAAE,EAAGP,QAAQ,IAAI,OAAOG,EAAEC,GAAGI,KAAKH,EAAEL,QAAQK,EAAEA,EAAEL,QAAQ,GAAqBK,EAAEE,GAAE,EAAGF,EAAEL,QAAQ,OAAO,EAAoBS,EAAEN,EAAE,EAAoBO,EAAET,EAAE,EAAoBU,EAAE,SAASR,EAAEF,EAAEG,GAAG,EAAoBQ,EAAET,EAAEF,IAAIY,OAAOC,eAAeX,EAAEF,EAAE,CAACc,YAAW,EAAGC,IAAIZ,KAAK,EAAoBC,EAAE,SAASF,GAAG,oBAAoBc,QAAQA,OAAOC,aAAaL,OAAOC,eAAeX,EAAEc,OAAOC,YAAY,CAACC,MAAM,WAAWN,OAAOC,eAAeX,EAAE,aAAa,CAACgB,OAAM,KAAM,EAAoBlB,EAAE,SAASE,EAAEF,GAAG,GAAG,EAAEA,IAAIE,EAAE,EAAoBA,IAAI,EAAEF,EAAE,OAAOE,EAAE,GAAG,EAAEF,GAAG,iBAAiBE,GAAGA,GAAGA,EAAEiB,WAAW,OAAOjB,EAAE,IAAIC,EAAES,OAAOQ,OAAO,MAAM,GAAG,EAAoBhB,EAAED,GAAGS,OAAOC,eAAeV,EAAE,UAAU,CAACW,YAAW,EAAGI,MAAMhB,IAAI,EAAEF,GAAG,iBAAiBE,EAAE,IAAI,IAAIE,KAAKF,EAAE,EAAoBQ,EAAEP,EAAEC,EAAE,SAASJ,GAAG,OAAOE,EAAEF,IAAIqB,KAAK,KAAKjB,IAAI,OAAOD,GAAG,EAAoBA,EAAE,SAASD,GAAG,IAAIF,EAAEE,GAAGA,EAAEiB,WAAW,WAAsB,OAAOjB,EAAEoB,SAAS,WAA4B,OAAOpB,GAAG,OAAO,EAAoBQ,EAAEV,EAAE,IAAIA,GAAGA,GAAG,EAAoBW,EAAE,SAAST,EAAEF,GAAG,OAAOY,OAAOW,UAAUC,eAAejB,KAAKL,EAAEF,IAAI,EAAoByB,EAAE,GAAG,EAAoB,EAAoBC,EAAE,GAA/tC,CAAmuC,CAAC,SAAS1B,EAAEG,GAAGH,EAAED,QAAQG,GAAG,SAASA,EAAEF,EAAEG,GAAG,aAAa,SAASwB,EAAQzB,GAAG,OAAOyB,EAAQ,mBAAmBX,QAAQ,iBAAiBA,OAAOY,SAAS,SAAiB1B,GAAG,cAAcA,GAAG,SAAiBA,GAAG,OAAOA,GAAG,mBAAmBc,QAAQd,EAAE2B,cAAcb,QAAQd,IAAIc,OAAOO,UAAU,gBAAgBrB,IAAIA,GAAG,SAAS4B,EAAgB5B,EAAEF,GAAG,KAAKE,aAAaF,GAAG,MAAM,IAAI+B,UAAU,qCAAqC,SAASC,EAAU9B,EAAEF,GAAG,GAAG,mBAAmBA,GAAG,OAAOA,EAAE,MAAM,IAAI+B,UAAU,sDAAsD7B,EAAEqB,UAAUX,OAAOQ,OAAOpB,GAAGA,EAAEuB,UAAU,CAACM,YAAY,CAACX,MAAMhB,EAAE+B,UAAS,EAAGC,cAAa,KAAMlC,GAAGmC,EAAgBjC,EAAEF,GAAG,SAASmC,EAAgBjC,EAAEF,GAAG,OAAOmC,EAAgBvB,OAAOwB,gBAAgB,SAAyBlC,EAAEF,GAAG,OAAOE,EAAEmC,UAAUrC,EAAEE,IAAIA,EAAEF,GAAG,SAASsC,EAAapC,GAAG,IAAIF,EAAE,WAAqC,GAAG,oBAAoBuC,UAAUA,QAAQC,UAAU,OAAM,EAAG,GAAGD,QAAQC,UAAUC,KAAK,OAAM,EAAG,GAAG,mBAAmBC,MAAM,OAAM,EAAG,IAAI,OAAOC,KAAKpB,UAAUqB,SAASrC,KAAKgC,QAAQC,UAAUG,KAAK,IAAG,iBAAiB,EAAG,MAAMzC,GAAG,OAAM,GAA9Q,GAAqR,OAAO,WAAgC,IAAIC,EAAEC,EAAEyC,EAAgB3C,GAAG,GAAGF,EAAE,CAAC,IAAIW,EAAEkC,EAAgBC,MAAMjB,YAAY1B,EAAEoC,QAAQC,UAAUpC,EAAE2C,UAAUpC,QAAQR,EAAEC,EAAE4C,MAAMF,KAAKC,WAAW,OAAOE,EAA2BH,KAAK3C,IAAI,SAAS8C,EAA2B/C,EAAEF,GAAG,OAAOA,GAAG,WAAW2B,EAAQ3B,IAAI,mBAAmBA,EAAE,SAAgCE,GAAG,QAAG,IAASA,EAAE,MAAM,IAAIgD,eAAe,6DAA6D,OAAOhD,EAA9I,CAAiJA,GAAGF,EAAE,SAAS6C,EAAgB3C,GAAG,OAAO2C,EAAgBjC,OAAOwB,eAAexB,OAAOuC,eAAe,SAAyBjD,GAAG,OAAOA,EAAEmC,WAAWzB,OAAOuC,eAAejD,KAAKA,GAAG,IAAIE,EAAE0C,MAAMA,KAAKM,iBAAiB,SAASlD,GAAG,OAAOA,GAAGA,EAAEiB,WAAWjB,EAAE,CAACoB,QAAQpB,IAAIU,OAAOC,eAAeb,EAAE,aAAa,CAACkB,OAAM,IAAKlB,EAAEqD,WAAWrD,EAAEsD,cAAS,EAAO,IAAI3C,EAAEP,EAAED,EAAE,IAAIE,EAAE,SAASH,GAAG8B,EAAUsB,EAASpD,GAAG,IAAIF,EAAEsC,EAAagB,GAAU,SAASA,IAAW,OAAOxB,EAAgBgB,KAAKQ,GAAUtD,EAAEgD,MAAMF,KAAKC,WAAW,OAAOO,EAAxJ,CAAkK3C,EAAEW,QAAQiC,WAAWvD,EAAEsD,SAASjD,EAAE,IAAImD,EAAE,SAAStD,GAAG8B,EAAUqB,EAAWnD,GAAG,IAAIF,EAAEsC,EAAae,GAAY,SAASA,IAAa,OAAOvB,EAAgBgB,KAAKO,GAAYrD,EAAEgD,MAAMF,KAAKC,WAAW,OAAOM,EAAhK,CAA4K1C,EAAEW,QAAQiC,WAAWvD,EAAEqD,WAAWG,GAAG,SAAStD,EAAEF,EAAEG,GAAG,aAAaS,OAAOC,eAAeb,EAAE,aAAa,CAACkB,OAAM,IAAKlB,EAAEyD,UAAUzD,EAAE0D,cAAc1D,EAAE2D,mBAAmB3D,EAAE4D,qBAAgB,EAAO5D,EAAE4D,gBAAgB,SAAS1D,GAAG,IAAIA,EAAE,OAAO,EAAE,IAAIF,EAAE6D,OAAO1D,EAAE2D,SAAS1D,EAAED,EAAE4D,gBAAgBpD,EAAER,EAAE6D,qBAAqB,QAAQ,GAAG,OAAOhE,EAAEiE,aAAa7D,EAAE8D,cAAcvD,EAAEuD,cAAclE,EAAE2D,mBAAmB,SAASzD,GAAG,IAAIC,EAAE4C,UAAUoB,OAAO,QAAG,IAASpB,UAAU,GAAGA,UAAU,GAAG,EAAE3C,EAAE2C,UAAUoB,OAAO,EAAEpB,UAAU,QAAG,EAAO,IAAI3C,EAAE,OAAM,EAAG,IAAIO,EAAET,EAAEkE,wBAAwBC,IAAIlE,EAAEE,EAAEH,EAAEkE,wBAAwBE,OAAOnE,EAAE,OAAOQ,GAAGX,EAAE4D,gBAAgBxD,IAAIC,GAAG,GAAGL,EAAE0D,cAAc,SAASxD,EAAEC,GAAG,OAAOD,EAAEC,GAAG,iBAAiBA,EAAEA,EAAE+D,aAAalE,EAAE4D,gBAAgB1D,GAAG,GAAGF,EAAEyD,UAAU,WAAW,QAAQ,oBAAoBI,SAASA,OAAOC,WAAWD,OAAOC,SAASS,iBAAiB,SAASrE,EAAEF,EAAEG,GAAG,aAAa,IAAIC,EAAE0C,MAAMA,KAAKM,iBAAiB,SAASlD,GAAG,OAAOA,GAAGA,EAAEiB,WAAWjB,EAAE,CAACoB,QAAQpB,IAAIU,OAAOC,eAAeb,EAAE,aAAa,CAACkB,OAAM,IAAKlB,EAAEqD,WAAWrD,EAAEsD,cAAS,EAAO,IAAI3C,EAAEP,EAAED,EAAE,IAAIH,EAAEsD,SAAS3C,EAAEW,QAAQ,IAAIjB,EAAED,EAAED,EAAE,IAAIH,EAAEqD,WAAWhD,EAAEiB,SAAS,SAASpB,EAAEF,EAAEG,GAAG,aAAa,SAASwB,EAAQzB,GAAG,OAAOyB,EAAQ,mBAAmBX,QAAQ,iBAAiBA,OAAOY,SAAS,SAAiB1B,GAAG,cAAcA,GAAG,SAAiBA,GAAG,OAAOA,GAAG,mBAAmBc,QAAQd,EAAE2B,cAAcb,QAAQd,IAAIc,OAAOO,UAAU,gBAAgBrB,IAAIA,GAAG,SAASsE,EAAkBtE,EAAEF,GAAG,IAAI,IAAIG,EAAE,EAAEA,EAAEH,EAAEmE,OAAOhE,IAAI,CAAC,IAAIC,EAAEJ,EAAEG,GAAGC,EAAEU,WAAWV,EAAEU,aAAY,EAAGV,EAAE8B,cAAa,EAAG,UAAU9B,IAAIA,EAAE6B,UAAS,GAAIrB,OAAOC,eAAeX,EAAEE,EAAEqE,IAAIrE,IAAI,SAAS+B,EAAgBjC,EAAEF,GAAG,OAAOmC,EAAgBvB,OAAOwB,gBAAgB,SAAyBlC,EAAEF,GAAG,OAAOE,EAAEmC,UAAUrC,EAAEE,IAAIA,EAAEF,GAAohB,SAASiD,EAA2B/C,EAAEF,GAAG,OAAOA,GAAG,WAAW2B,EAAQ3B,IAAI,mBAAmBA,EAAE,SAAgCE,GAAG,QAAG,IAASA,EAAE,MAAM,IAAIgD,eAAe,6DAA6D,OAAOhD,EAA9I,CAAiJA,GAAGF,EAAE,SAAS6C,EAAgB3C,GAAG,OAAO2C,EAAgBjC,OAAOwB,eAAexB,OAAOuC,eAAe,SAAyBjD,GAAG,OAAOA,EAAEmC,WAAWzB,OAAOuC,eAAejD,KAAKA,GAAG,IAAIE,EAAE0C,MAAMA,KAAKM,iBAAiB,SAASlD,GAAG,OAAOA,GAAGA,EAAEiB,WAAWjB,EAAE,CAACoB,QAAQpB,IAAIU,OAAOC,eAAeb,EAAE,aAAa,CAACkB,OAAM,IAAK,IAAIP,EAAEP,EAAED,EAAE,IAAIE,EAAEF,EAAE,GAAGqD,EAAErD,EAAE,GAAGM,EAAEN,EAAE,GAAGuE,EAAEtE,EAAED,EAAE,IAAIuB,EAAE,CAACiD,SAAS,WAAWC,KAAK,MAAMC,gBAAgB,0BAA0BC,UAAU,0BAA0BC,qBAAqB,cAAcC,yBAAyB,SAASC,sBAAsB,SAASC,qBAAqB,UAAU5E,EAAE,SAASJ,IAAI,SAAmBA,EAAEF,GAAG,GAAG,mBAAmBA,GAAG,OAAOA,EAAE,MAAM,IAAI+B,UAAU,sDAAsD7B,EAAEqB,UAAUX,OAAOQ,OAAOpB,GAAGA,EAAEuB,UAAU,CAACM,YAAY,CAACX,MAAMhB,EAAE+B,UAAS,EAAGC,cAAa,KAAMlC,GAAGmC,EAAgBjC,EAAEF,GAAvP,CAA2PsD,EAASpD,GAAG,IAAIF,EAAlnD,SAAsBE,GAAG,IAAIF,EAAE,WAAqC,GAAG,oBAAoBuC,UAAUA,QAAQC,UAAU,OAAM,EAAG,GAAGD,QAAQC,UAAUC,KAAK,OAAM,EAAG,GAAG,mBAAmBC,MAAM,OAAM,EAAG,IAAI,OAAOC,KAAKpB,UAAUqB,SAASrC,KAAKgC,QAAQC,UAAUG,KAAK,IAAG,iBAAiB,EAAG,MAAMzC,GAAG,OAAM,GAA9Q,GAAqR,OAAO,WAAgC,IAAIC,EAAEC,EAAEyC,EAAgB3C,GAAG,GAAGF,EAAE,CAAC,IAAIW,EAAEkC,EAAgBC,MAAMjB,YAAY1B,EAAEoC,QAAQC,UAAUpC,EAAE2C,UAAUpC,QAAQR,EAAEC,EAAE4C,MAAMF,KAAKC,WAAW,OAAOE,EAA2BH,KAAK3C,IAAumCmC,CAAagB,GAAU,SAASA,EAASpD,GAAG,IAAIC,EAAE,OAAO,SAAyBD,EAAEF,GAAG,KAAKE,aAAaF,GAAG,MAAM,IAAI+B,UAAU,qCAAvE,CAA6Ge,KAAKQ,IAAWnD,EAAEH,EAAEO,KAAKuC,KAAK5C,IAAIiF,eAAe,WAAWhF,EAAEiF,aAAa3E,EAAEiD,cAAcvD,EAAEsD,UAAUtD,EAAEkF,QAAQlF,EAAEmF,kBAAkBnF,EAAEoF,aAAa,WAAWpF,EAAEmF,kBAAkBnF,EAAEqF,SAAS,WAAW,GAAGrF,EAAEsD,UAAU,CAAC,IAAIvD,EAAEyC,KAAK8C,MAAMvF,EAAEC,EAAEuF,WAAW,IAAIjF,EAAEkD,mBAAmBxD,EAAEwF,KAAK,IAAIxF,EAAEsD,aAAaI,OAAO+B,sBAAsBzF,EAAEmF,gBAAgBnF,EAAEuF,UAAUxF,KAAKC,EAAE0F,eAAe,SAAS3F,GAAGC,EAAE2F,QAAQ5F,GAAGC,EAAEmF,eAAe,WAAW,GAAGnF,EAAE2F,QAAQ,CAAC,IAAI5F,GAAE,EAAGC,EAAE4F,cAAc5F,EAAE2F,QAAQ1B,wBAAwB4B,OAAO7F,EAAE8F,aAAa9F,EAAEwF,KAAKvB,wBAAwB8B,MAAM/F,EAAEgG,KAAKhG,EAAEgG,IAAIC,aAAajG,EAAEgG,IAAIE,cAAclG,EAAE8F,aAAa9F,EAAEmG,mBAAmBpG,GAAE,GAAI,IAAIF,EAAEwD,EAAE+C,oBAAoBpG,EAAEwF,KAAKxF,EAAEsD,WAAWrD,IAAID,EAAEgG,IAAIxF,EAAER,EAAEqG,IAAIrG,EAAEsG,MAAMC,cAAcC,WAAWxC,OAAO,EAAE/D,GAAGD,EAAEyG,iBAAiB5G,EAAEE,GAAGS,GAAGR,EAAE0G,sBAAsB7G,GAAGI,GAAGO,GAAGR,EAAE2G,SAAS,CAACC,WAAW/G,MAAMG,EAAEsG,MAAM,CAACO,QAAQ9G,EAAE8G,QAAQC,cAAc/G,EAAE+G,cAAcC,aAAahH,EAAEgH,aAAaC,SAASzF,EAAE0F,QAAQxG,OAAOyG,OAAOzG,OAAOyG,OAAO,GAAG3F,GAAGxB,EAAEkH,SAASL,WAAW,EAAEL,cAAclD,EAAE8D,iBAAiBpH,IAAIC,EAAEsD,UAAUhD,EAAEgD,YAAYtD,EAAEwF,KAAK,KAAKxF,EAAE2F,QAAQ,KAAK3F,EAAEoH,eAAc,EAAGpH,EAAEqH,gBAAW,EAAOrH,EAAEkF,OAAOnF,EAAEmF,OAAOlF,EAAEiF,aAAa3E,EAAEiD,cAAcvD,EAAEsD,UAAUtD,EAAEkF,QAAQlF,EAAEuF,UAAU/C,KAAK8C,MAAMtF,EAAEsH,cAAcjE,EAAEkE,kBAAkBxH,EAAEyH,MAAMxH,EAAE,OAAO,SAAsBD,EAAEF,EAAEG,GAAUH,GAAGwE,EAAkBtE,EAAEqB,UAAUvB,GAAGG,GAAGqE,EAAkBtE,EAAEC,GAA/F,CAAqGmD,EAAS,CAAC,CAACmB,IAAI,oBAAoBvD,MAAM,WAA6B,IAAIhB,EAAE4C,KAAK8E,MAAMvC,OAAOrF,EAAE8C,KAAK2D,MAAMtG,EAAEH,EAAEgH,QAAQ5G,EAAEJ,EAAEiH,cAActG,EAAEX,EAAEkH,aAAapE,KAAKuC,OAAOnF,GAAG4D,SAAShB,KAAK+E,eAAe1H,EAAE2C,KAAKgF,UAAU3H,EAAEC,EAAEO,GAAGmC,KAAKwC,mBAAmB,CAACb,IAAI,qBAAqBvD,MAAM,SAA4BhB,GAAG,IAAIF,EAAE8C,KAAK8E,MAAMzH,EAAEH,EAAEqF,OAAOjF,EAAEJ,EAAEgH,QAAQrG,EAAEX,EAAEiH,cAAc5G,EAAEL,EAAEkH,aAAa1D,EAAEV,KAAK2D,MAAMO,QAAQ9G,EAAEmF,SAASlF,IAAI2C,KAAKiF,gBAAgBjF,KAAKuC,QAAQvC,KAAKuC,OAAOlF,EAAEA,GAAG2C,KAAK+E,gBAAgB/E,KAAKsC,aAAa3E,EAAEiD,cAAcZ,KAAKW,UAAUX,KAAKuC,QAAQ7B,IAAIpD,GAAG0C,KAAKgF,UAAU1H,EAAEO,EAAEN,KAAK,CAACoE,IAAI,uBAAuBvD,MAAM,WAAgC4B,KAAKiF,gBAAgBjF,KAAKuC,QAAQvC,KAAKkF,iBAAiB,CAACvD,IAAI,wBAAwBvD,MAAM,SAA+BhB,GAAG,IAAIF,EAAE8C,KAAK8E,MAAMzH,EAAEH,EAAEiI,SAAS7H,EAAEJ,EAAEkI,SAASvH,EAAEC,OAAOyG,OAAO,GAAGvE,KAAK2D,MAAMW,SAAS,IAAIjH,EAAE,CAAC,IAAIE,EAAE,qBAAqB8H,QAAQ/H,EAAE,EAAEA,EAAE,GAAGA,EAAEF,EAAE,UAAUS,EAAEkE,gBAAgBxE,EAAEM,EAAEmE,UAAUzE,EAAEyC,KAAKgE,SAAS,CAACM,QAAQzG,EAAEoG,WAAW7G,MAAM,CAACuE,IAAI,mBAAmBvD,MAAM,SAA0BhB,GAAG,IAAIF,EAAE+C,UAAUoB,OAAO,QAAG,IAASpB,UAAU,IAAIA,UAAU,GAAG5C,EAAE2C,KAAK8E,MAAMxH,EAAED,EAAE8H,SAAStH,EAAER,EAAE+H,SAAS7H,EAAEF,EAAEwH,KAAKlH,EAAET,EAAE,OAAO,GAAGmI,OAAOrF,KAAKwD,iBAAiB,MAAM5B,EAAE1E,EAAE,GAAGmI,OAAOrF,KAAKmD,aAAa,MAAM,OAAOvE,EAAEd,OAAOyG,OAAOzG,OAAOyG,OAAO,GAAGvE,KAAK2D,MAAMU,UAAU,CAACnB,OAAOvF,EAAEyF,MAAMxB,IAAI,IAAItE,EAAE,CAAC,IAAIE,EAAEK,EAAE,EAAEyH,GAAG9H,EAAEK,EAAE,GAAGA,EAAET,EAAEuB,EAAE,qBAAqB0G,OAAOC,EAAE,UAAU1H,EAAE,OAAOL,IAAIK,EAAE,QAAQyH,OAAO3E,EAAE6E,aAAavF,KAAK2E,cAAcpH,EAAEH,GAAG,QAAQwB,EAAEmD,gBAAgBpD,EAAEC,EAAEoD,UAAUrD,EAAEC,EAAE4G,aAAa5H,EAAEgB,EAAE6G,OAAO7H,EAAEoC,KAAKgE,SAAS,CAACK,SAASzF,EAAEqF,WAAW7G,MAAM,CAACuE,IAAI,iBAAiBvD,MAAM,WAA0B,IAAIhB,EAAE4C,KAAK8E,MAAMM,SAASlI,GAAGE,EAAE,EAAE,IAAI,GAAGsI,KAAKC,IAAIvI,GAAG,OAAOsI,KAAKE,MAAM5F,KAAKiD,cAAc/F,KAAK,CAACyE,IAAI,YAAYvD,MAAM,SAAmBhB,EAAEF,EAAEG,GAAG,IAAIC,EAAE0C,KAAKA,KAAKkF,eAAelF,KAAK0E,WAAW,IAAImB,MAAM7F,KAAK0E,WAAWoB,OAAO,SAASjI,GAAGP,EAAE0G,SAAS,CAACE,QAAQ9G,EAAE+G,cAAcjH,EAAEkH,aAAa/G,IAAG,WAAY,OAAOC,EAAEkF,oBAAoBlF,EAAEwH,MAAMiB,QAAQzI,EAAEwH,MAAMiB,OAAOlI,IAAImC,KAAK0E,WAAWsB,QAAQhG,KAAK0E,WAAWoB,OAAO9F,KAAK0E,WAAWuB,IAAI7I,EAAE4C,KAAK0E,WAAWwB,OAAOhJ,GAAG,GAAG8C,KAAK0E,WAAWyB,MAAM9I,GAAG,KAAK,CAACsE,IAAI,eAAevD,MAAM,WAAwB4B,KAAK0E,aAAa1E,KAAK0E,WAAWoB,OAAO,KAAK9F,KAAK0E,WAAWsB,QAAQ,YAAYhG,KAAK0E,cAAc,CAAC/C,IAAI,eAAevD,MAAM,WAAwB4B,KAAKW,WAAWX,KAAKuC,SAASvC,KAAKuC,OAAO6D,iBAAiB,SAASpG,KAAK0C,UAAS,GAAI3B,OAAOqF,iBAAiB,SAASpG,KAAKqC,gBAAe,GAAItB,OAAOqF,iBAAiB,OAAOpG,KAAKyC,cAAa,MAAO,CAACd,IAAI,kBAAkBvD,MAAM,SAAyBhB,GAAG4C,KAAKW,YAAYvD,GAAGA,EAAEiJ,oBAAoB,SAASrG,KAAK0C,UAAS,GAAI3B,OAAOsF,oBAAoB,SAASrG,KAAKqC,gBAAe,GAAItB,OAAOsF,oBAAoB,OAAOrG,KAAKyC,cAAa,MAAO,CAACd,IAAI,SAASvD,MAAM,WAAkB,IAAIhB,EAAE4C,KAAK9C,EAAE8C,KAAK8E,MAAMzH,EAAEH,EAAEoJ,UAAUhJ,EAAEJ,EAAEqJ,MAAMhJ,EAAEL,EAAEsJ,YAAY9F,EAAExD,EAAEuJ,iBAAiB9I,EAAET,EAAEwJ,WAAW9H,EAAE1B,EAAEyJ,YAAYnJ,EAAEN,EAAE0J,aAAatB,EAAEtF,KAAK2D,MAAMhF,EAAE2G,EAAEpB,QAAQtG,EAAE0H,EAAEnB,cAAc0C,EAAEvB,EAAElB,aAAa0C,EAAExB,EAAErB,WAAW8C,EAAEzB,EAAEjB,SAAS2C,EAAE1B,EAAEhB,QAAQ2C,EAAE3B,EAAE1B,cAAc,OAAO/F,EAAEW,QAAQiD,cAAc,MAAM,CAAC6E,UAAU,kBAAkBjB,OAAOhI,GAAGkJ,MAAMzI,OAAOyG,OAAO,CAAC1C,SAAS,WAAWqF,SAAS,UAAU5J,GAAG6J,IAAI,SAAajK,GAAGE,EAAEyF,KAAK3F,IAAIyB,EAAEd,EAAEW,QAAQiD,cAAc,MAAM,CAAC6E,UAAU/I,EAAE0I,IAAItH,EAAEyI,OAAOxJ,EAAEuI,MAAMU,EAAEM,IAAI,SAAajK,GAAGE,EAAEiG,IAAInG,GAAGmK,IAAI1J,EAAE4I,MAAMzI,OAAOyG,OAAOzG,OAAOyG,OAAO,GAAGwC,GAAGvJ,KAAK,KAAKoB,EAAEA,IAAIkI,EAAE,IAAI,KAAKG,EAAEpD,WAAWxC,OAAO,EAAExD,EAAEW,QAAQiD,cAAc,MAAM,CAAC6E,UAAU,qCAAqCa,IAAI,SAAajK,GAAGE,EAAEsG,GAAGxG,GAAGqJ,MAAMS,GAAGC,EAAEpD,YAAY,KAAKhG,EAAEW,QAAQiD,cAAcG,EAAEpD,QAAQ,CAAC8I,QAAQtH,KAAK+C,eAAeuD,UAAU5F,GAAGuG,EAAEM,cAAc,CAAC,CAAC5F,IAAI,2BAA2BvD,MAAM,SAAkChB,GAAG,MAAM,CAACwG,cAAclD,EAAE8D,iBAAiBpH,QAAQoD,EAAz/K,CAAmgLjD,EAAEiD,UAAUhD,EAAEgK,aAAa,CAAChB,YAAY,yBAAyBE,WAAW,GAAGJ,UAAU,GAAGG,iBAAiB,GAAGtB,UAAS,EAAGC,SAAS,KAAKlI,EAAEsB,QAAQhB,GAAG,SAASJ,EAAEF,EAAEG,GAAG,aAAa,SAASwB,EAAQzB,GAAG,OAAOyB,EAAQ,mBAAmBX,QAAQ,iBAAiBA,OAAOY,SAAS,SAAiB1B,GAAG,cAAcA,GAAG,SAAiBA,GAAG,OAAOA,GAAG,mBAAmBc,QAAQd,EAAE2B,cAAcb,QAAQd,IAAIc,OAAOO,UAAU,gBAAgBrB,IAAIA,GAAGU,OAAOC,eAAeb,EAAE,aAAa,CAACkB,OAAM,IAAKlB,EAAEuK,QAAQvK,EAAEqI,aAAarI,EAAE0H,kBAAkB1H,EAAEsH,iBAAiBtH,EAAEuG,oBAAoBvG,EAAEwK,mBAAc,EAAO,IAAIpK,EAAED,EAAE,GAAGQ,EAAER,EAAE,GAAGH,EAAEwK,cAAc,SAAStK,EAAEF,EAAEG,GAAG,OAAOA,EAAED,IAAIF,EAAEE,IAAI,GAAGF,EAAEuG,oBAAoB,SAASrG,EAAEC,GAAG,IAAIA,EAAE,OAAO,EAAE,IAAIC,EAAEF,EAAEkE,wBAAwB/D,EAAED,EAAEiE,IAAIb,EAAEpD,EAAE4F,OAAOvF,EAAEE,EAAE+C,cAAcvD,GAAGuE,EAAElB,EAAE/C,EAAE+C,EAAE/C,EAAEiB,EAAE8G,KAAKiC,MAAMpK,EAAEqE,EAAEA,EAAErE,GAAG,OAAOL,EAAEwK,cAAc,EAAE9F,EAAEhD,IAAI1B,EAAEsH,iBAAiB,SAASpH,GAAG,IAAIF,EAAE,GAAGG,EAAEC,EAAEsK,SAASC,QAAQzK,EAAEmK,UAAU,OAAOlK,EAAEyK,SAAQ,SAAU1K,EAAEE,GAAG,IAAIO,EAAET,EAAES,EAAEkK,MAAMlK,EAAEkK,KAAKC,uBAAuB9K,EAAEA,EAAEmI,OAAOhI,EAAE4K,OAAO3K,EAAE,QAAQ,CAACuG,WAAW3G,EAAEqK,SAASlK,IAAIH,EAAE0H,kBAAkB,SAASxH,GAAG,MAAM,WAAWyB,EAAQzB,SAAI,IAASA,EAAE8K,UAAK,IAAS9K,EAAE+K,KAAKjL,EAAEqI,aAAa,SAASnI,EAAEF,EAAEG,GAAG,OAAOD,EAAEF,EAAEgL,KAAK,EAAE7K,GAAGH,EAAEiL,IAAIjL,GAAGA,EAAEuK,QAAQ,SAASrK,EAAEF,GAAGE,EAAEmJ,MAAM6B,aAAa,QAAQ/C,OAAOnI,EAAE,OAAOE,EAAEmJ,MAAMd,OAAO,QAAQJ,OAAOnI,EAAE,SAAS,SAASE,EAAEF,EAAEG,GAAG,aAAa,IAAIC,EAAE0C,MAAMA,KAAKM,iBAAiB,SAASlD,GAAG,OAAOA,GAAGA,EAAEiB,WAAWjB,EAAE,CAACoB,QAAQpB,IAAIU,OAAOC,eAAeb,EAAE,aAAa,CAACkB,OAAM,IAAK,IAAIP,EAAEP,EAAED,EAAE,IAAIH,EAAEsB,QAAQ,SAA0BpB,GAAG,IAAIF,EAAEE,EAAEmK,SAASlK,EAAED,EAAEkK,QAAQhK,EAAEF,EAAEkJ,UAAU,OAAOzI,EAAEW,QAAQiD,cAAc,MAAM,CAAC0F,IAAI,SAAa/J,GAAG,OAAOC,EAAED,IAAIkJ,UAAUhJ,GAAG,yBAAyBiJ,MAAM,CAAC1E,SAAS,aAAa3E,KAAK,SAASE,EAAEF,EAAEG,GAAG,aAAa,SAASwB,EAAQzB,GAAG,OAAOyB,EAAQ,mBAAmBX,QAAQ,iBAAiBA,OAAOY,SAAS,SAAiB1B,GAAG,cAAcA,GAAG,SAAiBA,GAAG,OAAOA,GAAG,mBAAmBc,QAAQd,EAAE2B,cAAcb,QAAQd,IAAIc,OAAOO,UAAU,gBAAgBrB,IAAIA,GAAG,SAAS4B,EAAgB5B,EAAEF,GAAG,KAAKE,aAAaF,GAAG,MAAM,IAAI+B,UAAU,qCAAqC,SAASyC,EAAkBtE,EAAEF,GAAG,IAAI,IAAIG,EAAE,EAAEA,EAAEH,EAAEmE,OAAOhE,IAAI,CAAC,IAAIC,EAAEJ,EAAEG,GAAGC,EAAEU,WAAWV,EAAEU,aAAY,EAAGV,EAAE8B,cAAa,EAAG,UAAU9B,IAAIA,EAAE6B,UAAS,GAAIrB,OAAOC,eAAeX,EAAEE,EAAEqE,IAAIrE,IAAI,SAAS+B,EAAgBjC,EAAEF,GAAG,OAAOmC,EAAgBvB,OAAOwB,gBAAgB,SAAyBlC,EAAEF,GAAG,OAAOE,EAAEmC,UAAUrC,EAAEE,IAAIA,EAAEF,GAAohB,SAASiD,EAA2B/C,EAAEF,GAAG,OAAOA,GAAG,WAAW2B,EAAQ3B,IAAI,mBAAmBA,EAAE,SAAgCE,GAAG,QAAG,IAASA,EAAE,MAAM,IAAIgD,eAAe,6DAA6D,OAAOhD,EAA9I,CAAiJA,GAAGF,EAAE,SAAS6C,EAAgB3C,GAAG,OAAO2C,EAAgBjC,OAAOwB,eAAexB,OAAOuC,eAAe,SAAyBjD,GAAG,OAAOA,EAAEmC,WAAWzB,OAAOuC,eAAejD,KAAKA,GAAG,IAAIE,EAAE0C,MAAMA,KAAKM,iBAAiB,SAASlD,GAAG,OAAOA,GAAGA,EAAEiB,WAAWjB,EAAE,CAACoB,QAAQpB,IAAIU,OAAOC,eAAeb,EAAE,aAAa,CAACkB,OAAM,IAAK,IAAIP,EAAEP,EAAED,EAAE,IAAIE,EAAE,SAASH,IAAI,SAAmBA,EAAEF,GAAG,GAAG,mBAAmBA,GAAG,OAAOA,EAAE,MAAM,IAAI+B,UAAU,sDAAsD7B,EAAEqB,UAAUX,OAAOQ,OAAOpB,GAAGA,EAAEuB,UAAU,CAACM,YAAY,CAACX,MAAMhB,EAAE+B,UAAS,EAAGC,cAAa,KAAMlC,GAAGmC,EAAgBjC,EAAEF,GAAvP,CAA2PqD,EAAWnD,GAAG,IAAIF,EAAl2C,SAAsBE,GAAG,IAAIF,EAAE,WAAqC,GAAG,oBAAoBuC,UAAUA,QAAQC,UAAU,OAAM,EAAG,GAAGD,QAAQC,UAAUC,KAAK,OAAM,EAAG,GAAG,mBAAmBC,MAAM,OAAM,EAAG,IAAI,OAAOC,KAAKpB,UAAUqB,SAASrC,KAAKgC,QAAQC,UAAUG,KAAK,IAAG,iBAAiB,EAAG,MAAMzC,GAAG,OAAM,GAA9Q,GAAqR,OAAO,WAAgC,IAAIC,EAAEC,EAAEyC,EAAgB3C,GAAG,GAAGF,EAAE,CAAC,IAAIW,EAAEkC,EAAgBC,MAAMjB,YAAY1B,EAAEoC,QAAQC,UAAUpC,EAAE2C,UAAUpC,QAAQR,EAAEC,EAAE4C,MAAMF,KAAKC,WAAW,OAAOE,EAA2BH,KAAK3C,IAAu1BmC,CAAae,GAAY,SAASA,IAAa,OAAOvB,EAAgBgB,KAAKO,GAAYrD,EAAEgD,MAAMF,KAAKC,WAAW,OAAO,SAAsB7C,EAAEF,EAAEG,GAAUH,GAAGwE,EAAkBtE,EAAEqB,UAAUvB,GAAGG,GAAGqE,EAAkBtE,EAAEC,GAA/F,CAAqGkD,EAAW,CAAC,CAACoB,IAAI,SAASvD,MAAM,WAAkB,IAAIhB,EAAE4C,KAAK8E,MAAM5H,EAAEE,EAAEkJ,UAAUjJ,EAAED,EAAEmK,SAAS,OAAO1J,EAAEW,QAAQiD,cAAc,MAAM,CAAC6E,UAAU,6BAA6BjB,OAAOnI,IAAIG,OAAOkD,EAAprB,CAAgsBlD,EAAE,GAAGkD,YAAYhD,EAAEiK,aAAa,CAAClB,UAAU,IAAI/I,EAAEyK,sBAAqB,EAAG9K,EAAEsB,QAAQjB,MAAp+gBP,EAAOC,QAAQC,EAAE,EAAQ,Q,iFCK3H,MAAMmL,GAAsB,IAAAC,eAAc,CACtCC,mBAAqB5J,GAAMA,EAC3B6J,UAAU,EACVC,cAAe,UCNbC,GAAgB,IAAAJ,eAAc,ICG9B,GAAkB,IAAAA,eAAc,MCLhCK,EAAgC,qBAAb3H,SCGnB4H,EAA4BD,EAAY,EAAAE,gBAAkB,EAAAC,UCD1DC,GAAc,IAAAT,eAAc,CAAEU,QAAQ,ICF5C,SAASC,EAAY9B,GACjB,MAAuB,kBAARA,GACXrJ,OAAOW,UAAUC,eAAejB,KAAK0J,EAAK,WCClD,SAAS+B,EAAeC,GACpB,MAAoB,kBAANA,GAAkBC,MAAMC,QAAQF,GCJlD,SAASG,EAAoBH,GACzB,MAAoB,kBAANA,GAAqC,oBAAZA,EAAEI,MCD7C,MAAMC,EAAuB,CACzB,UACA,cACA,aACA,aACA,WACA,YACA,QAEEC,EAAe,CAAC,aAAcD,GCLpC,SAASE,EAAsB5E,GAC3B,OAAQwE,EAAoBxE,EAAM6E,UAC9BF,EAAaG,MAAMC,GAASX,EAAepE,EAAM+E,MAEzD,SAASC,EAAchF,GACnB,OAAOiF,QAAQL,EAAsB5E,IAAUA,EAAMkF,UCLzD,SAASC,EAAuBnF,GAC5B,MAAM,QAAEoF,EAAO,QAAEP,GCFrB,SAAgC7E,EAAOqF,GACnC,GAAIT,EAAsB5E,GAAQ,CAC9B,MAAM,QAAEoF,EAAO,QAAEP,GAAY7E,EAC7B,MAAO,CACHoF,SAAqB,IAAZA,GAAqBhB,EAAegB,GACvCA,OACAE,EACNT,QAAST,EAAeS,GAAWA,OAAUS,GAGrD,OAAyB,IAAlBtF,EAAMuF,QAAoBF,EAAU,GDRdG,CAAuBxF,GAAO,IAAAyF,YAAW7B,IACtE,OAAO,IAAA8B,UAAQ,KAAM,CAAGN,QAAAA,EAASP,QAAAA,KAAY,CAACc,EAA0BP,GAAUO,EAA0Bd,KAEhH,SAASc,EAA0BC,GAC/B,OAAOtB,MAAMC,QAAQqB,GAAQA,EAAKC,KAAK,KAAOD,EETlD,MAAME,EAAe,CACjBC,UAAW,CACP,UACA,WACA,aACA,WACA,OACA,cACA,aACA,aAEJC,KAAM,CAAC,QACPC,KAAM,CAAC,OAAQ,gBACfC,MAAO,CAAC,cACRC,MAAO,CAAC,aAAc,eAAgB,cACtCC,IAAK,CAAC,WAAY,QAAS,aAAc,eACzCC,IAAK,CAAC,QAAS,aAAc,oBAAqB,YAClDC,OAAQ,CAAC,cAAe,kBAAmB,mBAC3CC,OAAQ,CAAC,SAAU,aAEjBC,EAAqB,GAC3B,IAAK,MAAM3J,MAAOiJ,EACdU,EAAmB3J,IAAO,CACtB4J,UAAYzG,GAAU8F,EAAajJ,IAAKiI,MAAMC,KAAW/E,EAAM+E,MCdvE,SAAS2B,EAAYC,GACjB,MAAMtE,GAAM,IAAAuE,QAAO,MAInB,OAHoB,OAAhBvE,EAAIwE,UACJxE,EAAIwE,QAAUF,KAEXtE,EAAIwE,QCTf,MAAMC,EAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCZpB,IAAIC,EAAK,ECDT,MAAMC,GAAqB,IAAA1D,eAAc,ICGnC2D,GAA2B,IAAA3D,eAAc,ICLzC4D,EAAwBhO,OAAOiO,IAAI,yBCwBzC,SAAS,GAAsB,kBAAEC,EAAiB,oBAAEC,EAAmB,UAAEC,EAAS,eAAEC,EAAc,UAAE9L,IAChG2L,GCvBJ,SAAsBI,GAClB,IAAK,MAAM7K,KAAO6K,EACdlB,EAAmB3J,GAAO,IACnB2J,EAAmB3J,MACnB6K,EAAS7K,IDmBC8K,CAAaL,GAuDlC,MAAMM,GAAsB,IAAAC,aAtD5B,SAAyB7H,EAAO8H,GAK5B,IAAIC,EACJ,MAAMC,EAAiB,KAChB,IAAAvC,YAAWlC,MACXvD,EACHiI,SAAUC,EAAYlI,KAEpB,SAAE0D,GAAasE,EACf3C,EAAUF,EAAuBnF,GAYjCmI,EAAezE,OAAW4B,EJ7C7BoB,GAAY,KACf,GAAII,EAAsBE,eACtB,OAAOC,OI4CLmB,EAAcX,EAAezH,EAAO0D,GAC1C,IAAKA,GAAYG,EAAW,CAOxBwB,EAAQgD,cEpDpB,SAA0B1M,EAAWyM,EAAapI,EAAOuH,GACrD,MAAQc,cAAe5K,IAAW,IAAAgI,YAAW7B,GACvC0E,GAAc,IAAA7C,YAAWxB,GACzBsE,GAAkB,IAAA9C,YAAW,GAC7B+C,GAAsB,IAAA/C,YAAWlC,GAAqBI,cACtD8E,GAAmB,IAAA7B,UAIzBW,EAAsBA,GAAuBe,EAAYI,UACpDD,EAAiB5B,SAAWU,IAC7BkB,EAAiB5B,QAAUU,EAAoB5L,EAAW,CACtDyM,YAAAA,EACA3K,OAAAA,EACAuC,MAAAA,EACAuI,gBAAAA,EACAI,wBAAuBJ,IACW,IAA5BA,EAAgBnD,QAEtBoD,oBAAAA,KAGR,MAAMH,EAAgBI,EAAiB5B,QA4BvC,OA3BA,IAAA+B,qBAAmB,KACfP,GAAiBA,EAAcQ,OAAO7I,EAAOuI,MAEjDzE,GAA0B,KACtBuE,GAAiBA,EAAcS,aAEnC,IAAA9E,YAAU,KACNqE,GAAiBA,EAAcU,qBAYH9M,OAAO+M,wBACjClF,EACA,EAAAE,YACkB,KAChBqE,GAAiBA,EAAcY,gBAC/BZ,EAAcY,eAAeC,oBAG9Bb,EFEyBc,CAAiBxN,EAAWyM,EAAaJ,EAAgBT,GAKjF,MAAM6B,GAA2B,IAAA3D,YAAW0B,GACtCkC,GAAW,IAAA5D,YAAWxB,GAAaC,OACrCmB,EAAQgD,gBACRN,EAAgB1C,EAAQgD,cAAcV,aAEtCK,EAAgBqB,EAAU/B,EAAmBa,EAAciB,IAOnE,OAAQ,gBAAoBxF,EAAc0F,SAAU,CAAEhQ,MAAO+L,GACzD0C,GAAiB1C,EAAQgD,cAAiB,gBAAoBN,EAAe,CAAEM,cAAehD,EAAQgD,iBAAkBL,IAAqB,KAC7IR,EAAU7L,EAAWqE,EAAOmI,EGvExC,SAAsBC,EAAaC,EAAeP,GAC9C,OAAO,IAAAyB,cAAaC,IAChBA,GAAYpB,EAAYqB,OAASrB,EAAYqB,MAAMD,GAC/CnB,IACAmB,EACMnB,EAAcoB,MAAMD,GACpBnB,EAAcqB,WAEpB5B,IAC2B,oBAAhBA,EACPA,EAAY0B,GAEPrF,EAAY2D,KACjBA,EAAYjB,QAAU2C,MASlC,CAACnB,IHiDiDsB,CAAavB,EAAa/C,EAAQgD,cAAeP,GAAcM,EAAa1E,EAAU2B,EAAQgD,mBAIhJ,OADAT,EAAoBR,GAAyBzL,EACtCiM,EAEX,SAASM,GAAY,SAAED,IACnB,MAAM2B,GAAgB,IAAAnE,YAAWyB,GAAoBD,GACrD,OAAO2C,QAA8BtE,IAAb2C,EAClB2B,EAAgB,IAAM3B,EACtBA,EIxEV,SAAS4B,EAAkBC,GACvB,SAASC,EAAOpO,EAAWqO,EAA8B,IACrD,OAAO,EAAsBF,EAAanO,EAAWqO,IAEzD,GAAqB,qBAAVlP,MACP,OAAOiP,EAMX,MAAME,EAAiB,IAAIC,IAC3B,OAAO,IAAIpP,MAAMiP,EAAQ,CAMrB5Q,IAAK,CAACgR,EAAStN,KAINoN,EAAeG,IAAIvN,IACpBoN,EAAeI,IAAIxN,EAAKkN,EAAOlN,IAE5BoN,EAAe9Q,IAAI0D,MCrCtC,MAAMyN,EAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,QC3BJ,SAASC,EAAe5O,GACpB,MAKqB,kBAAdA,IAIHA,EAAU6O,SAAS,SAOvBF,EAAqBG,QAAQ9O,IAAc,GAIvC,QAAQ+O,KAAK/O,ICvBrB,MAAMgP,EAAkB,GCGxB,MAAMC,EAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEC,EAAiB,IAAIC,IAAIF,GCtB/B,SAASG,EAAoBlO,GAAK,OAAE0J,EAAM,SAAE0B,IACxC,OAAQ4C,EAAeT,IAAIvN,IACvBA,EAAImO,WAAW,YACbzE,QAAuBjB,IAAb2C,OACL0C,EAAgB9N,IAAgB,YAARA,GCPvC,MAAMoO,EAAiB3R,GAAU2L,QAAQ3L,GAASA,EAAM4R,aCElDC,EAAiB,CACnBC,EAAG,aACHnJ,EAAG,aACHoJ,EAAG,aACHC,qBAAsB,eAEpBC,EAAgBX,EAAmBrO,OCRzC,MAAMiP,EAAyBC,GAAW5O,GAAuB,kBAARA,GAAoBA,EAAImO,WAAWS,GACtFC,EAAoBF,EAAsB,MAC1CG,EAAqBH,EAAsB,UCC3CI,EAAiB,CAACtS,EAAO2J,IACpBA,GAAyB,kBAAV3J,EAChB2J,EAAK/F,UAAU5D,GACfA,ECNJuS,EAAQ,CAACzI,EAAKC,EAAKgB,IAAMzD,KAAKwC,IAAIxC,KAAKyC,IAAIgB,EAAGjB,GAAMC,GCEpDyI,EAAS,CACXpB,KAAOrG,GAAmB,kBAANA,EACpB0H,MAAOC,WACP9O,UAAYmH,GAAMA,GAEhB4H,EAAQ,IACPH,EACH5O,UAAYmH,GAAMwH,EAAM,EAAG,EAAGxH,IAE5B6H,EAAQ,IACPJ,EACHpS,QAAS,GCPPyS,EAAY9H,GAAMzD,KAAKiC,MAAU,IAAJwB,GAAc,IAC3C+H,EAAa,uBACbC,EAAa,8FACbC,EAAmB,+FACzB,SAASC,EAASlI,GACd,MAAoB,kBAANA,ECTlB,MAAMmI,EAAkBC,IAAS,CAC7B/B,KAAOrG,GAAMkI,EAASlI,IAAMA,EAAEqI,SAASD,IAAiC,IAAxBpI,EAAEsI,MAAM,KAAKpQ,OAC7DwP,MAAOC,WACP9O,UAAYmH,GAAM,GAAGA,IAAIoI,MAEvBG,EAAUJ,EAAe,OACzBK,GAAUL,EAAe,KACzBM,GAAKN,EAAe,MACpBO,GAAKP,EAAe,MACpBQ,GAAKR,EAAe,MACpBS,GAAqB,IACpBJ,GACHd,MAAQ1H,GAAMwI,GAAQd,MAAM1H,GAAK,IACjCnH,UAAYmH,GAAMwI,GAAQ3P,UAAc,IAAJmH,ICblC,GAAM,IACLyH,EACH5O,UAAW0D,KAAKiC,OCAdqK,GAAmB,CAErBC,YAAaL,GACbM,eAAgBN,GAChBO,iBAAkBP,GAClBQ,kBAAmBR,GACnBS,gBAAiBT,GACjBU,aAAcV,GACdW,OAAQX,GACRY,oBAAqBZ,GACrBa,qBAAsBb,GACtBc,wBAAyBd,GACzBe,uBAAwBf,GAExBxO,MAAOwO,GACPgB,SAAUhB,GACV1O,OAAQ0O,GACRiB,UAAWjB,GACXkB,KAAMlB,GACNrQ,IAAKqQ,GACLmB,MAAOnB,GACPpQ,OAAQoQ,GACR9P,KAAM8P,GAENoB,QAASpB,GACTqB,WAAYrB,GACZsB,aAActB,GACduB,cAAevB,GACfwB,YAAaxB,GACbyB,OAAQzB,GACR0B,UAAW1B,GACX2B,YAAa3B,GACb4B,aAAc5B,GACd6B,WAAY7B,GAEZ8B,OAAQhC,EACRiC,QAASjC,EACTkC,QAASlC,EACTmC,QAASnC,EACTV,MAAK,EACL8C,OAAQ9C,EACR+C,OAAQ/C,EACRgD,OAAQhD,EACRiD,KAAMvC,EACNwC,MAAOxC,EACPyC,MAAOzC,EACP0C,SAAUxC,GACVyC,WAAYzC,GACZ0C,WAAY1C,GACZ2C,WAAY3C,GACZ1B,EAAG0B,GACH7K,EAAG6K,GACHzB,EAAGyB,GACH4C,YAAa5C,GACbxB,qBAAsBwB,GACtB6C,QAAS1D,EACT2D,QAAS3C,GACT4C,QAAS5C,GACT6C,QAAShD,GAETiD,OAAQ,GAERC,YAAa/D,EACbgE,cAAehE,EACfiE,WAAY,IC9DhB,SAASC,GAAgBtR,EAAOuR,EAAcC,EAASC,GACnD,MAAM,MAAE7O,EAAK,KAAE8O,EAAI,UAAErT,EAAS,gBAAEsT,GAAoB3R,EAEpD,IAAI4R,GAAe,EACfC,GAAqB,EAErBC,GAAkB,EAOtB,IAAK,MAAM9T,KAAOuT,EAAc,CAC5B,MAAM9W,EAAQ8W,EAAavT,GAI3B,GAAI6O,EAAkB7O,GAAM,CACxB0T,EAAK1T,GAAOvD,EACZ,SAGJ,MAAMsX,EAAY1D,GAAiBrQ,GAC7BgU,EAAcjF,EAAetS,EAAOsX,GAC1C,GAAI/F,EAAeT,IAAIvN,GAAM,CAKzB,GAHA4T,GAAe,EACfvT,EAAUL,GAAOgU,GAEZF,EACD,SAEArX,KAAWsX,EAAUlX,SAAW,KAChCiX,GAAkB,QAEjB9T,EAAImO,WAAW,WAEpB0F,GAAqB,EACrBF,EAAgB3T,GAAOgU,GAGvBpP,EAAM5E,GAAOgU,EAmBrB,GAhBKT,EAAalT,YACVuT,GAAgBH,EAChB7O,EAAMvE,UTtClB,SAAwBA,GAAW,2BAAE4T,GAA6B,EAAI,mBAAEC,GAAqB,GAASC,EAAoBV,GAEtH,IAAIW,EAAkB,GAKtB,IAAK,IAAIxY,EAAI,EAAGA,EAAI8S,EAAe9S,IAAK,CACpC,MAAMoE,EAAM+N,EAAmBnS,QACR6M,IAAnBpI,EAAUL,KAEVoU,GAAmB,GADG9F,EAAetO,IAAQA,KACNK,EAAUL,QAezD,OAZIiU,IAA+B5T,EAAUmO,IACzC4F,GAAmB,iBAEvBA,EAAkBA,EAAgBC,OAG9BZ,EACAW,EAAkBX,EAAkBpT,EAAW8T,EAAqB,GAAKC,GAEpEF,GAAsBC,IAC3BC,EAAkB,QAEfA,ESYmBE,CAAetS,EAAM3B,UAAWmT,EAASM,EAAiBL,GAEvE7O,EAAMvE,YAKXuE,EAAMvE,UAAY,SAOtBwT,EAAoB,CACpB,MAAM,QAAEd,EAAU,MAAK,QAAEC,EAAU,MAAK,QAAEC,EAAU,GAAOU,EAC3D/O,EAAM+O,gBAAkB,GAAGZ,KAAWC,KAAWC,KCrEzD,MAAMsB,GAAwB,KAAM,CAChC3P,MAAO,GACPvE,UAAW,GACXsT,gBAAiB,GACjBD,KAAM,KCEV,SAASc,GAAkBC,EAAQC,EAAQvR,GACvC,IAAK,MAAMnD,KAAO0U,EACTtG,EAAcsG,EAAO1U,KAAUkO,EAAoBlO,EAAKmD,KACzDsR,EAAOzU,GAAO0U,EAAO1U,IAWjC,SAAS2U,GAASxR,EAAOoI,EAAa1E,GAClC,MACMjC,EAAQ,GAMd,OAFA4P,GAAkB5P,EALAzB,EAAMyB,OAAS,GAKGzB,GACpChH,OAAOyG,OAAOgC,EAdlB,UAAgC,kBAAE6O,GAAqBlI,EAAa1E,GAChE,OAAO,IAAAgC,UAAQ,KACX,MAAM7G,EDfsB,CAChC4C,MAAO,GACPvE,UAAW,GACXsT,gBAAiB,GACjBD,KAAM,ICaF,OADAJ,GAAgBtR,EAAOuJ,EAAa,CAAE0I,4BAA6BpN,GAAY4M,GACxEtX,OAAOyG,OAAO,GAAIZ,EAAM0R,KAAM1R,EAAM4C,SAC5C,CAAC2G,IASiBqJ,CAAuBzR,EAAOoI,EAAa1E,IACzD1D,EAAM0R,gBAAkB1R,EAAM0R,gBAAgBjQ,GAASA,EAElE,SAASkQ,GAAa3R,EAAOoI,EAAa1E,GAEtC,MAAMkO,EAAY,GACZnQ,EAAQ+P,GAASxR,EAAOoI,EAAa1E,GAoB3C,OAnBI1D,EAAMiG,OAA+B,IAAvBjG,EAAM6R,eAEpBD,EAAUE,WAAY,EAEtBrQ,EAAMsQ,WACFtQ,EAAMuQ,iBACFvQ,EAAMwQ,mBACF,OAEZxQ,EAAMyQ,aACa,IAAflS,EAAMiG,KACA,OACA,QAAsB,MAAfjG,EAAMiG,KAAe,IAAM,WAEzBX,IAAnBtF,EAAMmS,WACLnS,EAAMoS,OAASpS,EAAMqS,YAAcrS,EAAMsS,YAC1CV,EAAUO,SAAW,GAEzBP,EAAUnQ,MAAQA,EACXmQ,EC/CX,MAAMW,GAAmB,IAAIzH,IAAI,CAC7B,UACA,OACA,WACA,UACA,QACA,SACA,WACA,aACA,oBACA,kBACA,SACA,UACA,yBACA,4BACA,kBACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,SACA,SACA,eACA,aACA,kBACA,kBACA,eACA,aAUJ,SAAS0H,GAAkB3V,GACvB,OAAQA,EAAImO,WAAW,UAClBnO,EAAImO,WAAW,SAAmB,cAARnO,GAC3BA,EAAImO,WAAW,WACfnO,EAAImO,WAAW,UACfnO,EAAImO,WAAW,UACfuH,GAAiBnI,IAAIvN,GCrD7B,IAAI4V,GAAiB5V,IAAS2V,GAAkB3V,GAoBhD,KAnBiC6V,GAyBLC,QAAQ,0BAA0BjZ,WArB1D+Y,GAAiB5V,GAAQA,EAAImO,WAAW,OAASwH,GAAkB3V,GAAO6V,GAAY7V,IAuB1F,MAAO+V,KA3BP,IAAiCF,GCDjC,SAASG,GAAWC,EAAQC,EAAQ/E,GAChC,MAAyB,kBAAX8E,EACRA,EACAhG,GAAG5P,UAAU6V,EAAS/E,EAAO8E,GCHvC,MAAME,GAAW,CACbD,OAAQ,oBACRE,MAAO,oBAELC,GAAY,CACdH,OAAQ,mBACRE,MAAO,mBCDX,SAASE,GAActU,GAAO,MAAEuU,EAAK,MAAEC,EAAK,UAAEC,EAAS,QAAE1D,EAAO,QAAEC,EAAO,WAAE0D,EAAU,YAAEC,EAAc,EAAC,WAAEC,EAAa,KAElHC,GAAUrD,EAASsD,EAAUrD,GAM5B,GALAH,GAAgBtR,EAAO6U,EAAQrD,EAASC,GAKpCqD,EAIA,YAHI9U,EAAM4C,MAAMmS,UACZ/U,EAAMgV,MAAMD,QAAU/U,EAAM4C,MAAMmS,UAI1C/U,EAAMgV,MAAQhV,EAAM4C,MACpB5C,EAAM4C,MAAQ,GACd,MAAM,MAAEoS,EAAK,MAAEpS,EAAK,WAAEqS,GAAejV,EAKjCgV,EAAM3W,YACF4W,IACArS,EAAMvE,UAAY2W,EAAM3W,kBACrB2W,EAAM3W,WAGb4W,SACaxO,IAAZsK,QAAqCtK,IAAZuK,GAAyBpO,EAAMvE,aACzDuE,EAAM+O,gBFzBd,SAAgCsD,EAAYlE,EAASC,GAGjD,MAAO,GAFWgD,GAAWjD,EAASkE,EAAW1I,EAAG0I,EAAWxV,UAC7CuU,GAAWhD,EAASiE,EAAW7R,EAAG6R,EAAW1V,UEuBnC2V,CAAuBD,OAAwBxO,IAAZsK,EAAwBA,EAAU,QAAiBtK,IAAZuK,EAAwBA,EAAU,UAG1HvK,IAAV8N,IACAS,EAAMzI,EAAIgI,QACA9N,IAAV+N,IACAQ,EAAM5R,EAAIoR,QACI/N,IAAdgO,IACAO,EAAM3H,MAAQoH,QAEChO,IAAfiO,GD7BR,SAAsBM,EAAOtX,EAAQyX,EAAU,EAAGjB,EAAS,EAAGkB,GAAc,GAExEJ,EAAMN,WAAa,EAGnB,MAAMW,EAAOD,EAAcjB,GAAWE,GAEtCW,EAAMK,EAAKnB,QAAUjG,GAAG5P,WAAW6V,GAEnC,MAAMQ,EAAazG,GAAG5P,UAAUX,GAC1BiX,EAAc1G,GAAG5P,UAAU8W,GACjCH,EAAMK,EAAKjB,OAAS,GAAGM,KAAcC,ICmBjCW,CAAaN,EAAON,EAAYC,EAAaC,GAAY,GC7CjE,MAAMW,GAAuB,KAAM,CPD/B3S,MAAO,GACPvE,UAAW,GACXsT,gBAAiB,GACjBD,KAAM,GOANsD,MAAO,KCJLF,GAAYU,GAAuB,kBAARA,GAA0C,QAAtBA,EAAIC,cCMzD,SAASC,GAAYvU,EAAOoI,EAAaoM,EAAW7Y,GAChD,MAAM8Y,GAAc,IAAA/O,UAAQ,KACxB,MAAM7G,EFNqB,CPD/B4C,MAAO,GACPvE,UAAW,GACXsT,gBAAiB,GACjBD,KAAM,GOANsD,MAAO,IEMH,OADAV,GAActU,EAAOuJ,EAAa,CAAE0I,4BAA4B,GAAS6C,GAAShY,GAAYqE,EAAMsQ,mBAC7F,IACAzR,EAAMgV,MACTpS,MAAO,IAAK5C,EAAM4C,UAEvB,CAAC2G,IACJ,GAAIpI,EAAMyB,MAAO,CACb,MAAMiT,EAAY,GAClBrD,GAAkBqD,EAAW1U,EAAMyB,MAAOzB,GAC1CyU,EAAYhT,MAAQ,IAAKiT,KAAcD,EAAYhT,OAEvD,OAAOgT,ECbX,SAASE,GAAgBC,GAAqB,GA2B1C,MA1BkB,CAACjZ,EAAWqE,EAAOmI,EAAc9F,GAAO+N,aAAAA,GAAgB1M,KACtE,MAGM+Q,GAHiBlK,EAAe5O,GAChC4Y,GACA5C,IAC6B3R,EAAOoQ,EAAc1M,EAAU/H,GAC5DkZ,EPoBd,SAAqB7U,EAAO8U,EAAOF,GAC/B,MAAMC,EAAgB,GACtB,IAAK,MAAMhY,KAAOmD,EAQF,WAARnD,GAA4C,kBAAjBmD,EAAM+U,SAEjCtC,GAAc5V,KACU,IAAvB+X,GAA+BpC,GAAkB3V,KAChDiY,IAAUtC,GAAkB3V,IAE7BmD,EAAiB,WAAKnD,EAAImO,WAAW,aACtC6J,EAAchY,GAAOmD,EAAMnD,IAGnC,OAAOgY,EOxCmBG,CAAYhV,EAA4B,kBAAdrE,EAAwBiZ,GAClEK,EAAe,IACdJ,KACAJ,EACHpS,IAAAA,IAOE,SAAEI,GAAazC,EACfkV,GAAmB,IAAAxP,UAAQ,IAAOuF,EAAcxI,GAAYA,EAAStJ,MAAQsJ,GAAW,CAACA,IAI/F,OAHI0F,IACA8M,EAAa,sBAAwB9M,IAElC,IAAAxL,eAAchB,EAAW,IACzBsZ,EACHxS,SAAUyS,KC5BtB,MAAMC,GAAeC,GAAQA,EAAIC,QAAQ,kBAAmB,SAASf,cCHrE,SAASgB,GAAWC,GAAS,MAAE9T,EAAK,KAAE8O,GAAQiF,EAAWC,GACrDzc,OAAOyG,OAAO8V,EAAQ9T,MAAOA,EAAOgU,GAAcA,EAAWC,oBAAoBF,IAEjF,IAAK,MAAM3Y,KAAO0T,EACdgF,EAAQ9T,MAAMkU,YAAY9Y,EAAK0T,EAAK1T,ICD5C,MAAM+Y,GAAsB,IAAI9K,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,aACA,cACA,aACA,iBCtBJ,SAAS+K,GAAUN,EAASO,EAAaC,EAAYN,GACjDH,GAAWC,EAASO,OAAaxQ,EAAWmQ,GAC5C,IAAK,MAAM5Y,KAAOiZ,EAAYjC,MAC1B0B,EAAQS,aAAcJ,GAAoBxL,IAAIvN,GAA0BA,EAAnBsY,GAAYtY,GAAYiZ,EAAYjC,MAAMhX,ICJvG,SAASoZ,GAA4BjW,EAAOkW,GACxC,MAAM,MAAEzU,GAAUzB,EACZmW,EAAY,GAClB,IAAK,MAAMtZ,KAAO4E,GACVwJ,EAAcxJ,EAAM5E,KACnBqZ,EAAUzU,OAASwJ,EAAciL,EAAUzU,MAAM5E,KAClDkO,EAAoBlO,EAAKmD,MACzBmW,EAAUtZ,GAAO4E,EAAM5E,IAG/B,OAAOsZ,ECTX,SAAS,GAA4BnW,EAAOkW,GACxC,MAAMC,EAAYF,GAA8BjW,EAAOkW,GACvD,IAAK,MAAMrZ,KAAOmD,EACd,GAAIiL,EAAcjL,EAAMnD,KAASoO,EAAciL,EAAUrZ,IAAO,CAI5DsZ,GAHuD,IAArCvL,EAAmBH,QAAQ5N,GACvC,OAASA,EAAIuZ,OAAO,GAAGC,cAAgBxZ,EAAIyZ,UAAU,GACrDzZ,GACiBmD,EAAMnD,GAGrC,OAAOsZ,ECdX,SAASI,GAAwBvW,EAAOwW,EAAYzM,EAAQ0M,EAAgB,GAAIC,EAAkB,IAsB9F,MAlB0B,oBAAfF,IACPA,EAAaA,OAAsBlR,IAAXyE,EAAuBA,EAAS/J,EAAM+J,OAAQ0M,EAAeC,IAM/D,kBAAfF,IACPA,EAAaxW,EAAMkF,UAAYlF,EAAMkF,SAASsR,IAOxB,oBAAfA,IACPA,EAAaA,OAAsBlR,IAAXyE,EAAuBA,EAAS/J,EAAM+J,OAAQ0M,EAAeC,IAElFF,ECtBX,MAAMG,GAAqBtS,GAChBC,MAAMC,QAAQF,GCOzB,SAASuS,GAAmBtd,GACxB,MAAMud,EAAiB5L,EAAc3R,GAASA,EAAMH,MAAQG,EAC5D,OCRmB+K,EDQEwS,ECPd5R,QAAQZ,GAAkB,kBAANA,GAAkBA,EAAEyS,KAAOzS,EAAE0S,SDQlDF,EAAeE,UACfF,ECVY,IAACxS,ECiBvB,MAAM2S,GAAsBC,GAAW,CAACjX,EAAO0D,KAC3C,MAAM2B,GAAU,IAAAI,YAAW7B,GACrB2E,GAAkB,IAAA9C,YAAW,GAC7ByR,EAAO,IAbjB,UAAmB,4BAAEjB,EAA2B,kBAAEkB,EAAiB,QAAE3U,GAAYxC,EAAOqF,EAASkD,GAC7F,MAAM1J,EAAQ,CACVuR,aAAcgH,GAAiBpX,EAAOqF,EAASkD,EAAiB0N,GAChEH,YAAaqB,KAKjB,OAHI3U,IACA3D,EAAM4K,MAASD,GAAahH,EAAQxC,EAAOwJ,EAAU3K,IAElDA,EAKYwY,CAAUJ,EAAQjX,EAAOqF,EAASkD,GACrD,OAAO7E,EAAWwT,IAASxQ,EAAYwQ,IAE3C,SAASE,GAAiBpX,EAAOqF,EAASkD,EAAiB+O,GACvD,MAAMvC,EAAS,GACTwC,EAAeD,EAAmBtX,EAAO,IAC/C,IAAK,MAAMnD,KAAO0a,EACdxC,EAAOlY,GAAO+Z,GAAmBW,EAAa1a,IAElD,IAAI,QAAEuI,EAAO,QAAEP,GAAY7E,EAC3B,MAAMwX,EAA0B5S,EAAsB5E,GAChDyX,EAAkBzS,EAAchF,GAClCqF,GACAoS,IACCD,IACiB,IAAlBxX,EAAMuF,eACUD,IAAZF,IACAA,EAAUC,EAAQD,cACNE,IAAZT,IACAA,EAAUQ,EAAQR,UAE1B,IAAI6S,IAA4BnP,IACE,IAA5BA,EAAgBnD,QAEtBsS,EAA4BA,IAAyC,IAAZtS,EACzD,MAAMuS,EAAeD,EAA4B7S,EAAUO,EAC3D,GAAIuS,GACwB,mBAAjBA,IACNnT,EAAoBmT,GAAe,EACvBrT,MAAMC,QAAQoT,GAAgBA,EAAe,CAACA,IACtD3U,SAASwT,IACV,MAAMoB,EAAWrB,GAAwBvW,EAAOwW,GAChD,IAAKoB,EACD,OACJ,MAAM,cAAEC,EAAa,WAAEC,KAAexG,GAAWsG,EACjD,IAAK,MAAM/a,KAAOyU,EAAQ,CACtB,IAAIyG,EAAczG,EAAOzU,GACzB,GAAIyH,MAAMC,QAAQwT,GAAc,CAQ5BA,EAAcA,EAHAL,EACRK,EAAYxb,OAAS,EACrB,GAGU,OAAhBwb,IACAhD,EAAOlY,GAAOkb,GAGtB,IAAK,MAAMlb,KAAOgb,EACd9C,EAAOlY,GAAOgb,EAAchb,MAGxC,OAAOkY,ECtEX,MAAMiD,GAAkB,CACpBvQ,eAAgBuP,GAAmB,CAC/Bf,4BAA6B,GAC7BkB,kBAAmB/C,GACnB5R,QAAS,CAACxC,EAAOwJ,GAAYsM,YAAAA,EAAa1F,aAAAA,MACtC,IACI0F,EAAYhC,WAEJ,oBADGtK,EAASyO,QAEVzO,EAASyO,UACTzO,EAAShN,wBAEvB,MAAOlE,GAEHwd,EAAYhC,WAAa,CACrB1I,EAAG,EACHnJ,EAAG,EACH3D,MAAO,EACPF,OAAQ,GAGhB+U,GAAc2C,EAAa1F,EAAc,CAAEU,4BAA4B,GAAS6C,GAASnK,EAAS0O,SAAUlY,EAAMsQ,mBAClHuF,GAAUrM,EAAUsM,OCzB1BqC,GAAmB,CACrB1Q,eAAgBuP,GAAmB,CAC/Bf,4BAA2B,GAC3BkB,kBAAmB/F,MCP3B,SAASgH,GAAY9G,EAAQ+G,EAAWC,EAASjI,EAAU,CAAEkI,SAAS,IAElE,OADAjH,EAAOhQ,iBAAiB+W,EAAWC,EAASjI,GACrC,IAAMiB,EAAO/P,oBAAoB8W,EAAWC,GCFvD,MAAME,GAAoBC,GACI,UAAtBA,EAAMC,YACyB,kBAAjBD,EAAME,QAAuBF,EAAME,QAAU,GAWhC,IAApBF,EAAMG,UCXrB,SAASC,GAAiBJ,EAAOK,EAAY,QACzC,MAAO,CACHC,MAAO,CACH3N,EAAGqN,EAAMK,EAAY,KACrB7W,EAAGwW,EAAMK,EAAY,OCHjC,SAASE,GAAgB1H,EAAQ+G,EAAWC,EAASjI,GACjD,OAAO+H,GAAY9G,EAAQ+G,EDMR,CAACC,GACZG,GAAUD,GAAiBC,IAAUH,EAAQG,EAAOI,GAAiBJ,ICPvCQ,CAAeX,GAAUjI,GCGnE,MAAM6I,GAAmB,CAACtd,EAAGuG,IAAOkC,GAAMlC,EAAEvG,EAAEyI,IACxC8U,GAAO,IAAIC,IAAiBA,EAAaC,OAAOH,ICRtD,SAASI,GAAWvU,GAChB,IAAIwU,EAAO,KACX,MAAO,KACH,MAAMC,EAAW,KACbD,EAAO,MAEX,OAAa,OAATA,IACAA,EAAOxU,EACAyU,IAKnB,MAAMC,GAAuBH,GAAW,kBAClCI,GAAqBJ,GAAW,gBACtC,SAASK,GAAc1T,GACnB,IAAIsT,GAAO,EACX,GAAa,MAATtT,EACAsT,EAAOG,UAEN,GAAa,MAATzT,EACLsT,EAAOE,SAEN,CACD,MAAMG,EAAiBH,KACjBI,EAAeH,KACjBE,GAAkBC,EAClBN,EAAO,KACHK,IACAC,MAKAD,GACAA,IACAC,GACAA,KAGZ,OAAON,EAEX,SAASO,KAGL,MAAMC,EAAkBJ,IAAc,GACtC,OAAKI,IAELA,KACO,GCjDX,MAAMC,GACF/f,YAAY8D,GACR7C,KAAK+e,WAAY,EACjB/e,KAAK6C,KAAOA,EAEhB8K,WCLJ,MAAMqR,GAAY,CACdC,MAAO,EACPrc,UAAW,EACXsc,cAAc,GCClB,IAAIC,IAAoB,EACpBC,IAAe,EACnB,MAAMC,GAAa,CACf,OACA,SACA,YACA,SACA,cAEEC,GAAQD,GAAWlB,QAAO,CAACoB,EAAK5d,KAClC4d,EAAI5d,GCdR,SAA0Byd,GAKtB,IAAII,EAAQ,GACRC,EAAiB,GAIjBC,EAAW,EAKXR,GAAe,EACfS,GAAiB,EAIrB,MAAMC,EAAc,IAAIC,QAClBC,EAAO,CAITC,SAAU,CAACC,EAAUC,GAAY,EAAOC,GAAY,KAChD,MAAMC,EAAoBD,GAAahB,EACjCkB,EAASD,EAAoBX,EAAQC,EAU3C,OATIQ,GACAL,EAAYS,IAAIL,IAEc,IAA9BI,EAAO7Q,QAAQyQ,KACfI,EAAOE,KAAKN,GAERG,GAAqBjB,IACrBQ,EAAWF,EAAMne,SAElB2e,GAKXO,OAASP,IACL,MAAMQ,EAAQf,EAAelQ,QAAQyQ,IACtB,IAAXQ,GACAf,EAAexX,OAAOuY,EAAO,GACjCZ,EAAYa,OAAOT,IAKvBU,QAAU1B,IAMN,GAAIE,EACAS,GAAiB,MADrB,CAUA,GANAT,GAAe,GACdM,EAAOC,GAAkB,CAACA,EAAgBD,GAE3CC,EAAepe,OAAS,EAExBqe,EAAWF,EAAMne,OACbqe,EACA,IAAK,IAAIniB,EAAI,EAAGA,EAAImiB,EAAUniB,IAAK,CAC/B,MAAMyiB,EAAWR,EAAMjiB,GACvByiB,EAAShB,GACLY,EAAY1Q,IAAI8Q,KAChBF,EAAKC,SAASC,GACdZ,KAIZF,GAAe,EACXS,IACAA,GAAiB,EACjBG,EAAKY,QAAQ1B,OAIzB,OAAOc,EDtEIa,EAAiB,IAAOvB,IAAe,IAC3CG,IACR,IACGqB,GAAeC,GAAWvB,GAAMuB,GAAQH,QAAQ1B,IAChD8B,GAAgBle,IAClBwc,IAAe,EACfJ,GAAUC,MAAQE,GACZ,IAAO,GACPzZ,KAAKyC,IAAIzC,KAAKwC,IAAItF,EAAYoc,GAAUpc,UAnB/B,IAmBuD,GACtEoc,GAAUpc,UAAYA,EACtBoc,GAAUE,cAAe,EACzBG,GAAWvX,QAAQ8Y,IACnB5B,GAAUE,cAAe,EACrBE,KACAD,IAAoB,EACpBrc,sBAAsBge,MASxB,GAAQzB,GAAWlB,QAAO,CAACoB,EAAK5d,KAClC,MAAMme,EAAOR,GAAM3d,GAMnB,OALA4d,EAAI5d,GAAO,CAAC+e,EAAST,GAAY,EAAOC,GAAY,KAC3Cd,KARTA,IAAe,EACfD,IAAoB,EACfH,GAAUE,cACXpc,sBAAsBge,KAOfhB,EAAKC,SAASW,EAAST,EAAWC,IAEtCX,IACR,IACH,SAASwB,GAAYL,GACjBrB,GAAWvX,SAASnG,GAAQ2d,GAAM3d,GAAK4e,OAAOG,KE1ClD,SAASM,GAAcne,EAAMoe,GACzB,MAAM9D,EAAY,WAAa8D,EAAW,QAAU,SAC9CC,EAAe,WAAaD,EAAW,QAAU,OAYvD,OAAOnD,GAAgBjb,EAAK8I,QAASwR,GAXjB,CAACI,EAAO4D,KACxB,GAAmB,UAAf5D,EAAMxV,MAAoB6W,KAC1B,OACJ,MAAM9Z,EAAQjC,EAAKue,WACfve,EAAKkL,gBAAkBjJ,EAAMuc,YAC7Bxe,EAAKkL,eAAeuT,UAAU,aAAcL,GAE5Cnc,EAAMoc,IACN,WAAa,IAAMpc,EAAMoc,GAAc3D,EAAO4D,OAGO,CACzD9D,SAAUxa,EAAKue,WAAWF,KCdlC,MAAMK,GAAgB,CAAChf,EAAQif,MACtBA,IAGIjf,IAAWif,GAITD,GAAchf,EAAQif,EAAMC,gBCfrCC,GAAQC,GAAQA,ECUtB,SAASC,GAA0B/X,EAAMuT,GACrC,IAAKA,EACD,OACJ,MAAMyE,EAAwB,IAAIC,aAAa,UAAYjY,GAC3DuT,EAAQyE,EAAuBlE,GAAiBkE,ICTpD,MAAME,GAAoB,IAAIC,QAMxBC,GAAY,IAAID,QAChBE,GAAwBC,IAC1B,MAAMnC,EAAW+B,GAAkB9jB,IAAIkkB,EAAM/L,QAC7C4J,GAAYA,EAASmC,IAEnBC,GAA4BC,IAC9BA,EAAQva,QAAQoa,KAqBpB,SAASI,GAAoBjI,EAASlF,EAAS6K,GAC3C,MAAMuC,EApBV,UAAkC,KAAEC,KAASrN,IACzC,MAAMsN,EAAaD,GAAQxhB,SAItBihB,GAAU/S,IAAIuT,IACfR,GAAU9S,IAAIsT,EAAY,IAE9B,MAAMC,EAAgBT,GAAUhkB,IAAIwkB,GAC9B9gB,EAAMghB,KAAKC,UAAUzN,GAQ3B,OAHKuN,EAAc/gB,KACf+gB,EAAc/gB,GAAO,IAAIkhB,qBAAqBT,GAA0B,CAAEI,KAAAA,KAASrN,KAEhFuN,EAAc/gB,GAGamhB,CAAyB3N,GAG3D,OAFA4M,GAAkB5S,IAAIkL,EAAS2F,GAC/BuC,EAA0BQ,QAAQ1I,GAC3B,KACH0H,GAAkBtB,OAAOpG,GACzBkI,EAA0BS,UAAU3I,ICzC5C,MAAM4I,GAAiB,CACnBrZ,KAAM,EACNsZ,IAAK,GCAT,MAAMC,GAAoB,CACtB/X,OAAQ,CACJ0T,QDAR,cAA4BA,GACxB/f,cACIqkB,SAASnjB,WACTD,KAAKqjB,gBAAiB,EACtBrjB,KAAKsjB,UAAW,EAEpBC,gBACIvjB,KAAKwO,UACL,MAAM,SAAEgV,EAAW,IAAOxjB,KAAK6C,KAAKue,YAC9B,KAAEoB,EAAMnP,OAAQoQ,EAAU,OAAEC,EAAS,OAAM,KAAEC,GAASH,EACtDrO,EAAU,CACZqN,KAAMA,EAAOA,EAAK7W,aAAUvB,EAC5BqZ,WAAAA,EACAG,UAA6B,kBAAXF,EAAsBA,EAAST,GAAeS,IA+BpE,OAAOpB,GAAoBtiB,KAAK6C,KAAK8I,QAASwJ,GA7BhBgN,IAC1B,MAAM,eAAE0B,GAAmB1B,EAI3B,GAAIniB,KAAKsjB,WAAaO,EAClB,OAMJ,GALA7jB,KAAKsjB,SAAWO,EAKZF,IAASE,GAAkB7jB,KAAKqjB,eAChC,OAEKQ,IACL7jB,KAAKqjB,gBAAiB,GAEtBrjB,KAAK6C,KAAKkL,gBACV/N,KAAK6C,KAAKkL,eAAeuT,UAAU,cAAeuC,GAMtD,MAAM,gBAAEC,EAAe,gBAAEC,GAAoB/jB,KAAK6C,KAAKue,WACjDpB,EAAW6D,EAAiBC,EAAkBC,EACpD/D,GAAYA,EAASmC,MAI7B5T,QACIvO,KAAKujB,gBAET5V,SACI,GAAoC,qBAAzBkV,qBACP,OACJ,MAAM,MAAE/d,EAAK,UAAEkW,GAAchb,KAAK6C,KACR,CAAC,SAAU,SAAU,QAAQ+G,KAO/D,UAAkC,SAAE4Z,EAAW,KAAQA,SAAUQ,EAAe,IAAO,IACnF,OAAQna,GAAS2Z,EAAS3Z,KAAUma,EAAana,GAReoa,CAAyBnf,EAAOkW,KAExFhb,KAAKujB,gBAGb/U,cCxDAtD,IAAK,CACD4T,QHMR,cAA2BA,GACvB/f,cACIqkB,SAASnjB,WACTD,KAAKkkB,qBAAuBxC,GAC5B1hB,KAAKmkB,mBAAqBzC,GAC1B1hB,KAAKokB,0BAA4B1C,GACjC1hB,KAAKqkB,kBAAoB,CAACC,EAAYC,KAElC,GADAvkB,KAAKmkB,qBACDnkB,KAAKwkB,WACL,OACJ,MAAM1f,EAAQ9E,KAAK6C,KAAKue,WAelBqD,EAA0B3G,GAAgB/c,OAAQ,aAdhC,CAAC2jB,EAAUC,KAC/B,IAAK3kB,KAAK4kB,gBACN,OACJ,MAAM,MAAE1N,EAAK,YAAE2N,GAAgB7kB,KAAK6C,KAAKue,WACzC,WAAa,KAKRG,GAAcvhB,KAAK6C,KAAK8I,QAAS+Y,EAAStO,QAErCc,GAASA,EAAMwN,EAAUC,GADzBE,GAAeA,EAAYH,EAAUC,QAImC,CAAEtH,UAAWvY,EAAMoS,OAASpS,EAAmB,eAC/HggB,EAA8BhH,GAAgB/c,OAAQ,iBAAiB,CAACgkB,EAAaC,IAAehlB,KAAKilB,YAAYF,EAAaC,IAAa,CAAE3H,UAAWvY,EAAM+f,aAAe/f,EAAuB,mBAC9M9E,KAAKmkB,mBAAqBlG,GAAKwG,EAAyBK,GACxD9kB,KAAKklB,WAAWZ,EAAYC,IAEhCvkB,KAAKmlB,qBAAuB,KACxB,MAmBMC,EAAwBlI,GAAYld,KAAK6C,KAAK8I,QAAS,WAnBtC0Z,IACnB,GAAyB,UAArBA,EAAa1jB,KAAmB3B,KAAKwkB,WACrC,OAWJxkB,KAAKmkB,qBACLnkB,KAAKmkB,mBAAqBjH,GAAYld,KAAK6C,KAAK8I,QAAS,SAXpC2Z,IACM,UAAnBA,EAAW3jB,KAAoB3B,KAAK4kB,iBAExChD,GAA0B,MAAM,CAACrE,EAAO4D,KACpC,MAAM,MAAEjK,GAAUlX,KAAK6C,KAAKue,WACxBlK,GACA,WAAa,IAAMA,EAAMqG,EAAO4D,WAM5CS,GAA0B,QAAQ,CAACrE,EAAO4D,KACtCnhB,KAAKklB,WAAW3H,EAAO4D,SASzBoE,EAAqBrI,GAAYld,KAAK6C,KAAK8I,QAAS,QALvC,KACV3L,KAAKwkB,YAEV5C,GAA0B,UAAU,CAACmD,EAAaC,IAAehlB,KAAKilB,YAAYF,EAAaC,QAGnGhlB,KAAKokB,0BAA4BnG,GAAKmH,EAAuBG,IAGrEL,WAAW3H,EAAO4D,GACdnhB,KAAKwkB,YAAa,EAClB,MAAM,WAAErN,EAAU,SAAEC,GAAapX,KAAK6C,KAAKue,WAIvChK,GAAYpX,KAAK6C,KAAKkL,gBACtB/N,KAAK6C,KAAKkL,eAAeuT,UAAU,YAAY,GAE/CnK,GACA,WAAa,IAAMA,EAAWoG,EAAO4D,KAG7CyD,gBACI5kB,KAAKmkB,qBACLnkB,KAAKwkB,YAAa,EAKlB,OAJcxkB,KAAK6C,KAAKue,WACdhK,UAAYpX,KAAK6C,KAAKkL,gBAC5B/N,KAAK6C,KAAKkL,eAAeuT,UAAU,YAAY,IAE3C1C,KAEZqG,YAAY1H,EAAO4D,GACf,IAAKnhB,KAAK4kB,gBACN,OACJ,MAAM,YAAEC,GAAgB7kB,KAAK6C,KAAKue,WAC9ByD,GACA,WAAa,IAAMA,EAAYtH,EAAO4D,KAG9C5S,QACI,MAAMzJ,EAAQ9E,KAAK6C,KAAKue,WAClBoE,EAAwB1H,GAAgB9d,KAAK6C,KAAK8I,QAAS,cAAe3L,KAAKqkB,kBAAmB,CAAEhH,UAAWvY,EAAMqS,YAAcrS,EAAsB,kBACzJ2gB,EAAsBvI,GAAYld,KAAK6C,KAAK8I,QAAS,QAAS3L,KAAKmlB,sBACzEnlB,KAAKkkB,qBAAuBjG,GAAKuH,EAAuBC,GAE5DjX,UACIxO,KAAKkkB,uBACLlkB,KAAKmkB,qBACLnkB,KAAKokB,+BGvGTpZ,MAAO,CACH8T,QCTR,cAA2BA,GACvB/f,cACIqkB,SAASnjB,WACTD,KAAKihB,UAAW,EAEpByE,UACI,IAAIC,GAAiB,EAOrB,IACIA,EAAiB3lB,KAAK6C,KAAK8I,QAAQia,QAAQ,kBAE/C,MAAOxoB,GACHuoB,GAAiB,EAEhBA,GAAmB3lB,KAAK6C,KAAKkL,iBAElC/N,KAAK6C,KAAKkL,eAAeuT,UAAU,cAAc,GACjDthB,KAAKihB,UAAW,GAEpB4E,SACS7lB,KAAKihB,UAAajhB,KAAK6C,KAAKkL,iBAEjC/N,KAAK6C,KAAKkL,eAAeuT,UAAU,cAAc,GACjDthB,KAAKihB,UAAW,GAEpB1S,QACIvO,KAAKwO,QAAUyP,GAAKf,GAAYld,KAAK6C,KAAK8I,QAAS,SAAS,IAAM3L,KAAK0lB,YAAYxI,GAAYld,KAAK6C,KAAK8I,QAAS,QAAQ,IAAM3L,KAAK6lB,YAEzIrX,cDtBAvD,MAAO,CACH6T,QNQR,cAA2BA,GACvBvQ,QACIvO,KAAKwO,QAAUyP,GAAK+C,GAAchhB,KAAK6C,MAAM,GAAOme,GAAchhB,KAAK6C,MAAM,IAEjF2L,eQ5BJ,SAASsX,GAAeC,EAAMC,GAC1B,IAAK5c,MAAMC,QAAQ2c,GACf,OAAO,EACX,MAAMC,EAAaD,EAAK3kB,OACxB,GAAI4kB,IAAeF,EAAK1kB,OACpB,OAAO,EACX,IAAK,IAAI9D,EAAI,EAAGA,EAAI0oB,EAAY1oB,IAC5B,GAAIyoB,EAAKzoB,KAAOwoB,EAAKxoB,GACjB,OAAO,EAEf,OAAO,ECQX,SAAS2oB,GAAe/Y,EAAemO,EAAYzM,GAC/C,MAAM/J,EAAQqI,EAAciU,WAC5B,OAAO/F,GAAwBvW,EAAOwW,OAAuBlR,IAAXyE,EAAuBA,EAAS/J,EAAM+J,OAf5F,SAAoB1B,GAChB,MAAMxB,EAAU,GAEhB,OADAwB,EAAc0M,OAAO/R,SAAQ,CAAC1J,EAAOuD,IAASgK,EAAQhK,GAAOvD,EAAMH,QAC5D0N,EAYyFwa,CAAWhZ,GAP/G,SAAqBA,GACjB,MAAMiZ,EAAW,GAEjB,OADAjZ,EAAc0M,OAAO/R,SAAQ,CAAC1J,EAAOuD,IAASykB,EAASzkB,GAAOvD,EAAM4R,gBAC7DoW,EAIoHpW,CAAY7C,IClB3I,MACMkZ,GAA+B,QAAUpM,GADjB,kBCA9B,IAAIqM,GAAU5E,GACV6E,GAAY7E,GCGhB,MAAM8E,GAAyBC,GAAsB,IAAVA,EACrCC,GAAyBC,GAAiBA,EAAe,ICPzDC,IACO,ECDPC,GAAsBC,GAAW1d,MAAMC,QAAQyd,IAAgC,kBAAdA,EAAO,GCE9E,SAASC,GAAuBD,GAC5B,OAAO/c,SAAS+c,GACO,kBAAXA,GAAuBE,GAAqBF,IACpDD,GAAmBC,IAClB1d,MAAMC,QAAQyd,IAAWA,EAAOG,MAAMF,KAE/C,MAAMG,GAAsB,EAAExmB,EAAGuG,EAAGtJ,EAAGC,KAAO,gBAAgB8C,MAAMuG,MAAMtJ,MAAMC,KAC1EopB,GAAuB,CACzBG,OAAQ,SACRC,KAAM,OACNC,OAAQ,UACRC,QAAS,WACTC,UAAW,cACXC,OAAQN,GAAoB,CAAC,EAAG,IAAM,IAAM,IAC5CO,QAASP,GAAoB,CAAC,IAAM,EAAG,EAAG,MAC1CQ,OAAQR,GAAoB,CAAC,IAAM,IAAM,KAAO,MAChDS,QAAST,GAAoB,CAAC,IAAM,KAAM,IAAM,OAEpD,SAASU,GAAwBd,GAC7B,GAAKA,EAEL,OAAOD,GAAmBC,GACpBI,GAAoBJ,GACpB1d,MAAMC,QAAQyd,GACVA,EAAOe,IAAID,IACXZ,GAAqBF,GC3BnC,MAAMgB,GAAe,CACjBC,MAAO,IAAMjqB,OAAOY,eAAejB,KAAKuqB,QAAQvpB,UAAW,YAEzDwpB,GAAU,GACVC,GAAW,GAIjB,IAAK,MAAMvmB,MAAOmmB,GACdI,GAASvmB,IAAO,UACSyI,IAAjB6d,GAAQtmB,MACRsmB,GAAQtmB,IAAOmmB,GAAanmB,OACzBsmB,GAAQtmB,KCQvB,MAAMwmB,GAAa,CAACjrB,EAAGkrB,EAAIC,OAAU,EAAM,EAAMA,EAAK,EAAMD,GAAMlrB,GAAK,EAAMmrB,EAAK,EAAMD,IAAOlrB,EAAI,EAAMkrB,GACrGlrB,EAoBJ,SAASorB,GAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAOhH,GACX,MAAMiH,EAAYC,GArBtB,SAAyB1Y,EAAG2Y,EAAYC,EAAYP,EAAKE,GACrD,IAAIM,EACAC,EACAzrB,EAAI,EACR,GACIyrB,EAAWH,GAAcC,EAAaD,GAAc,EACpDE,EAAWZ,GAAWa,EAAUT,EAAKE,GAAOvY,EACxC6Y,EAAW,EACXD,EAAaE,EAGbH,EAAaG,QAEZtjB,KAAKC,IAAIojB,GAfO,QAgBnBxrB,EAfuB,IAgB7B,OAAOyrB,EAMkBC,CAAgBL,EAAI,EAAG,EAAGL,EAAKE,GAExD,OAAQvrB,GAAY,IAANA,GAAiB,IAANA,EAAUA,EAAIirB,GAAWQ,EAASzrB,GAAIsrB,EAAKE,GC7CxE,MAAMrB,GAASiB,GAAY,IAAM,EAAG,EAAG,GACjChB,GAAUgB,GAAY,EAAG,EAAG,IAAM,GAClCf,GAAYe,GAAY,IAAM,EAAG,IAAM,GCFvCY,GAAgBpC,GAAYnoB,GAAMA,GAAK,GAAMmoB,EAAO,EAAInoB,GAAK,GAAK,EAAImoB,EAAO,GAAK,EAAInoB,KAAO,ECA7FwqB,GAAiBrC,GAAYnoB,GAAM,EAAImoB,EAAO,EAAInoB,GCClD6oB,GAAU7oB,GAAM,EAAI+G,KAAK0jB,IAAI1jB,KAAK2jB,KAAK1qB,IACvC8oB,GAAU0B,GAAc3B,IACxB8B,GAAYJ,GAAazB,ICDzBE,GAAUW,GAAY,IAAM,KAAM,IAAM,KACxCZ,GAASyB,GAAcxB,IACvB4B,GAAYL,GAAaxB,ICEzB8B,GAAe,CACjBrC,OAAQzF,GACR2F,OAAM,GACNE,UAAS,GACTD,QAAO,GACPE,OAAM,GACN8B,UAAS,GACT7B,QAAO,GACPC,OAAM,GACN6B,UAAS,GACT5B,QAAO,GACP8B,WCjBgB9qB,IAAOA,GAAK,GAAK,EAAI,GAAM+oB,GAAO/oB,GAAK,IAAO,EAAI+G,KAAKgkB,IAAI,GAAI,IAAM/qB,EAAI,MDmBvFgrB,GAA8BrO,IAChC,GAAIlS,MAAMC,QAAQiS,GAAa,CAE3BiL,GAAgC,IAAtBjL,EAAWja,OAAc,2DACnC,MAAOuoB,EAAIC,EAAIC,EAAIC,GAAMzO,EACzB,OAAOgN,GAAYsB,EAAIC,EAAIC,EAAIC,GAE9B,MAA0B,kBAAfzO,GAEZiL,QAAuCnc,IAA7Bof,GAAalO,GAA2B,wBAAwBA,MACnEkO,GAAalO,IAEjBA,GE3BL0O,GAAgB,CAACjiB,EAAMkiB,IAAc9gB,GAChCY,QAASsH,EAASlI,IAAMiI,EAAiB5B,KAAKrG,IAAMA,EAAE2G,WAAW/H,IACnEkiB,GAAYnsB,OAAOW,UAAUC,eAAejB,KAAK0L,EAAG8gB,IAEvDC,GAAa,CAACC,EAAOC,EAAOC,IAAWlhB,IACzC,IAAKkI,EAASlI,GACV,OAAOA,EACX,MAAOzI,EAAGuG,EAAGtJ,EAAGoT,GAAS5H,EAAEmhB,MAAMpZ,GACjC,MAAO,CACH,CAACiZ,GAAQrZ,WAAWpQ,GACpB,CAAC0pB,GAAQtZ,WAAW7J,GACpB,CAACojB,GAAQvZ,WAAWnT,GACpBoT,WAAiB3G,IAAV2G,EAAsBD,WAAWC,GAAS,ICZnDwZ,GAAU,IACT3Z,EACH5O,UAAYmH,GAAMzD,KAAKiC,MAHN,CAACwB,GAAMwH,EAAM,EAAG,IAAKxH,GAGTqhB,CAAarhB,KAExCshB,GAAO,CACTjb,KAAMwa,GAAc,MAAO,OAC3BnZ,MAAOqZ,GAAW,MAAO,QAAS,QAClCloB,UAAW,EAAG0oB,IAAAA,EAAKC,MAAAA,EAAOC,KAAAA,EAAM7Z,MAAO8Z,EAAU,KAAQ,QACrDN,GAAQvoB,UAAU0oB,GAClB,KACAH,GAAQvoB,UAAU2oB,GAClB,KACAJ,GAAQvoB,UAAU4oB,GAClB,KACA3Z,EAASF,EAAM/O,UAAU6oB,IACzB,KCYR,MAAMC,GAAM,CACRtb,KAAMwa,GAAc,KACpBnZ,MAhCJ,SAAkB1H,GACd,IAAI7L,EAAI,GACJuJ,EAAI,GACJI,EAAI,GACJvG,EAAI,GAmBR,OAjBIyI,EAAE9H,OAAS,GACX/D,EAAI6L,EAAEiS,UAAU,EAAG,GACnBvU,EAAIsC,EAAEiS,UAAU,EAAG,GACnBnU,EAAIkC,EAAEiS,UAAU,EAAG,GACnB1a,EAAIyI,EAAEiS,UAAU,EAAG,KAInB9d,EAAI6L,EAAEiS,UAAU,EAAG,GACnBvU,EAAIsC,EAAEiS,UAAU,EAAG,GACnBnU,EAAIkC,EAAEiS,UAAU,EAAG,GACnB1a,EAAIyI,EAAEiS,UAAU,EAAG,GACnB9d,GAAKA,EACLuJ,GAAKA,EACLI,GAAKA,EACLvG,GAAKA,GAEF,CACHgqB,IAAKK,SAASztB,EAAG,IACjBqtB,MAAOI,SAASlkB,EAAG,IACnB+jB,KAAMG,SAAS9jB,EAAG,IAClB8J,MAAOrQ,EAAIqqB,SAASrqB,EAAG,IAAM,IAAM,IAMvCsB,UAAWyoB,GAAKzoB,WC/BdgpB,GAAO,CACTxb,KAAMwa,GAAc,MAAO,OAC3BnZ,MAAOqZ,GAAW,MAAO,aAAc,aACvCloB,UAAW,EAAGipB,IAAAA,EAAKC,WAAAA,EAAYC,UAAAA,EAAWpa,MAAO8Z,EAAU,KAC/C,QACJnlB,KAAKiC,MAAMsjB,GACX,KACAtZ,GAAQ3P,UAAUiP,EAASia,IAC3B,KACAvZ,GAAQ3P,UAAUiP,EAASka,IAC3B,KACAla,EAASF,EAAM/O,UAAU6oB,IACzB,KCZNO,GAAQ,CACV5b,KAAOrG,GAAMshB,GAAKjb,KAAKrG,IAAM2hB,GAAItb,KAAKrG,IAAM6hB,GAAKxb,KAAKrG,GACtD0H,MAAQ1H,GACAshB,GAAKjb,KAAKrG,GACHshB,GAAK5Z,MAAM1H,GAEb6hB,GAAKxb,KAAKrG,GACR6hB,GAAKna,MAAM1H,GAGX2hB,GAAIja,MAAM1H,GAGzBnH,UAAYmH,GACDkI,EAASlI,GACVA,EACAA,EAAEzK,eAAe,OACb+rB,GAAKzoB,UAAUmH,GACf6hB,GAAKhpB,UAAUmH,ICF3ByS,GAAM,CAACyP,EAAMC,EAAIC,KAAcA,EAAWF,EAAOE,EAAWD,EAAKD,ECpBvE,SAASG,GAAS7sB,EAAG8sB,EAAGvuB,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACDyB,EAAc,GAAT8sB,EAAI9sB,GAASzB,EACzBA,EAAI,GACGuuB,EACPvuB,EAAI,EAAI,EACDyB,GAAK8sB,EAAI9sB,IAAM,EAAI,EAAIzB,GAAK,EAChCyB,ECFX,MAAM+sB,GAAiB,CAACL,EAAMC,EAAIniB,KAC9B,MAAMwiB,EAAWN,EAAOA,EACxB,OAAO3lB,KAAKkmB,KAAKlmB,KAAKyC,IAAI,EAAGgB,GAAKmiB,EAAKA,EAAKK,GAAYA,KAEtDE,GAAa,CAACf,GAAKL,GAAMO,IAE/B,SAASc,GAAOV,GACZ,MAAMrjB,GAFYoB,EAEQiiB,EAFFS,GAAWE,MAAMhkB,GAASA,EAAKyH,KAAKrG,MAA3C,IAACA,EAGlBod,GAAUxc,QAAQhC,GAAO,IAAIqjB,yEAC7B,IAAIY,EAAQjkB,EAAK8I,MAAMua,GAKvB,OAJIrjB,IAASijB,KAETgB,EDRR,UAAoB,IAAEf,EAAG,WAAEC,EAAU,UAAEC,EAAS,MAAEpa,IAC9Cka,GAAO,IAEPE,GAAa,IACb,IAAIT,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GALAM,GAAc,IAQT,CACD,MAAMO,EAAIN,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrCvsB,EAAI,EAAIwsB,EAAYM,EAC1Bf,EAAMc,GAAS7sB,EAAG8sB,EAAGR,EAAM,EAAI,GAC/BN,EAAQa,GAAS7sB,EAAG8sB,EAAGR,GACvBL,EAAOY,GAAS7sB,EAAG8sB,EAAGR,EAAM,EAAI,QAThCP,EAAMC,EAAQC,EAAOO,EAWzB,MAAO,CACHT,IAAKhlB,KAAKiC,MAAY,IAAN+iB,GAChBC,MAAOjlB,KAAKiC,MAAc,IAARgjB,GAClBC,KAAMllB,KAAKiC,MAAa,IAAPijB,GACjB7Z,MAAAA,GCfQkb,CAAWD,IAEhBA,EAEX,MAAME,GAAW,CAACb,EAAMC,KACpB,MAAMa,EAAWL,GAAOT,GAClBe,EAASN,GAAOR,GAChBe,EAAU,IAAKF,GACrB,OAAQhjB,IACJkjB,EAAQ3B,IAAMgB,GAAeS,EAASzB,IAAK0B,EAAO1B,IAAKvhB,GACvDkjB,EAAQ1B,MAAQe,GAAeS,EAASxB,MAAOyB,EAAOzB,MAAOxhB,GAC7DkjB,EAAQzB,KAAOc,GAAeS,EAASvB,KAAMwB,EAAOxB,KAAMzhB,GAC1DkjB,EAAQtb,MAAQ6K,GAAIuQ,EAASpb,MAAOqb,EAAOrb,MAAO5H,GAC3CshB,GAAKzoB,UAAUqqB,KCrB9B,MAAMC,GAAkB,CACpBC,M5EZqB,gF4EarBC,SAAU,OACVjc,MAAO,OACPM,MAAO6Q,IAEL+K,GAAiB,CACnBF,MAAOpb,EACPqb,SAAU,SACVjc,MAAO,OACPM,MAAOua,GAAMva,OAEX6b,GAAkB,CACpBH,MAAOrb,EACPsb,SAAU,UACVjc,MAAO,OACPM,MAAOD,EAAOC,OAElB,SAAS8b,GAASxL,GAAM,MAAEoL,EAAK,SAAEC,EAAQ,MAAEjc,EAAK,MAAEM,IAC9C,MAAM+U,EAAUzE,EAAKyL,UAAUtC,MAAMiC,GAChC3G,IAELzE,EAAK,MAAQqL,GAAY5G,EAAQvkB,OACjC8f,EAAKyL,UAAYzL,EAAKyL,UAAUzS,QAAQoS,EAAOhc,GAC/C4Q,EAAKtH,OAAOyG,QAAQsF,EAAQiC,IAAIhX,KAEpC,SAASgc,GAAoBzuB,GACzB,MAAM0uB,EAAgB1uB,EAAM0B,WACtBqhB,EAAO,CACT/iB,MAAO0uB,EACPF,UAAWE,EACXjT,OAAQ,GACRkT,QAAS,EACTC,UAAW,EACXC,WAAY,GAMhB,OAJI9L,EAAK/iB,MAAMkR,SAAS,WACpBqd,GAASxL,EAAMmL,IACnBK,GAASxL,EAAMsL,IACfE,GAASxL,EAAMuL,IACRvL,EAEX,SAAS+L,GAAkB/jB,GACvB,OAAO0jB,GAAoB1jB,GAAG0Q,OAElC,SAASsT,GAAkB9W,GACvB,MAAM,OAAEwD,EAAM,UAAEmT,EAAS,QAAED,EAAO,UAAEH,GAAcC,GAAoBxW,GAChE+W,EAAYvT,EAAOxY,OACzB,OAAQ8H,IACJ,IAAIkkB,EAAST,EACb,IAAK,IAAIrvB,EAAI,EAAGA,EAAI6vB,EAAW7vB,IAEvB8vB,EADA9vB,EAAIwvB,EACKM,EAAOlT,QAAQmS,GAAgB/b,MAAOpH,EAAE5L,IAE5CA,EAAIwvB,EAAUC,EACVK,EAAOlT,QAAQsS,GAAelc,MAAO6a,GAAMppB,UAAUmH,EAAE5L,KAGvD8vB,EAAOlT,QAAQuS,GAAgBnc,MAAOU,EAAS9H,EAAE5L,KAGlE,OAAO8vB,GAGf,MAAMC,GAAwBnkB,GAAmB,kBAANA,EAAiB,EAAIA,EAMhE,MAAMokB,GAAU,CACZ/d,KA/EJ,SAAcrG,GACV,IAAIuO,EAAI8V,EACR,OAAQC,MAAMtkB,IACVkI,EAASlI,MACwB,QAA9BuO,EAAKvO,EAAEmhB,MAAMpZ,UAAgC,IAAPwG,OAAgB,EAASA,EAAGrW,SAAW,KAC3C,QAA9BmsB,EAAKrkB,EAAEmhB,MAAMnZ,UAAgC,IAAPqc,OAAgB,EAASA,EAAGnsB,SAAW,GAChF,GA0ERwP,MAAOqc,GACPC,kBAAAA,GACAO,kBATJ,SAA2BvkB,GACvB,MAAMwkB,EAAST,GAAkB/jB,GAEjC,OADoBgkB,GAAkBhkB,EAC/BykB,CAAYD,EAAO9F,IAAIyF,OC3E5BO,GAAe,CAACjW,EAAQxB,IAAYzX,GAAM,GAAGA,EAAI,EAAIyX,EAASwB,IACpE,SAASkW,GAASlW,EAAQxB,GACtB,MAAsB,kBAAXwB,EACCzO,GAAMyS,GAAIhE,EAAQxB,EAAQjN,GAE7BiiB,GAAM5b,KAAKoI,GACTsU,GAAStU,EAAQxB,GAGjBwB,EAAO9H,WAAW,QACnB+d,GAAajW,EAAQxB,GACrB2X,GAAWnW,EAAQxB,GAGjC,MAAM4X,GAAW,CAAC3C,EAAMC,KACpB,MAAM+B,EAAS,IAAIhC,GACb+B,EAAYC,EAAOhsB,OACnB4sB,EAAa5C,EAAKxD,KAAI,CAACqG,EAAU3wB,IAAMuwB,GAASI,EAAU5C,EAAG/tB,MACnE,OAAQ4L,IACJ,IAAK,IAAI5L,EAAI,EAAGA,EAAI6vB,EAAW7vB,IAC3B8vB,EAAO9vB,GAAK0wB,EAAW1wB,GAAG4L,GAE9B,OAAOkkB,IAGTc,GAAY,CAACvW,EAAQxB,KACvB,MAAMiX,EAAS,IAAKzV,KAAWxB,GACzB6X,EAAa,GACnB,IAAK,MAAMtsB,KAAO0rB,OACMjjB,IAAhBwN,EAAOjW,SAAsCyI,IAAhBgM,EAAOzU,KACpCssB,EAAWtsB,GAAOmsB,GAASlW,EAAOjW,GAAMyU,EAAOzU,KAGvD,OAAQwH,IACJ,IAAK,MAAMxH,KAAOssB,EACdZ,EAAO1rB,GAAOssB,EAAWtsB,GAAKwH,GAElC,OAAOkkB,IAGTU,GAAa,CAACnW,EAAQxB,KACxB,MAAMgY,EAAWb,GAAQJ,kBAAkB/W,GACrCiY,EAAcxB,GAAoBjV,GAClC0W,EAAczB,GAAoBzW,GAIxC,OAHuBiY,EAAYtB,UAAYuB,EAAYvB,SACvDsB,EAAYrB,YAAcsB,EAAYtB,WACtCqB,EAAYpB,YAAcqB,EAAYrB,WAE/BhP,GAAK+P,GAASK,EAAYxU,OAAQyU,EAAYzU,QAASuU,IAG9D9H,IAAQ,EAAM,mBAAmB1O,WAAgBxB,6KAC1CyX,GAAajW,EAAQxB,KC/C9BmV,GAAW,CAACF,EAAMC,EAAIltB,KACxB,MAAMmwB,EAAmBjD,EAAKD,EAC9B,OAA4B,IAArBkD,EAAyB,GAAKnwB,EAAQitB,GAAQkD,GCJnDC,GAAY,CAACnD,EAAMC,IAAQ3sB,GAAMid,GAAIyP,EAAMC,EAAI3sB,GAgBrD,SAAS8vB,GAAapB,EAAQjG,EAAMsH,GAChC,MAAMC,EAAS,GACTC,EAAeF,IAhBJ,kBADOvlB,EAiB+BkkB,EAAO,IAfnDmB,GAEW,kBAANrlB,EACLiiB,GAAM5b,KAAKrG,GAAK+iB,GAAW6B,GAE7B3kB,MAAMC,QAAQF,GACZ6kB,GAEW,kBAAN7kB,EACLglB,GAEJK,IAbX,IAA4BrlB,EAkBxB,MAAM0lB,EAAYxB,EAAOhsB,OAAS,EAClC,IAAK,IAAI9D,EAAI,EAAGA,EAAIsxB,EAAWtxB,IAAK,CAChC,IAAIuxB,EAAQF,EAAavB,EAAO9vB,GAAI8vB,EAAO9vB,EAAI,IAC/C,GAAI6pB,EAAM,CACN,MAAM2H,EAAiB3lB,MAAMC,QAAQ+d,GAAQA,EAAK7pB,IAAMmkB,GAAO0F,EAC/D0H,EAAQ7Q,GAAK8Q,EAAgBD,GAEjCH,EAAOrO,KAAKwO,GAEhB,OAAOH,EAqBX,SAASK,GAAYC,EAAO5B,GAAU1c,MAAOue,GAAU,EAAI,KAAE9H,EAAI,MAAE0H,GAAU,IACzE,MAAMK,EAAcF,EAAM5tB,OAM1B,GALAklB,GAAU4I,IAAgB9B,EAAOhsB,OAAQ,wDAKrB,IAAhB8tB,EACA,MAAO,IAAM9B,EAAO,GAEpB4B,EAAM,GAAKA,EAAME,EAAc,KAC/BF,EAAQ,IAAIA,GAAOG,UACnB/B,EAAS,IAAIA,GAAQ+B,WAEzB,MAAMT,EAASF,GAAapB,EAAQjG,EAAM0H,GACpCD,EAAYF,EAAOttB,OACnBguB,EAAgBlmB,IAClB,IAAI5L,EAAI,EACR,GAAIsxB,EAAY,EACZ,KAAOtxB,EAAI0xB,EAAM5tB,OAAS,KAClB8H,EAAI8lB,EAAM1xB,EAAI,IADOA,KAKjC,MAAM+xB,EAAkB/D,GAAS0D,EAAM1xB,GAAI0xB,EAAM1xB,EAAI,GAAI4L,GACzD,OAAOwlB,EAAOpxB,GAAG+xB,IAErB,OAAOJ,EACA/lB,GAAMkmB,EAAa1e,EAAMse,EAAM,GAAIA,EAAME,EAAc,GAAIhmB,IAC5DkmB,ECtFV,SAASE,GAAcC,GACnB,MAAM3X,EAAS,CAAC,GAEhB,OCFJ,SAAoBA,EAAQ4X,GACxB,MAAMvnB,EAAM2P,EAAOA,EAAOxW,OAAS,GACnC,IAAK,IAAI9D,EAAI,EAAGA,GAAKkyB,EAAWlyB,IAAK,CACjC,MAAMmyB,EAAiBnE,GAAS,EAAGkE,EAAWlyB,GAC9Csa,EAAOyI,KAAK1E,GAAI1T,EAAK,EAAGwnB,KDH5BC,CAAW9X,EAAQ2X,EAAInuB,OAAS,GACzBwW,EEKX,SAAS+X,IAAU,SAAEC,EAAW,IAAKD,UAAWE,EAAc,MAAEC,EAAK,KAAE3I,EAAO,cAK1E,MAAM4I,ECfY,CAAC5I,GACZhe,MAAMC,QAAQ+d,IAA4B,kBAAZA,EAAK,GDclB6I,CAAc7I,GAChCA,EAAKS,IAAI8B,IACTA,GAA2BvC,GAK3BzjB,EAAQ,CACVusB,MAAM,EACN9xB,MAAO0xB,EAAe,IAKpBK,EE7BV,SAA8BtY,EAAQgY,GAClC,OAAOhY,EAAOgQ,KAAKhqB,GAAMA,EAAIgyB,IF4BPO,CAGtBL,GAASA,EAAM1uB,SAAWyuB,EAAezuB,OACnC0uB,EACAR,GAAcO,GAAiBD,GAC/BQ,EAAoBrB,GAAYmB,EAAeL,EAAgB,CACjE1I,KAAMhe,MAAMC,QAAQ2mB,GACdA,GA9BSnW,EA+BKiW,EA/BGhJ,EA+BakJ,EA9BjCnW,EAAOgO,KAAI,IAAMf,GAAUS,KAAWtf,OAAO,EAAG4R,EAAOxY,OAAS,MAD3E,IAAuBwY,EAAQiN,EAiC3B,MAAO,CACHwJ,mBAAoBT,EACpB9J,KAAO7oB,IACHyG,EAAMvF,MAAQiyB,EAAkBnzB,GAChCyG,EAAMusB,KAAOhzB,GAAK2yB,EACXlsB,IGvCnB,SAAS4sB,GAAkBnK,EAAUoK,GACjC,OAAOA,EAAgBpK,GAAY,IAAOoK,GAAiB,ECJ/D,SAASC,GAAsBC,EAAcxzB,EAAGyO,GAC5C,MAAMglB,EAAQjrB,KAAKyC,IAAIjL,EAFI,EAEwB,GACnD,OAAOqzB,GAAkB5kB,EAAU+kB,EAAaC,GAAQzzB,EAAIyzB,GCDhE,MAAMC,GAAU,KAKhB,SAASC,IAAW,SAAEhB,EAAW,IAAG,OAAEiB,EAAS,IAAI,SAAE1K,EAAW,EAAC,KAAE2K,EAAO,IACtE,IAAIC,EACAC,EACJ3K,GAAQuJ,GAAYrJ,GANJ,IAMwC,8CACxD,IAAI0K,EAAe,EAAIJ,EAIvBI,EAAevgB,EAVA,IACA,EAS8BugB,GAC7CrB,EAAWlf,EAbK,IACA,GAY2B+V,GAAsBmJ,IAC7DqB,EAAe,GAIfF,EAAYG,IACR,MAAMC,EAAmBD,EAAeD,EAClCjS,EAAQmS,EAAmBvB,EAC3BnvB,EAAI0wB,EAAmBhL,EACvBnf,EAAIoqB,GAAgBF,EAAcD,GAClCvzB,EAAI+H,KAAK4rB,KAAKrS,GACpB,OAAO2R,GAAWlwB,EAAIuG,EAAKtJ,GAE/BszB,EAAcE,IACV,MACMlS,EADmBkS,EAAeD,EACPrB,EAC3BjyB,EAAIqhB,EAAQmH,EAAWA,EACvBhpB,EAAIsI,KAAKgkB,IAAIwH,EAAc,GAAKxrB,KAAKgkB,IAAIyH,EAAc,GAAKtB,EAC5DvqB,EAAII,KAAK4rB,KAAKrS,GACdpY,EAAIwqB,GAAgB3rB,KAAKgkB,IAAIyH,EAAc,GAAID,GAErD,QADgBF,EAASG,GAAgBP,GAAU,GAAK,EAAI,KACzChzB,EAAIR,GAAKkI,GAAMuB,KAOtCmqB,EAAYG,GACEzrB,KAAK4rB,KAAKH,EAAetB,KACxBsB,EAAe/K,GAAYyJ,EAAW,GAC1C,KAEXoB,EAAcE,GACAzrB,KAAK4rB,KAAKH,EAAetB,IACIA,EAAWA,GAAvCzJ,EAAW+K,KAI9B,MACMA,EAmBV,SAAyBH,EAAUC,EAAYM,GAC3C,IAAIC,EAASD,EACb,IAAK,IAAIh0B,EAAI,EAAGA,EAHG,GAGiBA,IAChCi0B,GAAkBR,EAASQ,GAAUP,EAAWO,GAEpD,OAAOA,EAxBcC,CAAgBT,EAAUC,EAD1B,EAAIpB,GAGzB,GADAA,EAAWrJ,GAAsBqJ,GAC7BpC,MAAM0D,GACN,MAAO,CACHO,UAAW,IACXC,QAAS,GACT9B,SAAAA,GAGH,CACD,MAAM6B,EAAYhsB,KAAKgkB,IAAIyH,EAAc,GAAKJ,EAC9C,MAAO,CACHW,UAAAA,EACAC,QAAwB,EAAfT,EAAmBxrB,KAAKkmB,KAAKmF,EAAOW,GAC7C7B,SAAAA,IAYZ,SAASwB,GAAgBF,EAAcD,GACnC,OAAOC,EAAezrB,KAAKkmB,KAAK,EAAIsF,EAAeA,GCjFvD,MAAMU,GAAe,CAAC,WAAY,UAC5BC,GAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,GAAa3c,EAAS6D,GAC3B,OAAOA,EAAKpP,MAAMjI,QAAyByI,IAAjB+K,EAAQxT,KAyBtC,SAASowB,IAAO,UAAEnC,EAAS,UAAEoC,EAAS,UAAEC,KAAc9c,IAClD,MAAMyC,EAASgY,EAAU,GACnBxZ,EAASwZ,EAAUA,EAAUvuB,OAAS,GAKtCsC,EAAQ,CAAEusB,MAAM,EAAO9xB,MAAOwZ,IAC9B,UAAE8Z,EAAS,QAAEC,EAAO,KAAEZ,EAAI,SAAE3K,EAAQ,SAAEyJ,EAAQ,uBAAEqC,GA/B1D,SAA0B/c,GACtB,IAAIgd,EAAgB,CAChB/L,SAAU,EACVsL,UAAW,IACXC,QAAS,GACTZ,KAAM,EACNmB,wBAAwB,KACrB/c,GAGP,IAAK2c,GAAa3c,EAAS0c,KACvBC,GAAa3c,EAASyc,IAAe,CACrC,MAAMQ,EAAUvB,GAAW1b,GAC3Bgd,EAAgB,IACTA,KACAC,EACHhM,SAAU,EACV2K,KAAM,GAEVoB,EAAcD,wBAAyB,EAE3C,OAAOC,EAU2EE,CAAiBld,GAC7Fmd,EAAkBlM,GAAYM,GAAsBN,GAAY,EAChE8K,EAAeS,GAAW,EAAIjsB,KAAKkmB,KAAK8F,EAAYX,IACpDwB,EAAenc,EAASwB,EACxB4a,EAAsB9L,GAAsBhhB,KAAKkmB,KAAK8F,EAAYX,IAQlE0B,EAAkB/sB,KAAKC,IAAI4sB,GAAgB,EAGjD,IAAIG,EACJ,GAHAT,IAAcA,EAAYQ,EAAkB,IAAO,GACnDT,IAAcA,EAAYS,EAAkB,KAAQ,IAEhDvB,EAAe,EAAG,CAClB,MAAMyB,EAActB,GAAgBmB,EAAqBtB,GAEzDwB,EAAiBx1B,IACb,MAAM8zB,EAAWtrB,KAAK4rB,KAAKJ,EAAesB,EAAsBt1B,GAChE,OAAQkZ,EACJ4a,IACOsB,EACCpB,EAAesB,EAAsBD,GACrCI,EACAjtB,KAAK0jB,IAAIuJ,EAAcz1B,GACvBq1B,EAAe7sB,KAAKktB,IAAID,EAAcz1B,UAGrD,GAAqB,IAAjBg0B,EAELwB,EAAiBx1B,GAAMkZ,EACnB1Q,KAAK4rB,KAAKkB,EAAsBt1B,IAC3Bq1B,GACID,EAAkBE,EAAsBD,GAAgBr1B,OAEpE,CAED,MAAM21B,EAAoBL,EAAsB9sB,KAAKkmB,KAAKsF,EAAeA,EAAe,GACxFwB,EAAiBx1B,IACb,MAAM8zB,EAAWtrB,KAAK4rB,KAAKJ,EAAesB,EAAsBt1B,GAE1D41B,EAAWptB,KAAKwC,IAAI2qB,EAAoB31B,EAAG,KACjD,OAAQkZ,EACH4a,IACKsB,EACEpB,EAAesB,EAAsBD,GACrC7sB,KAAKqtB,KAAKD,GACVD,EACIN,EACA7sB,KAAKstB,KAAKF,IAClBD,GAGhB,MAAO,CACHvC,mBAAoB4B,GAAyBrC,GAAmB,KAChE9J,KAAO7oB,IACH,MAAMyO,EAAU+mB,EAAcx1B,GAC9B,GAAKg1B,EAqBDvuB,EAAMusB,KAAOhzB,GAAK2yB,MArBO,CACzB,IAAIrU,EAAkB8W,EACZ,IAANp1B,IAOIse,EADA0V,EAAe,EACGT,GAAsBiC,EAAex1B,EAAGyO,GAGxC,GAG1B,MAAMsnB,EAA2BvtB,KAAKC,IAAI6V,IAAoByW,EACxDiB,EAA+BxtB,KAAKC,IAAIyQ,EAASzK,IAAYqmB,EACnEruB,EAAMusB,KACF+C,GAA4BC,EAMpC,OADAvvB,EAAMvF,MAAQuF,EAAMusB,KAAO9Z,EAASzK,EAC7BhI,ICxHnB,SAASwvB,IAAQ,UAAEvD,EAAS,SAAExJ,EAAW,EAAG,MAAEgN,EAAQ,GAAG,aAAEC,EAAe,IAAG,cAAEC,EAAgB,GAAE,gBAAEC,EAAkB,IAAG,aAAEC,EAAY,IAAEtrB,EAAG,IAAEC,EAAG,UAAE6pB,EAAY,GAAG,UAAEC,IAC/J,MAAMra,EAASgY,EAAU,GACnBjsB,EAAQ,CACVusB,MAAM,EACN9xB,MAAOwZ,GAGL6b,EAAmBtqB,QACTiB,IAARlC,EACOC,OACCiC,IAARjC,GAEGzC,KAAKC,IAAIuC,EAAMiB,GAAKzD,KAAKC,IAAIwC,EAAMgB,GAD/BjB,EAC0CC,EAEzD,IAAIurB,EAAYN,EAAQhN,EACxB,MAAMuN,EAAQ/b,EAAS8b,EACjBtd,OAA0BhM,IAAjBopB,EAA6BG,EAAQH,EAAaG,GAK7Dvd,IAAWud,IACXD,EAAYtd,EAASwB,GACzB,MAAMgc,EAAa12B,IAAOw2B,EAAYhuB,KAAK4rB,KAAKp0B,EAAIm2B,GAC9CQ,EAAc32B,GAAMkZ,EAASwd,EAAU12B,GACvC42B,EAAiB52B,IACnB,MAAM+hB,EAAQ2U,EAAU12B,GAClBsb,EAASqb,EAAW32B,GAC1ByG,EAAMusB,KAAOxqB,KAAKC,IAAIsZ,IAAU+S,EAChCruB,EAAMvF,MAAQuF,EAAMusB,KAAO9Z,EAASoC,GAQxC,IAAIub,EACAC,EACJ,MAAMC,EAAsB/2B,IAjCN,IAACiM,GAAAA,EAkCAxF,EAAMvF,WAlCSgM,IAARlC,GAAqBiB,EAAIjB,QAAiBkC,IAARjC,GAAqBgB,EAAIhB,KAoCrF4rB,EAAsB72B,EACtB82B,EAAWjC,GAAO,CACdnC,UAAW,CAACjsB,EAAMvF,MAAOq1B,EAAgB9vB,EAAMvF,QAC/CgoB,SAAUqK,GAAsBoD,EAAY32B,EAAGyG,EAAMvF,OACrDuzB,QAAS2B,EACT5B,UAAW6B,EACXvB,UAAAA,EACAC,UAAAA,MAIR,OADAgC,EAAmB,GACZ,CACH3D,mBAAoB,KACpBvK,KAAO7oB,IAOH,IAAIg3B,GAAkB,EAUtB,OATKF,QAAoC5pB,IAAxB2pB,IACbG,GAAkB,EAClBJ,EAAc52B,GACd+2B,EAAmB/2B,SAMKkN,IAAxB2pB,GAAqC72B,EAAI62B,EAClCC,EAASjO,KAAK7oB,EAAI62B,KAGxBG,GAAmBJ,EAAc52B,GAC3ByG,KC7EvB,MAAMwwB,GAAmBxmB,IACrB,MAAMymB,EAAgB,EAAGxxB,UAAAA,KAAgB+K,EAAO/K,GAChD,MAAO,CACH2G,MAAO,IAAM,UAAa6qB,GAAe,GACzCC,KAAM,IAAMtT,GAAYqT,GAKxBzxB,IAAK,IAAMqc,GAAUE,aAAeF,GAAUpc,UAAY0xB,YAAY3xB,QCP9E,SAAS4xB,GAAsBC,GAC3B,IAAI3E,EAAW,EAEf,IAAIlsB,EAAQ6wB,EAAUzO,KAAK8J,GAC3B,MAAQlsB,EAAMusB,MAAQL,EALG,KAMrBA,GAHa,GAIblsB,EAAQ6wB,EAAUzO,KAAK8J,GAE3B,OAAOA,GATkB,IASiB4E,EAAAA,EAAW5E,ECJzD,MAAM6E,GAAQ,CACVC,MAAOxB,GACPA,QAAO,GACPyB,MAAOhF,GACPA,UAAWA,GACXmC,OAAM,IASV,SAAS8C,IAAa,SAAEC,GAAW,EAAI,MAAEC,EAAQ,EAAC,OAAEC,EAASb,GAAiBvE,UAAWqF,EAAW,KAAEltB,EAAO,YAAW,OAAEmtB,EAAS,EAAC,YAAEC,EAAc,EAAC,WAAEC,EAAa,OAAM,OAAEC,EAAM,OAAEC,EAAM,WAAEC,EAAU,SAAEC,KAAargB,IACjN,IAEIsgB,EACAC,EAHAC,EAAQ,EACRC,GAAa,EAQjB,MAAMC,EAAwB,KAC1BJ,GAA0BA,IAC1BC,EAAyB,IAAII,SAASC,IAClCN,EAAyBM,MAKjC,IAAIC,EADJH,IAEA,MAAMI,EAAmBvB,GAAM3sB,IAAS6nB,GAMxC,IAAIsG,EACAD,IAAqBrG,IACK,kBAAnBqF,EAAY,KACnBiB,EAAwBlH,GAAY,CAAC,EAAG,KAAMiG,EAAa,CACvDtkB,OAAO,IAEXskB,EAAc,CAAC,EAAG,MAEtB,MAAMT,EAAYyB,EAAiB,IAAK9gB,EAASya,UAAWqF,IAC5D,IAAIkB,EACe,WAAff,IACAe,EAAoBF,EAAiB,IAC9B9gB,EACHya,UAAW,IAAIqF,GAAa7F,UAC5BhJ,WAAYjR,EAAQiR,UAAY,MAGxC,IAAIgQ,EAAY,OACZC,EAAW,KACXC,EAAY,KACZC,EAAa,KASoB,OAAjC/B,EAAUlE,oBAA+B4E,IACzCV,EAAUlE,mBAAqBiE,GAAsBC,IAEzD,MAAM,mBAAElE,GAAuBkE,EAC/B,IAAIgC,EAAmB/B,EAAAA,EACnBgC,EAAgBhC,EAAAA,EACO,OAAvBnE,IACAkG,EAAmBlG,EAAqB6E,EACxCsB,EAAgBD,GAAoBtB,EAAS,GAAKC,GAEtD,IAAIuB,EAAc,EAClB,MAAMC,EAAQ/zB,IACV,GAAkB,OAAd0zB,EACA,OAOAX,EAAQ,IACRW,EAAY5wB,KAAKwC,IAAIouB,EAAW1zB,IAEhC8zB,EADa,OAAbL,EACcA,GAGCzzB,EAAY0zB,GAAaX,EAG5C,MAAMiB,EAAmBF,EAAc3B,EACjC8B,EAAiBD,EAAmB,EAC1CF,EAAchxB,KAAKyC,IAAIyuB,EAAkB,GAKvB,aAAdR,GAAyC,OAAbC,IAC5BK,EAAcD,GAElB,IAAIK,EAAUJ,EACVK,EAAiBvC,EACrB,GAAIU,EAAQ,CAMR,MAAM3J,EAAWmL,EAAcF,EAK/B,IAAIQ,EAAmBtxB,KAAKE,MAAM2lB,GAK9B0L,EAAoB1L,EAAW,GAK9B0L,GAAqB1L,GAAY,IAClC0L,EAAoB,GAEF,IAAtBA,GAA2BD,IAC3BA,EAAmBtxB,KAAKwC,IAAI8uB,EAAkB9B,EAAS,GAIvD,MAAMgC,EAAiBntB,QAAQitB,EAAmB,GAC9CE,IACmB,YAAf9B,GACA6B,EAAoB,EAAIA,EACpB9B,IACA8B,GAAqB9B,EAAcqB,IAGnB,WAAfpB,IACL2B,EAAiBZ,IAGzB,IAAIx3B,EAAIgS,EAAM,EAAG,EAAGsmB,GAChBP,EAAcD,IACd93B,EAAmB,YAAfy2B,GAA4B8B,EAAiB,EAAI,GAEzDJ,EAAUn4B,EAAI63B,EAOlB,MAAM7yB,EAAQkzB,EACR,CAAE3G,MAAM,EAAO9xB,MAAO62B,EAAY,IAClC8B,EAAehR,KAAK+Q,GACtBZ,IACAvyB,EAAMvF,MAAQ83B,EAAsBvyB,EAAMvF,QAE9C,IAAI,KAAE8xB,GAASvsB,EACVkzB,GAAyC,OAAvBvG,IACnBJ,EAAOwG,GAAeD,GAE1B,MAAMU,EAAmC,OAAbd,IACT,aAAdD,GACkB,YAAdA,GAA2BlG,GAC3ByF,EAAQ,GAAKe,GAAe,GAOrC,OANIlB,GACAA,EAAS7xB,EAAMvF,OAEf+4B,GACAC,IAEGzzB,GAEL0zB,EAAsB,KACxBrB,GAAmBA,EAAgB3B,OACnC2B,OAAkB5rB,GAEhBmW,EAAS,KACX6V,EAAY,OACZiB,IACAxB,IACAS,EAAYC,EAAa,MAEvBa,EAAS,KACXhB,EAAY,WACZb,GAAcA,IACd8B,IACAxB,KAEEyB,EAAO,KACT,GAAI1B,EACA,OACCI,IACDA,EAAkBhB,EAAO2B,IAC7B,MAAMh0B,EAAMqzB,EAAgBrzB,MAC5B0yB,GAAUA,IACO,OAAbgB,EACAC,EAAY3zB,EAAM0zB,EAEZC,GAA2B,aAAdF,IACnBE,EAAY3zB,GAEhB4zB,EAAaD,EACbD,EAAW,KAKXD,EAAY,UACZJ,EAAgBzsB,SAEhBurB,GACAwC,IAEJ,MAAMC,EAAW,CACbC,KAAI,CAACzB,EAAS0B,IACH/B,EAAuB8B,KAAKzB,EAAS0B,GAE5CC,WACA,OAAOhR,GAAsBgQ,IAE7BgB,SAAKC,GACLA,EAAUnR,GAAsBmR,GAChCjB,EAAciB,EACG,OAAbtB,GAAsBL,GAA6B,IAAVL,EAIzCW,EAAYN,EAAgBrzB,MAAQg1B,EAAUhC,EAH9CU,EAAWsB,GAMf9H,eACA,MAAMA,EAA4C,OAAjC2E,EAAUlE,mBACrBiE,GAAsBC,GACtBA,EAAUlE,mBAChB,OAAO5J,GAAsBmJ,IAE7B8F,YACA,OAAOA,GAEPA,UAAMiC,GACFA,IAAajC,GAAUK,IAE3BL,EAAQiC,EACRL,EAASG,KAAOhR,GAAsBgQ,KAEtC/yB,YACA,OAAOyyB,GAEXkB,KAAAA,EACAO,MAAO,KACHzB,EAAY,SACZC,EAAWK,GAEfrC,KAAM,KACFuB,GAAa,EACK,SAAdQ,IAEJA,EAAY,OACZd,GAAUA,IACV/U,MAEJA,OAAQ,KACe,OAAfgW,GACAI,EAAKJ,GACThW,KAEJuX,SAAU,KACN1B,EAAY,YAEhB2B,OAASjB,IACLR,EAAY,EACLK,EAAKG,KAGpB,OAAOS,EC3RX,MAAMS,GAAoB,IAAIpoB,IAAI,CAC9B,UACA,WACA,SACA,YACA,oBAgBJ,SAASqoB,GAA2B75B,EAAO85B,GAAW,SAAE1C,EAAQ,WAAED,KAAepgB,IAO7E,KAN+B+S,GAASH,SACpCiQ,GAAkB9oB,IAAIgpB,KACrB/iB,EAAQggB,aACc,WAAvBhgB,EAAQigB,YACY,IAApBjgB,EAAQwc,SACS,YAAjBxc,EAAQpN,MAER,OAAO,EAIX,IACI0tB,EACAC,EAFAE,GAAa,EAQjB,MAAMC,EAAwB,KAC1BH,EAAyB,IAAII,SAASC,IAClCN,EAAyBM,MAIjCF,IACA,IAAI,UAAEjG,EAAS,SAAEC,EAAW,IAAG,KAAEzI,EAAI,MAAE2I,GAAU5a,EAIjD,GAlCkC,EAAC+iB,EAAW/iB,IAA6B,WAAjBA,EAAQpN,MACpD,oBAAdmwB,IACCnR,GAAuB5R,EAAQiS,MAgC5B+Q,CAA8BD,EAAW/iB,GAAU,CACnD,MAAMijB,EAAkBvD,GAAa,IAC9B1f,EACH+f,OAAQ,EACRH,MAAO,IAEX,IAAIpxB,EAAQ,CAAEusB,MAAM,EAAO9xB,MAAOwxB,EAAU,IAC5C,MAAMyI,EAAwB,GAK9B,IAAIn7B,EAAI,EACR,MAAQyG,EAAMusB,MAAQhzB,EAhDV,KAiDRyG,EAAQy0B,EAAgBL,OAAO76B,GAC/Bm7B,EAAsB/X,KAAK3c,EAAMvF,OACjClB,GAxDQ,GA0DZ6yB,OAAQ3lB,EACRwlB,EAAYyI,EACZxI,EAAW3yB,EA5DC,GA6DZkqB,EAAO,SAEX,MAAMvc,ECpFV,SAAsBwP,EAAS6d,EAAWtI,GAAW,MAAEmF,EAAQ,EAAC,SAAElF,EAAQ,OAAEqF,EAAS,EAAC,WAAEE,EAAa,OAAM,KAAEhO,EAAI,MAAE2I,GAAW,IAC1H,MAAMuI,EAAkB,CAAE,CAACJ,GAAYtI,GACnCG,IACAuI,EAAgBzgB,OAASkY,GAC7B,MAAMjJ,EAASc,GAAwBR,GAMvC,OAFIhe,MAAMC,QAAQyd,KACdwR,EAAgBxR,OAASA,GACtBzM,EAAQ1Q,QAAQ2uB,EAAiB,CACpCvD,MAAAA,EACAlF,SAAAA,EACA/I,OAAS1d,MAAMC,QAAQyd,GAAmB,SAATA,EACjCyR,KAAM,OACNC,WAAYtD,EAAS,EACrBuD,UAA0B,YAAfrD,EAA2B,YAAc,WDoEtCsD,CAAat6B,EAAMu6B,MAAMhtB,QAASusB,EAAWtI,EAAW,IACnEza,EACH0a,SAAAA,EASAzI,KAAMA,EACN2I,MAAAA,IAEE6I,EAAkB,IAAM/tB,EAAU0V,SAClCsY,EAAa,KACf,UAAaD,GACbnD,IACAI,KAkBJ,OARAhrB,EAAUiuB,SAAW,KACjB16B,EAAM+Q,IEnHd,SAA0BygB,GAAW,OAAEsF,EAAM,WAAEE,EAAa,SAIxD,OAAOxF,EAHOsF,GAAyB,SAAfE,GAAyBF,EAAS,IAAM,EAC1D,EACAtF,EAAUvuB,OAAS,GFgHX03B,CAAiBnJ,EAAWza,IACtCogB,GAAcA,IACdsD,KAKG,CACHrB,KAAI,CAACzB,EAAS0B,IACH/B,EAAuB8B,KAAKzB,EAAS0B,GAE5CC,WACA,OAAOhR,GAAsB7b,EAAU6rB,aAAe,IAEtDgB,SAAKC,GACL9sB,EAAU6rB,YAAclQ,GAAsBmR,IAE9ChC,YACA,OAAO9qB,EAAUmuB,cAEjBrD,UAAMiC,GACN/sB,EAAUmuB,aAAepB,GAEzB/H,eACA,OAAOnJ,GAAsBmJ,IAEjCyH,KAAM,KACE1B,IAEJ/qB,EAAUysB,OAIVvW,GAAY6X,KAEhBf,MAAO,IAAMhtB,EAAUgtB,QACvBxD,KAAM,KAEF,GADAuB,GAAa,EACe,SAAxB/qB,EAAUurB,UACV,OASJ,MAAM,YAAEM,GAAgB7rB,EACxB,GAAI6rB,EAAa,CACb,MAAM0B,EAAkBvD,GAAa,IAC9B1f,EACH2f,UAAU,IAEd12B,EAAM66B,gBAAgBb,EAAgBL,OAAOrB,EAlJzC,IAkJoEt4B,MAAOg6B,EAAgBL,OAAOrB,GAAat4B,MAlJ/G,IAoJRy6B,KAEJf,SAAU,IAAMjtB,EAAUusB,SAC1B7W,OAAQsY,GG5KhB,MAAMK,GAAoB,CACtBnxB,KAAM,SACN2pB,UAAW,IACXC,QAAS,GACTM,UAAW,IAQTkH,GAAsB,CACxBpxB,KAAM,YACN8nB,SAAU,IAMRzI,GAAO,CACTrf,KAAM,YACNqf,KAAM,CAAC,IAAM,GAAK,IAAM,GACxByI,SAAU,IAERuJ,GAAuB,CAACC,GAAYzJ,UAAAA,KAClCA,EAAUvuB,OAAS,EACZ83B,GAEFxpB,EAAeT,IAAImqB,GACjBA,EAASvpB,WAAW,SAxBQ,CACvC/H,KAAM,SACN2pB,UAAW,IACXC,QAAoB,IAsBa/B,EAAU,GAtBnB,EAAIlqB,KAAKkmB,KAAK,KAAO,GAC7CqG,UAAW,IAsBDiH,GAEH9R,GCzBLkS,GAAe,CAAC33B,EAAKvD,IAEX,WAARuD,MAKiB,kBAAVvD,IAAsBgL,MAAMC,QAAQjL,OAE1B,kBAAVA,IACPmvB,GAAQ/d,KAAKpR,IACZA,EAAM0R,WAAW,UChBpBypB,GAAc,IAAI3pB,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAAS4pB,GAAmBrwB,GACxB,MAAOU,EAAMzL,GAAS+K,EAAEswB,MAAM,GAAI,GAAGhoB,MAAM,KAC3C,GAAa,gBAAT5H,EACA,OAAOV,EACX,MAAOyH,GAAUxS,EAAMksB,MAAMpZ,IAAe,GAC5C,IAAKN,EACD,OAAOzH,EACX,MAAMoI,EAAOnT,EAAM+b,QAAQvJ,EAAQ,IACnC,IAAI8oB,EAAeH,GAAYrqB,IAAIrF,GAAQ,EAAI,EAG/C,OAFI+G,IAAWxS,IACXs7B,GAAgB,KACb7vB,EAAO,IAAM6vB,EAAenoB,EAAO,IAE9C,MAAMooB,GAAgB,oBAChBl0B,GAAS,IACR8nB,GACHG,kBAAoBvkB,IAChB,MAAMywB,EAAYzwB,EAAEmhB,MAAMqP,IAC1B,OAAOC,EAAYA,EAAU/R,IAAI2R,IAAoB7uB,KAAK,KAAOxB,IClBnE0wB,GAAoB,IACnB7nB,GAEHoZ,MAAK,GACL0O,gBAAiB1O,GACjB2O,aAAc3O,GACdmN,KAAMnN,GACN4O,OAAQ5O,GAER6O,YAAa7O,GACb8O,eAAgB9O,GAChB+O,iBAAkB/O,GAClBgP,kBAAmBhP,GACnBiP,gBAAiBjP,GACjB3lB,OAAM,GACND,aAAcC,IAKZ60B,GAAuB34B,GAAQk4B,GAAkBl4B,GCvBvD,SAAS,GAAkBA,EAAKvD,GAC5B,IAAIm8B,EAAmBD,GAAoB34B,GAI3C,OAHI44B,IAAqB90B,KACrB80B,EAAmBhN,IAEhBgN,EAAiB7M,kBAClB6M,EAAiB7M,kBAAkBtvB,QACnCgM,ECDV,SAASowB,GAAOp8B,GACZ,OAAkB,IAAVA,GACc,kBAAVA,GACkB,IAAtB0S,WAAW1S,KACa,IAAxBA,EAAMmR,QAAQ,KAE1B,SAASkrB,GAAYC,GACjB,MAAoC,kBAAtBA,EACR,EACA,GAAkB,GAAIA,GAEhC,SAASC,GAAmB/d,EAAYjb,GACpC,OAAOib,EAAWjb,IAAQib,EAAoB,SAAKA,ECXvD,MAAMge,GAAqB,CAAC1C,EAAW95B,EAAOgY,EAAQwG,EAAa,KACvD2Y,IACJ,MAAMsF,EAAkBF,GAAmB/d,EAAYsb,IAAc,GAM/DnD,EAAQ8F,EAAgB9F,OAASnY,EAAWmY,OAAS,EAK3D,IAAI,QAAE+B,EAAU,GAAMla,EACtBka,GAAoBtQ,GAAsBuO,GAC1C,MAAMnF,ECrBd,SAAsBxxB,EAAO85B,EAAW9hB,EAAQwG,GAC5C,MAAMke,EAAqBxB,GAAapB,EAAW9hB,GACnD,IAAIwB,OAA6BxN,IAApBwS,EAAWyO,KAAqBzO,EAAWyO,KAAOjtB,EAAMH,MAmBrE,MAlBe,SAAX2Z,GAAqBkjB,GAAwC,kBAAX1kB,EAKlDwB,EAAS,GAAkBsgB,EAAW9hB,GAEjCokB,GAAO5iB,IAA6B,kBAAXxB,EAC9BwB,EAAS6iB,GAAYrkB,IAEfhN,MAAMC,QAAQ+M,IACpBokB,GAAOpkB,IACW,kBAAXwB,IACPxB,EAASqkB,GAAY7iB,IAKrBxO,MAAMC,QAAQ+M,GC1BtB,SAA+BwB,MAAYgY,IAIvC,IAAK,IAAIryB,EAAI,EAAGA,EAAIqyB,EAAUvuB,OAAQ9D,IACb,OAAjBqyB,EAAUryB,KACVqyB,EAAUryB,GAAW,IAANA,EAAUqa,EAASgY,EAAUryB,EAAI,IAGxD,OAAOqyB,EDkBImL,CAAsBnjB,EAAQxB,GAG9B,CAACwB,EAAQxB,GDJE4kB,CAAa58B,EAAO85B,EAAW9hB,EAAQykB,GAMnDI,EAAiBrL,EAAU,GAC3BsL,EAAiBtL,EAAUA,EAAUvuB,OAAS,GAC9C85B,EAAqB7B,GAAapB,EAAW+C,GAC7CH,EAAqBxB,GAAapB,EAAWgD,GACnD5U,GAAQ6U,IAAuBL,EAAoB,6BAA6B5C,WAAmB+C,UAAuBC,OAAoBD,+DAA4EA,8BAA2CC,iCACrQ,IAAI/lB,EAAU,CACVya,UAAAA,EACAxJ,SAAUhoB,EAAM4R,cAChBoX,KAAM,aACHyT,EACH9F,OAAQ+B,EACRtB,SAAWrsB,IACP/K,EAAM+Q,IAAIhG,GACV0xB,EAAgBrF,UAAYqF,EAAgBrF,SAASrsB,IAEzDosB,WAAY,KACRA,IACAsF,EAAgBtF,YAAcsF,EAAgBtF,eAwBtD,GDlER,UAA6B,KAAE6F,EAAMrG,MAAOsG,EAAM,cAAEC,EAAa,gBAAEC,EAAe,iBAAEC,EAAgB,OAAEtG,EAAM,WAAEE,EAAU,YAAED,EAAW,KAAE9J,EAAI,QAAEyL,KAAYla,IACrJ,QAAS9e,OAAOkb,KAAK4D,GAAYvb,OCgDxBo6B,CAAoBZ,KACrB1lB,EAAU,IACHA,KACAikB,GAAqBlB,EAAW/iB,KAQvCA,EAAQ0a,WACR1a,EAAQ0a,SAAWrJ,GAAsBrR,EAAQ0a,WAEjD1a,EAAQggB,cACRhgB,EAAQggB,YAAc3O,GAAsBrR,EAAQggB,eAEnDgG,IACAL,GACDlU,KACyB,IAAzBiU,EAAgB9yB,KAKhB,OG9EZ,UAAgC,UAAE6nB,EAAS,MAAEmF,EAAK,SAAES,EAAQ,WAAED,IAC1D,MAAMmG,EAAW,KACblG,GAAYA,EAAS5F,EAAUA,EAAUvuB,OAAS,IAClDk0B,GAAcA,IAQP,CACHmC,KAAM,EACN/B,MAAO,EACP9F,SAAU,EACVyH,KAAM,GACNO,MAAO,GACPxD,KAAM,GACNmD,KAAOzB,IACHA,IACOD,QAAQC,WAEnBxV,OAAQ,GACRuX,SAAU,KAGlB,OAAO/C,EACDF,GAAa,CACXjF,UAAW,CAAC,EAAG,GACfC,SAAU,EACVkF,MAAAA,EACAQ,WAAYmG,IAEdA,IH6CSC,CAAuBxmB,GAKlC,GAAI/W,EAAMu6B,OACNv6B,EAAMu6B,MAAMhtB,mBAAmBiwB,cAC9Bx9B,EAAMu6B,MAAMvX,WAAWoU,SAAU,CAClC,MAAMqG,EAAuB5D,GAA2B75B,EAAO85B,EAAW/iB,GAC1E,GAAI0mB,EACA,OAAOA,EAKf,OAAOhH,GAAa1f,II9F5B,SAAS2mB,GAAwB19B,GAC7B,OAAO2L,QAAQgG,EAAc3R,IAAUA,EAAMiiB,KCAjD,MCAM0b,GAAqB5yB,GAAM,aAAaqG,KAAKrG,GCHnD,SAAS6yB,GAAcxM,EAAKyM,IACG,IAAvBzM,EAAIjgB,QAAQ0sB,IACZzM,EAAIlP,KAAK2b,GAEjB,SAASC,GAAW1M,EAAKyM,GACrB,MAAMzb,EAAQgP,EAAIjgB,QAAQ0sB,GACtBzb,GAAS,GACTgP,EAAIvnB,OAAOuY,EAAO,GCL1B,MAAM2b,GACFp9B,cACIiB,KAAKo8B,cAAgB,GAEzB/b,IAAIjD,GAEA,OADA4e,GAAch8B,KAAKo8B,cAAehf,GAC3B,IAAM8e,GAAWl8B,KAAKo8B,cAAehf,GAEhDif,OAAO37B,EAAGuG,EAAGtJ,GACT,MAAM2+B,EAAmBt8B,KAAKo8B,cAAc/6B,OAC5C,GAAKi7B,EAEL,GAAyB,IAArBA,EAIAt8B,KAAKo8B,cAAc,GAAG17B,EAAGuG,EAAGtJ,QAG5B,IAAK,IAAIJ,EAAI,EAAGA,EAAI++B,EAAkB/+B,IAAK,CAKvC,MAAM6f,EAAUpd,KAAKo8B,cAAc7+B,GACnC6f,GAAWA,EAAQ1c,EAAGuG,EAAGtJ,IAIrC4+B,UACI,OAAOv8B,KAAKo8B,cAAc/6B,OAE9Bm7B,QACIx8B,KAAKo8B,cAAc/6B,OAAS,GCrBpC,MAAMo7B,GASF19B,YAAY0M,EAAM0J,EAAU,IAjBhB,IAAC/W,EAsBT4B,KAAK08B,QAAU,UAMf18B,KAAK28B,UAAY,EAMjB38B,KAAK48B,YAAc,EAQnB58B,KAAK68B,kBAAmB,EAIxB78B,KAAK88B,OAAS,GACd98B,KAAK+8B,gBAAkB,CAAC5zB,EAAGyE,GAAS,KAChC5N,KAAKgmB,KAAOhmB,KAAK2L,QACjB3L,KAAK2L,QAAUxC,EAEf,MAAM,MAAE8V,EAAK,UAAErc,GAAcoc,GACzBhf,KAAK48B,cAAgBh6B,IACrB5C,KAAK28B,UAAY1d,EACjBjf,KAAK48B,YAAch6B,EACnB,cAAiB5C,KAAKg9B,wBAGtBh9B,KAAKgmB,OAAShmB,KAAK2L,SAAW3L,KAAK88B,OAAOG,QAC1Cj9B,KAAK88B,OAAOG,OAAOZ,OAAOr8B,KAAK2L,SAG/B3L,KAAK88B,OAAOI,gBACZl9B,KAAK88B,OAAOI,eAAeb,OAAOr8B,KAAKgQ,eAGvCpC,GAAU5N,KAAK88B,OAAOK,eACtBn9B,KAAK88B,OAAOK,cAAcd,OAAOr8B,KAAK2L,UAW9C3L,KAAKg9B,sBAAwB,IAAM,cAAiBh9B,KAAKo9B,eAUzDp9B,KAAKo9B,cAAgB,EAAGx6B,UAAAA,MAChBA,IAAc5C,KAAK48B,cACnB58B,KAAKgmB,KAAOhmB,KAAK2L,QACb3L,KAAK88B,OAAOI,gBACZl9B,KAAK88B,OAAOI,eAAeb,OAAOr8B,KAAKgQ,iBAInDhQ,KAAKq9B,aAAc,EACnBr9B,KAAKgmB,KAAOhmB,KAAK2L,QAAUF,EAC3BzL,KAAK68B,kBAlGIz+B,EAkGuB4B,KAAK2L,SAjGjC8hB,MAAM3c,WAAW1S,KAkGrB4B,KAAK24B,MAAQxjB,EAAQwjB,MA0CzB2E,SAASC,GAIL,OAAOv9B,KAAKw9B,GAAG,SAAUD,GAE7BC,GAAGrgB,EAAW6C,GACLhgB,KAAK88B,OAAO3f,KACbnd,KAAK88B,OAAO3f,GAAa,IAAIgf,IAEjC,MAAMsB,EAAcz9B,KAAK88B,OAAO3f,GAAWkD,IAAIL,GAC/C,MAAkB,WAAd7C,EACO,KACHsgB,IAKA,SAAW,KACFz9B,KAAK88B,OAAOG,OAAOV,WACpBv8B,KAAKq0B,WAKdoJ,EAEXC,iBACI,IAAK,MAAMC,KAAiB39B,KAAK88B,OAC7B98B,KAAK88B,OAAOa,GAAenB,QAQnCoB,OAAOC,EAAeC,GAClB99B,KAAK69B,cAAgBA,EACrB79B,KAAK89B,kBAAoBA,EAiB7B3uB,IAAIhG,EAAGyE,GAAS,GACPA,GAAW5N,KAAK69B,cAIjB79B,KAAK69B,cAAc10B,EAAGnJ,KAAK+8B,iBAH3B/8B,KAAK+8B,gBAAgB5zB,EAAGyE,GAMhCqrB,gBAAgBjT,EAAMra,EAASsT,GAC3Bjf,KAAKmP,IAAIxD,GACT3L,KAAKgmB,KAAOA,EACZhmB,KAAK28B,UAAY1d,EAMrB8e,KAAK50B,GACDnJ,KAAK+8B,gBAAgB5zB,GACrBnJ,KAAKgmB,KAAO7c,EACZnJ,KAAKq0B,OACDr0B,KAAK89B,mBACL99B,KAAK89B,oBASb7/B,MACI,OAAO+B,KAAK2L,QAKhBqyB,cACI,OAAOh+B,KAAKgmB,KAShBhW,cAEI,OAAOhQ,KAAK68B,iBAEJtM,GAAkBzf,WAAW9Q,KAAK2L,SAC9BmF,WAAW9Q,KAAKgmB,MAAOhmB,KAAK28B,WAClC,EAcVpzB,MAAM00B,GAEF,OADAj+B,KAAKq0B,OACE,IAAIyB,SAASC,IAChB/1B,KAAKq9B,aAAc,EACnBr9B,KAAK6K,UAAYozB,EAAelI,GAC5B/1B,KAAK88B,OAAOoB,gBACZl+B,KAAK88B,OAAOoB,eAAe7B,YAEhC7E,MAAK,KACAx3B,KAAK88B,OAAOqB,mBACZn+B,KAAK88B,OAAOqB,kBAAkB9B,SAElCr8B,KAAKo+B,oBAQb/J,OACQr0B,KAAK6K,YACL7K,KAAK6K,UAAUwpB,OACXr0B,KAAK88B,OAAOuB,iBACZr+B,KAAK88B,OAAOuB,gBAAgBhC,UAGpCr8B,KAAKo+B,iBAOTE,cACI,QAASt+B,KAAK6K,UAElBuzB,wBACWp+B,KAAK6K,UAWhB0zB,UACIv+B,KAAK09B,iBACL19B,KAAKq0B,OACDr0B,KAAK89B,mBACL99B,KAAK89B,qBAIjB,SAASU,GAAY/yB,EAAM0J,GACvB,OAAO,IAAIsnB,GAAYhxB,EAAM0J,GCrUjC,MAAMspB,GAAiBt1B,GAAOpB,GAASA,EAAKyH,KAAKrG,GCK3Cu1B,GAAsB,CAAC9tB,EAAQgB,GAAID,GAASD,EAASI,GAAID,GCLlD,CACTrC,KAAOrG,GAAY,SAANA,EACb0H,MAAQ1H,GAAMA,IDOZw1B,GAA0Bx1B,GAAMu1B,GAAoB3S,KAAK0S,GAAct1B,IEJvEy1B,GAAa,IAAIF,GAAqBtT,GAAOmC,IAI7CsR,GAAiB11B,GAAMy1B,GAAW7S,KAAK0S,GAAct1B,ICC3D,SAAS21B,GAAe3xB,EAAexL,EAAKvD,GACpC+O,EAAc4xB,SAASp9B,GACvBwL,EAAc6xB,SAASr9B,GAAKwN,IAAI/Q,GAGhC+O,EAAc8xB,SAASt9B,EAAK68B,GAAYpgC,IAGhD,SAAS8gC,GAAU/xB,EAAemO,GAC9B,MAAMoB,EAAWwJ,GAAe/Y,EAAemO,GAC/C,IAAI,cAAEqB,EAAgB,GAAE,WAAEC,EAAa,MAAOxG,GAAWsG,EAAWvP,EAAcgyB,qBAAqBziB,GAAU,GAAS,GAC1HtG,EAAS,IAAKA,KAAWuG,GACzB,IAAK,MAAMhb,KAAOyU,EAAQ,CAEtB0oB,GAAe3xB,EAAexL,GvFtBAwH,EuFqBaiN,EAAOzU,GvFnB/C8Z,GAAkBtS,GAAKA,EAAEA,EAAE9H,OAAS,IAAM,EAAI8H,IAFpB,IAACA,EuF+FtC,SAASi2B,GAAwBz9B,EAAKib,GAClC,IAAKA,EACD,OAEJ,OADwBA,EAAWjb,IAAQib,EAAoB,SAAKA,GAC7CyO,KC3F3B,SAASgU,IAAqB,cAAEC,EAAa,eAAEC,GAAkB59B,GAC7D,MAAM69B,EAAcF,EAAc5gC,eAAeiD,KAAgC,IAAxB49B,EAAe59B,GAExE,OADA49B,EAAe59B,IAAO,EACf69B,EAEX,SAASC,GAActyB,EAAemO,GAAY,MAAEyZ,EAAQ,EAAC,mBAAE2K,EAAkB,KAAE33B,GAAS,IACxF,IAAI,WAAE6U,EAAazP,EAAcisB,uBAAsB,cAAEzc,KAAkBvG,GAAWjJ,EAAcgyB,qBAAqB7jB,GACzH,MAAMqkB,EAAaxyB,EAAc6xB,SAAS,cACtCU,IACA9iB,EAAa8iB,GACjB,MAAME,EAAa,GACbC,EAAqB93B,GACvBoF,EAAcY,gBACdZ,EAAcY,eAAe+xB,WAAW/3B,GAC5C,IAAK,MAAMpG,KAAOyU,EAAQ,CACtB,MAAMhY,EAAQ+O,EAAc6xB,SAASr9B,GAC/Bkb,EAAczG,EAAOzU,GAC3B,IAAKvD,QACegM,IAAhByS,GACCgjB,GACGR,GAAqBQ,EAAoBl+B,GAC7C,SAEJ,MAAMk5B,EAAkB,CAAE9F,MAAAA,EAAO+B,QAAS,KAAMla,GAKhD,GAAI7b,OAAO+M,0BAA4B1P,EAAMi/B,YAAa,CACtD,MAAM0C,EAAW5yB,EAAciU,WAAWiF,IACtC0Z,IACAlF,EAAgB/D,QAAU/1B,OAAO+M,wBAAwBiyB,EAAUp+B,EAAKvD,EAAO,KAGvFA,EAAMmL,MAAMqxB,GAAmBj5B,EAAKvD,EAAOye,EAAa1P,EAAc6yB,oBAAsBrwB,EAAeT,IAAIvN,GACzG,CAAEoG,MAAM,GACR8yB,IACN,MAAMhwB,EAAYzM,EAAMyM,UACpBixB,GAAwB6D,KACxBA,EAAWtf,IAAI1e,GACfkJ,EAAU2sB,MAAK,IAAMmI,EAAWM,OAAOt+B,MAE3Ci+B,EAAWtf,KAAKzV,GAOpB,OALI8R,GACAmZ,QAAQ5S,IAAI0c,GAAYpI,MAAK,KACzB7a,GAAiBuiB,GAAU/xB,EAAewP,MAG3CijB,EC3DX,SAASM,GAAe/yB,EAAegzB,EAAShrB,EAAU,IACtD,MAAMuH,EAAWwJ,GAAe/Y,EAAegzB,EAAShrB,EAAQtG,QAChE,IAAI,WAAE+N,EAAazP,EAAcisB,wBAA0B,IAAO1c,GAAY,GAC1EvH,EAAQuqB,qBACR9iB,EAAazH,EAAQuqB,oBAMzB,MAAMU,EAAe1jB,EACf,IAAMoZ,QAAQ5S,IAAIuc,GAActyB,EAAeuP,EAAUvH,IACzD,IAAM2gB,QAAQC,UAKdsK,EAAqBlzB,EAAcmzB,iBAAmBnzB,EAAcmzB,gBAAgBxtB,KACpF,CAACytB,EAAe,KACd,MAAM,cAAEjF,EAAgB,EAAC,gBAAEC,EAAe,iBAAEC,GAAsB5e,EAClE,OAkBZ,SAAyBzP,EAAegzB,EAAS7E,EAAgB,EAAGC,EAAkB,EAAGC,EAAmB,EAAGrmB,GAC3G,MAAMyqB,EAAa,GACbY,GAAsBrzB,EAAcmzB,gBAAgBxtB,KAAO,GAAKyoB,EAChEkF,EAA+C,IAArBjF,EAC1B,CAACj+B,EAAI,IAAMA,EAAIg+B,EACf,CAACh+B,EAAI,IAAMijC,EAAqBjjC,EAAIg+B,EAU1C,OATAnyB,MAAMiiB,KAAKle,EAAcmzB,iBACpBI,KAAKC,IACL74B,SAAQ,CAAC0Z,EAAOjkB,KACjBikB,EAAM6a,OAAO,iBAAkB8D,GAC/BP,EAAWtf,KAAK4f,GAAe1e,EAAO2e,EAAS,IACxChrB,EACH4f,MAAOuG,EAAgBmF,EAAwBljC,KAChDi6B,MAAK,IAAMhW,EAAM6a,OAAO,oBAAqB8D,SAE7CrK,QAAQ5S,IAAI0c,GAjCJgB,CAAgBzzB,EAAegzB,EAAS7E,EAAgBiF,EAAchF,EAAiBC,EAAkBrmB,IAElH,IAAM2gB,QAAQC,WAKd,KAAEqF,GAASxe,EACjB,GAAIwe,EAAM,CACN,MAAOyF,EAAOC,GAAiB,mBAAT1F,EAChB,CAACgF,EAAcC,GACf,CAACA,EAAoBD,GAC3B,OAAOS,IAAQrJ,MAAK,IAAMsJ,MAG1B,OAAOhL,QAAQ5S,IAAI,CAACkd,IAAgBC,EAAmBlrB,EAAQ4f,SAoBvE,SAAS4L,GAAgBjgC,EAAGuG,GACxB,OAAOvG,EAAEqgC,iBAAiB95B,GCnD9B,MAAM+5B,GAAuB,IAAIx3B,GAAsB4lB,UACjD6R,GAAoBz3B,EAAqBnI,OAC/C,SAAS6/B,GAAY/zB,GACjB,OAAQyyB,GAAe9J,QAAQ5S,IAAI0c,EAAW/X,KAAI,EAAGhd,UAAAA,EAAWsK,QAAAA,KCPpE,SAA8BhI,EAAemO,EAAYnG,EAAU,IAE/D,IAAItK,EACJ,GAFAsC,EAAckvB,OAAO,iBAAkB/gB,GAEnClS,MAAMC,QAAQiS,GAAa,CAC3B,MAAMskB,EAAatkB,EAAWuM,KAAKsY,GAAYD,GAAe/yB,EAAegzB,EAAShrB,KACtFtK,EAAYirB,QAAQ5S,IAAI0c,QAEvB,GAA0B,kBAAftkB,EACZzQ,EAAYq1B,GAAe/yB,EAAemO,EAAYnG,OAErD,CACD,MAAMgsB,EAA2C,oBAAf7lB,EAC5B4K,GAAe/Y,EAAemO,EAAYnG,EAAQtG,QAClDyM,EACNzQ,EAAYirB,QAAQ5S,IAAIuc,GAActyB,EAAeg0B,EAAoBhsB,IAE7E,OAAOtK,EAAU2sB,MAAK,IAAMrqB,EAAckvB,OAAO,oBAAqB/gB,KDTQ8lB,CAAqBj0B,EAAetC,EAAWsK,MAEjI,SAASksB,GAAqBl0B,GAC1B,IAAIxD,EAAUu3B,GAAY/zB,GAC1B,MAAMxJ,EAoSC,CACHgG,QAAS23B,IAAgB,GACzBC,YAAaD,KACbjgB,WAAYigB,KACZlqB,SAAUkqB,KACVE,UAAWF,KACXG,WAAYH,KACZx2B,KAAMw2B,MA1SV,IAAII,GAAkB,EAKtB,MAAMC,EAA0B,CAACpiB,EAAKjE,KAClC,MAAMoB,EAAWwJ,GAAe/Y,EAAemO,GAC/C,GAAIoB,EAAU,CACV,MAAM,WAAEE,EAAU,cAAED,KAAkBvG,GAAWsG,EACjD6C,EAAM,IAAKA,KAAQnJ,KAAWuG,GAElC,OAAO4C,GAmBX,SAASvR,EAAemH,EAASysB,GAC7B,MAAM98B,EAAQqI,EAAciU,WACtBjX,EAAUgD,EAAc00B,mBAAkB,IAAS,GAKnDjC,EAAa,GAKbkC,EAAc,IAAIlyB,IAMxB,IAAImyB,EAAkB,GAKlBC,EAAsBvN,EAAAA,EAO1B,IAAK,IAAIl3B,EAAI,EAAGA,EAAI0jC,GAAmB1jC,IAAK,CACxC,MAAMwK,EAAOi5B,GAAqBzjC,GAC5B0kC,EAAYt+B,EAAMoE,GAClB2C,OAAuBN,IAAhBtF,EAAMiD,GAAsBjD,EAAMiD,GAAQoC,EAAQpC,GACzDm6B,EAAgBh5B,EAAewB,GAK/By3B,EAAcp6B,IAAS65B,EAAoBK,EAAUhhB,SAAW,MAClD,IAAhBkhB,IACAH,EAAsBzkC,GAO1B,IAAI6kC,EAAc13B,IAASP,EAAQpC,IAAS2C,IAAS5F,EAAMiD,IAASm6B,EAepE,GAXIE,GACAV,GACAv0B,EAAck1B,yBACdD,GAAc,GAMlBH,EAAU3C,cAAgB,IAAKyC,IAI7BE,EAAUhhB,UAA4B,OAAhBkhB,IAElBz3B,IAASu3B,EAAUK,UAErBh5B,EAAoBoB,IACJ,mBAATA,EACP,SAOJ,MAAM63B,EAAmBC,GAAuBP,EAAUK,SAAU53B,GACpE,IAAI+3B,EAAoBF,GAEnBx6B,IAAS65B,GACNK,EAAUhhB,WACTmhB,GACDF,GAEH3kC,EAAIykC,GAAuBE,EAKhC,MAAMQ,EAAiBt5B,MAAMC,QAAQqB,GAAQA,EAAO,CAACA,GAKrD,IAAIi4B,EAAiBD,EAAevkB,OAAOwjB,EAAyB,KAChD,IAAhBQ,IACAQ,EAAiB,IAUrB,MAAM,mBAAEC,EAAqB,IAAOX,EAC9BY,EAAU,IACTD,KACAD,GAEDG,EAAiBnhC,IACnB8gC,GAAoB,EACpBX,EAAYrhB,OAAO9e,GACnBsgC,EAAU1C,eAAe59B,IAAO,GAEpC,IAAK,MAAMA,KAAOkhC,EAAS,CACvB,MAAM9c,EAAO4c,EAAehhC,GACtBqkB,EAAO4c,EAAmBjhC,GAE5BogC,EAAgBrjC,eAAeiD,KAK/BokB,IAASC,EAKLvK,GAAkBsK,IAAStK,GAAkBuK,IACxCF,GAAeC,EAAMC,IAASuc,EAC/BO,EAAcnhC,GAOdsgC,EAAU3C,cAAc39B,IAAO,OAGrByI,IAAT2b,EAEL+c,EAAcnhC,GAIdmgC,EAAYzhB,IAAI1e,QAGNyI,IAAT2b,GAAsB+b,EAAY5yB,IAAIvN,GAK3CmhC,EAAcnhC,GAOdsgC,EAAU3C,cAAc39B,IAAO,GAOvCsgC,EAAUK,SAAW53B,EACrBu3B,EAAUW,mBAAqBD,EAI3BV,EAAUhhB,WACV8gB,EAAkB,IAAKA,KAAoBY,IAE3CjB,GAAmBv0B,EAAcM,wBACjCg1B,GAAoB,GAOpBA,IAAsBL,GACtBxC,EAAWtf,QAAQoiB,EAAe7a,KAAKhd,IAAc,CACjDA,UAAWA,EACXsK,QAAS,CAAEpN,KAAAA,KAASoN,QAShC,GAAI2sB,EAAYhvB,KAAM,CAClB,MAAMiwB,EAAoB,GAC1BjB,EAAYh6B,SAASnG,IACjB,MAAMqhC,EAAiB71B,EAAc81B,cAActhC,QAC5ByI,IAAnB44B,IACAD,EAAkBphC,GAAOqhC,MAGjCpD,EAAWtf,KAAK,CAAEzV,UAAWk4B,IAEjC,IAAIG,EAAgBn5B,QAAQ61B,EAAWv+B,QAOvC,OANIqgC,IACkB,IAAlB58B,EAAMoF,UACLiD,EAAck1B,yBACfa,GAAgB,GAEpBxB,GAAkB,EACXwB,EAAgBv5B,EAAQi2B,GAAc9J,QAAQC,UAmBzD,MAAO,CACH/nB,eAAAA,EACAsT,UAhBJ,SAAmBvZ,EAAMkZ,EAAU9L,GAC/B,IAAIuC,EAEJ,GAAI/T,EAAMoE,GAAMkZ,WAAaA,EACzB,OAAO6U,QAAQC,UAEsB,QAAxCre,EAAKvK,EAAcmzB,uBAAoC,IAAP5oB,GAAyBA,EAAG5P,SAAS0Z,IAAY,IAAI9J,EAAI,OAAuC,QAA/BA,EAAK8J,EAAMzT,sBAAmC,IAAP2J,OAAgB,EAASA,EAAG4J,UAAUvZ,EAAMkZ,MACrMtd,EAAMoE,GAAMkZ,SAAWA,EACvB,MAAM2e,EAAa5xB,EAAemH,EAASpN,GAC3C,IAAK,MAAMpG,KAAOgC,EACdA,EAAMhC,GAAK29B,cAAgB,GAE/B,OAAOM,GAKPuD,mBA5PJ,SAA4BC,GACxBz5B,EAAUy5B,EAAaj2B,IA4PvB2yB,SAAU,IAAMn8B,GAGxB,SAAS6+B,GAAuBxc,EAAMD,GAClC,MAAoB,kBAATA,EACAA,IAASC,IAEX5c,MAAMC,QAAQ0c,KACXD,GAAeC,EAAMC,GAIrC,SAASsb,GAAgBrgB,GAAW,GAChC,MAAO,CACHA,SAAAA,EACAqe,cAAe,GACfC,eAAgB,GAChBqD,mBAAoB,IE7S5B,IAAI,GAAK,ECCT,MAAMhD,GAAa,CACf/0B,UAAW,CACPiU,QCDR,cAA+BA,GAM3B/f,YAAY8D,GACRugB,MAAMvgB,GACNA,EAAKkL,iBAAmBlL,EAAKkL,eAAiBszB,GAAqBx+B,IAEvEwgC,sCACI,MAAM,QAAE15B,GAAY3J,KAAK6C,KAAKue,WAC9BphB,KAAKwO,UACDlF,EAAoBK,KACpB3J,KAAKwO,QAAU7E,EAAQ25B,UAAUtjC,KAAK6C,OAM9C0L,QACIvO,KAAKqjC,sCAET11B,SACI,MAAM,QAAEhE,GAAY3J,KAAK6C,KAAKue,YACtBzX,QAAS45B,GAAgBvjC,KAAK6C,KAAKmY,WAAa,GACpDrR,IAAY45B,GACZvjC,KAAKqjC,sCAGb70B,cD3BA1D,KAAM,CACFgU,QDLR,cAAmCA,GAC/B/f,cACIqkB,SAASnjB,WACTD,KAAK+L,GAAK,KAEd4B,SACI,IAAK3N,KAAK6C,KAAKwK,gBACX,OACJ,MAAM,UAAEm2B,EAAS,eAAEC,EAAc,OAAE50B,GAAW7O,KAAK6C,KAAKwK,iBAChDm2B,UAAWE,GAAkB1jC,KAAK6C,KAAK8gC,qBAAuB,GACtE,IAAK3jC,KAAK6C,KAAKkL,gBAAkBy1B,IAAcE,EAC3C,OAEJ,MAAME,EAAgB5jC,KAAK6C,KAAKkL,eAAeuT,UAAU,QAASkiB,EAAW,CAAE30B,OAAmB,OAAXA,QAA8B,IAAXA,EAAoBA,EAAS7O,KAAK6C,KAAKue,WAAWvS,SACxJ40B,IAAmBD,GACnBI,EAAcpM,MAAK,IAAMiM,EAAezjC,KAAK+L,MAGrDwC,QACI,MAAM,SAAEs1B,GAAa7jC,KAAK6C,KAAKwK,iBAAmB,GAC9Cw2B,IACA7jC,KAAKwO,QAAUq1B,EAAS7jC,KAAK+L,KAGrCyC,eG3BE4F,GAAW,CAAC1T,EAAGuG,IAAMvB,KAAKC,IAAIjF,EAAIuG,GCYxC,MAAM68B,GACF/kC,YAAYwe,EAAOwmB,GAAU,mBAAEx7B,GAAuB,IA0DlD,GAtDAvI,KAAKskB,WAAa,KAIlBtkB,KAAKgkC,cAAgB,KAIrBhkC,KAAKikC,kBAAoB,KAIzBjkC,KAAK+jC,SAAW,GAChB/jC,KAAKkkC,YAAc,KACf,IAAMlkC,KAAKgkC,gBAAiBhkC,KAAKikC,kBAC7B,OACJ,MAAM9iB,EAAOgjB,GAAWnkC,KAAKikC,kBAAmBjkC,KAAKokC,SAC/CC,EAAmC,OAApBrkC,KAAKskB,WAIpBggB,EDrClB,SAAoB5jC,EAAGuG,GAEnB,MAAMs9B,EAASnwB,GAAS1T,EAAEwP,EAAGjJ,EAAEiJ,GACzBs0B,EAASpwB,GAAS1T,EAAEqG,EAAGE,EAAEF,GAC/B,OAAOrB,KAAKkmB,KAAK2Y,GAAU,EAAIC,GAAU,GCiCDC,CAAWtjB,EAAKtJ,OAAQ,CAAE3H,EAAG,EAAGnJ,EAAG,KAAQ,EAC3E,IAAKs9B,IAAiBC,EAClB,OACJ,MAAM,MAAEzmB,GAAUsD,GACZ,UAAEve,GAAcoc,GACtBhf,KAAKokC,QAAQ9jB,KAAK,IAAKzC,EAAOjb,UAAAA,IAC9B,MAAM,QAAE8hC,EAAO,OAAEC,GAAW3kC,KAAK+jC,SAC5BM,IACDK,GAAWA,EAAQ1kC,KAAKgkC,cAAe7iB,GACvCnhB,KAAKskB,WAAatkB,KAAKgkC,eAE3BW,GAAUA,EAAO3kC,KAAKgkC,cAAe7iB,IAEzCnhB,KAAK4kC,kBAAoB,CAACrnB,EAAO4D,KAC7BnhB,KAAKgkC,cAAgBzmB,EACrBvd,KAAKikC,kBAAoBY,GAAe1jB,EAAMnhB,KAAKuI,oBAEnD,UAAavI,KAAKkkC,aAAa,IAEnClkC,KAAK8kC,gBAAkB,CAACvnB,EAAO4D,KAE3B,GADAnhB,KAAK+kC,OACC/kC,KAAKgkC,gBAAiBhkC,KAAKikC,kBAC7B,OACJ,MAAM,MAAEe,EAAK,aAAEC,GAAiBjlC,KAAK+jC,SAC/BmB,EAAUf,GAA0B,kBAAf5mB,EAAMxV,KAC3B/H,KAAKikC,kBACLY,GAAe1jB,EAAMnhB,KAAKuI,oBAAqBvI,KAAKokC,SACtDpkC,KAAKskB,YAAc0gB,GACnBA,EAAMznB,EAAO2nB,GAEjBD,GAAgBA,EAAa1nB,EAAO2nB,KAGnC5nB,GAAiBC,GAClB,OACJvd,KAAK+jC,SAAWA,EAChB/jC,KAAKuI,mBAAqBA,EAC1B,MACM48B,EAAcN,GADPlnB,GAAiBJ,GACWvd,KAAKuI,qBACxC,MAAEsV,GAAUsnB,GACZ,UAAEviC,GAAcoc,GACtBhf,KAAKokC,QAAU,CAAC,IAAKvmB,EAAOjb,UAAAA,IAC5B,MAAM,eAAEwiC,GAAmBrB,EAC3BqB,GACIA,EAAe7nB,EAAO4mB,GAAWgB,EAAanlC,KAAKokC,UACvDpkC,KAAKiF,gBAAkBgZ,GAAKH,GAAgB/c,OAAQ,cAAef,KAAK4kC,mBAAoB9mB,GAAgB/c,OAAQ,YAAaf,KAAK8kC,iBAAkBhnB,GAAgB/c,OAAQ,gBAAiBf,KAAK8kC,kBAE1MO,eAAetB,GACX/jC,KAAK+jC,SAAWA,EAEpBgB,MACI/kC,KAAKiF,iBAAmBjF,KAAKiF,kBAC7B8b,GAAY/gB,KAAKkkC,cAGzB,SAASW,GAAe1jB,EAAM5Y,GAC1B,OAAOA,EAAqB,CAAEsV,MAAOtV,EAAmB4Y,EAAKtD,QAAWsD,EAE5E,SAASmkB,GAAc5kC,EAAGuG,GACtB,MAAO,CAAEiJ,EAAGxP,EAAEwP,EAAIjJ,EAAEiJ,EAAGnJ,EAAGrG,EAAEqG,EAAIE,EAAEF,GAEtC,SAASo9B,IAAW,MAAEtmB,GAASumB,GAC3B,MAAO,CACHvmB,MAAAA,EACAoB,MAAOqmB,GAAcznB,EAAO0nB,GAAgBnB,IAC5CvsB,OAAQytB,GAAcznB,EAAO2nB,GAAiBpB,IAC9Che,SAAU,GAAYge,EAAS,KAGvC,SAASoB,GAAiBpB,GACtB,OAAOA,EAAQ,GAEnB,SAASmB,GAAgBnB,GACrB,OAAOA,EAAQA,EAAQ/iC,OAAS,GAEpC,SAAS,GAAY+iC,EAASzH,GAC1B,GAAIyH,EAAQ/iC,OAAS,EACjB,MAAO,CAAE6O,EAAG,EAAGnJ,EAAG,GAEtB,IAAIxJ,EAAI6mC,EAAQ/iC,OAAS,EACrBokC,EAAmB,KACvB,MAAMC,EAAYH,GAAgBnB,GAClC,KAAO7mC,GAAK,IACRkoC,EAAmBrB,EAAQ7mC,KACvBmoC,EAAU9iC,UAAY6iC,EAAiB7iC,UACvC4jB,GAAsBmW,MAG1Bp/B,IAEJ,IAAKkoC,EACD,MAAO,CAAEv1B,EAAG,EAAGnJ,EAAG,GAEtB,MAAM2wB,EAAOhR,GAAsBgf,EAAU9iC,UAAY6iC,EAAiB7iC,WAC1E,GAAa,IAAT80B,EACA,MAAO,CAAExnB,EAAG,EAAGnJ,EAAG,GAEtB,MAAMyU,EAAkB,CACpBtL,GAAIw1B,EAAUx1B,EAAIu1B,EAAiBv1B,GAAKwnB,EACxC3wB,GAAI2+B,EAAU3+B,EAAI0+B,EAAiB1+B,GAAK2wB,GAQ5C,OANIlc,EAAgBtL,IAAMukB,EAAAA,IACtBjZ,EAAgBtL,EAAI,GAEpBsL,EAAgBzU,IAAM0tB,EAAAA,IACtBjZ,EAAgBzU,EAAI,GAEjByU,EC/IX,SAASmqB,GAAWC,GAChB,OAAOA,EAAKz9B,IAAMy9B,EAAK19B,IAE3B,SAAS29B,GAAOznC,EAAOgY,EAAS,EAAG0vB,EAAc,KAC7C,OAAOpgC,KAAKC,IAAIvH,EAAQgY,IAAW0vB,EAEvC,SAASC,GAAc9mB,EAAO5I,EAAQD,EAAQwB,EAAS,IACnDqH,EAAMrH,OAASA,EACfqH,EAAM+mB,YAAcpqB,GAAIvF,EAAOnO,IAAKmO,EAAOlO,IAAK8W,EAAMrH,QACtDqH,EAAMjO,MAAQ20B,GAAWvvB,GAAUuvB,GAAWtvB,IAC1CwvB,GAAO5mB,EAAMjO,MAAO,EAAG,OAAWyc,MAAMxO,EAAMjO,UAC9CiO,EAAMjO,MAAQ,GAClBiO,EAAMgnB,UACFrqB,GAAIxF,EAAOlO,IAAKkO,EAAOjO,IAAK8W,EAAMrH,QAAUqH,EAAM+mB,aAClDH,GAAO5mB,EAAMgnB,YAAcxY,MAAMxO,EAAMgnB,cACvChnB,EAAMgnB,UAAY,GAE1B,SAASC,GAAajnB,EAAO5I,EAAQD,EAAQwB,GACzCmuB,GAAc9mB,EAAM/O,EAAGmG,EAAOnG,EAAGkG,EAAOlG,EAAG0H,EAASA,EAAOlD,aAAUtK,GACrE27B,GAAc9mB,EAAMlY,EAAGsP,EAAOtP,EAAGqP,EAAOrP,EAAG6Q,EAASA,EAAOjD,aAAUvK,GAEzE,SAAS+7B,GAAiB/vB,EAAQgwB,EAAU7jC,GACxC6T,EAAOlO,IAAM3F,EAAO2F,IAAMk+B,EAASl+B,IACnCkO,EAAOjO,IAAMiO,EAAOlO,IAAMy9B,GAAWS,GAMzC,SAASC,GAAyBjwB,EAAQ/K,EAAQ9I,GAC9C6T,EAAOlO,IAAMmD,EAAOnD,IAAM3F,EAAO2F,IACjCkO,EAAOjO,IAAMiO,EAAOlO,IAAMy9B,GAAWt6B,GAEzC,SAASi7B,GAAqBlwB,EAAQ/K,EAAQ9I,GAC1C8jC,GAAyBjwB,EAAOlG,EAAG7E,EAAO6E,EAAG3N,EAAO2N,GACpDm2B,GAAyBjwB,EAAOrP,EAAGsE,EAAOtE,EAAGxE,EAAOwE,GCXxD,SAASw/B,GAA4BX,EAAM19B,EAAKC,GAC5C,MAAO,CACHD,SAAakC,IAARlC,EAAoB09B,EAAK19B,IAAMA,OAAMkC,EAC1CjC,SAAaiC,IAARjC,EACCy9B,EAAKz9B,IAAMA,GAAOy9B,EAAKz9B,IAAMy9B,EAAK19B,UAClCkC,GAgBd,SAASo8B,GAA4BC,EAAYC,GAC7C,IAAIx+B,EAAMw+B,EAAgBx+B,IAAMu+B,EAAWv+B,IACvCC,EAAMu+B,EAAgBv+B,IAAMs+B,EAAWt+B,IAO3C,OAJIu+B,EAAgBv+B,IAAMu+B,EAAgBx+B,IACtCu+B,EAAWt+B,IAAMs+B,EAAWv+B,OAC3BA,EAAKC,GAAO,CAACA,EAAKD,IAEhB,CAAEA,IAAAA,EAAKC,IAAAA,GAwClB,MAAMw+B,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACH7+B,IAAK8+B,GAAoBH,EAAaC,GACtC3+B,IAAK6+B,GAAoBH,EAAaE,IAG9C,SAASC,GAAoBH,EAAaI,GACtC,MAA8B,kBAAhBJ,EACRA,EACAA,EAAYI,IAAU,ECzHhC,SAASC,GAASlnB,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,MCIpC,SAASmnB,IAAwB,IAAE5lC,EAAG,KAAEO,EAAI,MAAEiR,EAAK,OAAEvR,IACjD,MAAO,CACH0O,EAAG,CAAEhI,IAAKpG,EAAMqG,IAAK4K,GACrBhM,EAAG,CAAEmB,IAAK3G,EAAK4G,IAAK3G,ICR5B,SAAS4lC,GAAgBp2B,GACrB,YAAiB5G,IAAV4G,GAAiC,IAAVA,EAElC,SAASq2B,IAAS,MAAEr2B,EAAK,OAAE8C,EAAM,OAAEC,IAC/B,OAASqzB,GAAgBp2B,KACpBo2B,GAAgBtzB,KAChBszB,GAAgBrzB,GAEzB,SAASwB,GAAasE,GAClB,OAAQwtB,GAASxtB,IACbytB,GAAeztB,IACfA,EAAO1J,GACP0J,EAAOnG,QACPmG,EAAOlG,SACPkG,EAAOjG,QAEf,SAAS0zB,GAAeztB,GACpB,OAAO0tB,GAAc1tB,EAAO3J,IAAMq3B,GAAc1tB,EAAO9S,GAE3D,SAASwgC,GAAcnpC,GACnB,OAAOA,GAAmB,OAAVA,ECdpB,SAASopC,GAAW3pB,EAAO7M,EAAOg1B,GAG9B,OAAOA,EADQh1B,GADY6M,EAAQmoB,GAOvC,SAASyB,GAAgB5pB,EAAOooB,EAAWj1B,EAAOg1B,EAAa0B,GAI3D,YAHiBt9B,IAAbs9B,IACA7pB,EAAQ2pB,GAAW3pB,EAAO6pB,EAAU1B,IAEjCwB,GAAW3pB,EAAO7M,EAAOg1B,GAAeC,EAKnD,SAAS0B,GAAe/B,EAAMK,EAAY,EAAGj1B,EAAQ,EAAGg1B,EAAa0B,GACjE9B,EAAK19B,IAAMu/B,GAAgB7B,EAAK19B,IAAK+9B,EAAWj1B,EAAOg1B,EAAa0B,GACpE9B,EAAKz9B,IAAMs/B,GAAgB7B,EAAKz9B,IAAK89B,EAAWj1B,EAAOg1B,EAAa0B,GAKxE,SAASE,GAAcC,GAAK,EAAE33B,EAAC,EAAEnJ,IAC7B4gC,GAAeE,EAAI33B,EAAGA,EAAE+1B,UAAW/1B,EAAEc,MAAOd,EAAE81B,aAC9C2B,GAAeE,EAAI9gC,EAAGA,EAAEk/B,UAAWl/B,EAAEiK,MAAOjK,EAAEi/B,aAwDlD,SAAS8B,GAAc92B,GACnB,OAAI+2B,OAAOC,UAAUh3B,IAEdA,EAAQ,iBAAmBA,EAAQ,cAD/BA,EACwD,EAEvE,SAASi3B,GAAcrC,EAAMxxB,GACzBwxB,EAAK19B,IAAM09B,EAAK19B,IAAMkM,EACtBwxB,EAAKz9B,IAAMy9B,EAAKz9B,IAAMiM,EAO1B,SAAS8zB,GAActC,EAAMuC,GAAaxmC,EAAKymC,EAAUC,IACrD,MAAMC,OAAuCl+B,IAA1B+9B,EAAWE,GAA2BF,EAAWE,GAAa,GAC3ErC,EAAcpqB,GAAIgqB,EAAK19B,IAAK09B,EAAKz9B,IAAKmgC,GAE5CX,GAAe/B,EAAMuC,EAAWxmC,GAAMwmC,EAAWC,GAAWpC,EAAamC,EAAWn3B,OAKxF,MAAMu3B,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAI9B,SAASC,GAAaZ,EAAK7lC,GACvBkmC,GAAcL,EAAI33B,EAAGlO,EAAWumC,IAChCL,GAAcL,EAAI9gC,EAAG/E,EAAWwmC,ICnHpC,SAASE,GAAmBp6B,EAAUu2B,GAClC,OAAOsC,GHeX,SAA4BtpB,EAAOgnB,GAC/B,IAAKA,EACD,OAAOhnB,EACX,MAAM8qB,EAAU9D,EAAe,CAAE30B,EAAG2N,EAAM/b,KAAMiF,EAAG8W,EAAMtc,MACnDqnC,EAAc/D,EAAe,CAAE30B,EAAG2N,EAAM9K,MAAOhM,EAAG8W,EAAMrc,SAC9D,MAAO,CACHD,IAAKonC,EAAQ5hC,EACbjF,KAAM6mC,EAAQz4B,EACd1O,OAAQonC,EAAY7hC,EACpBgM,MAAO61B,EAAY14B,GGxBQ24B,CAAmBv6B,EAAShN,wBAAyBujC,ICcxF,MAAMiE,GAAsB,IAAI9mB,QAKhC,MAAM+mB,GACFhqC,YAAYoO,GAIRnN,KAAKgpC,eAAiB,KACtBhpC,KAAKipC,YAAa,EAClBjpC,KAAKkpC,iBAAmB,KACxBlpC,KAAKgmC,YAAc,CAAE91B,EAAG,EAAGnJ,EAAG,GAI9B/G,KAAKmpC,aAAc,EACnBnpC,KAAKopC,uBAAwB,EAI7BppC,KAAKqpC,QC7BW,CACpBn5B,EAFqB,CAAGhI,IAAK,EAAGC,IAAK,GAGrCpB,EAHqB,CAAGmB,IAAK,EAAGC,IAAK,ID+BjCnI,KAAKmN,cAAgBA,EAEzB5D,MAAM+/B,GAAa,aAAEC,GAAe,GAAU,IAI1C,MAAM,gBAAEl8B,GAAoBrN,KAAKmN,cACjC,GAAIE,IAAiD,IAA9BA,EAAgBm2B,UACnC,OAuFJxjC,KAAKwpC,WAAa,IAAI1F,GAAWwF,EAAa,CAC1ClE,eAvFoB7nB,IAGpBvd,KAAKypC,gBACDF,GACAvpC,KAAKupC,aAAa5rB,GAAiBJ,EAAO,QAAQM,QAmFtD6mB,QAhFY,CAACnnB,EAAO4D,KAEpB,MAAM,KAAEpW,EAAI,gBAAE2+B,EAAe,YAAEC,GAAgB3pC,KAAKohB,WACpD,GAAIrW,IAAS2+B,IACL1pC,KAAKgpC,gBACLhpC,KAAKgpC,iBACThpC,KAAKgpC,eAAiBvqB,GAAc1T,IAE/B/K,KAAKgpC,gBACN,OAERhpC,KAAKipC,YAAa,EAClBjpC,KAAKkpC,iBAAmB,KACxBlpC,KAAK4pC,qBACD5pC,KAAKmN,cAAcoN,aACnBva,KAAKmN,cAAcoN,WAAWsvB,oBAAqB,EACnD7pC,KAAKmN,cAAcoN,WAAWnE,YAAShM,GAK3C88B,IAAUtB,IACN,IAAIj6B,EAAU3L,KAAK8pC,mBAAmBlE,GAAM3nC,OAAS,EAIrD,GAAI0T,GAAQnC,KAAK7D,GAAU,CACvB,MAAM,WAAE4O,GAAeva,KAAKmN,cAC5B,GAAIoN,GAAcA,EAAWlP,OAAQ,CACjC,MAAM0+B,EAAexvB,EAAWlP,OAAO2+B,UAAUpE,GACjD,GAAImE,EAAc,CAEdp+B,EADeg6B,GAAWoE,IACNj5B,WAAWnF,GAAW,OAItD3L,KAAKgmC,YAAYJ,GAAQj6B,KAGzBg+B,GACA,WAAa,IAAMA,EAAYpsB,EAAO4D,KAAO,GAAO,GAExD,MAAM,eAAEpT,GAAmB/N,KAAKmN,cAChCY,GAAkBA,EAAeuT,UAAU,aAAa,IAsCxDqjB,OApCW,CAACpnB,EAAO4D,KAEnB,MAAM,gBAAEuoB,EAAe,kBAAEO,EAAiB,gBAAEC,EAAe,OAAEC,GAAYnqC,KAAKohB,WAE9E,IAAKsoB,IAAoB1pC,KAAKgpC,eAC1B,OACJ,MAAM,OAAEnxB,GAAWsJ,EAEnB,GAAI8oB,GAA+C,OAA1BjqC,KAAKkpC,iBAM1B,OALAlpC,KAAKkpC,iBA6UrB,SAA6BrxB,EAAQuyB,EAAgB,IACjD,IAAI3R,EAAY,KACZ/yB,KAAKC,IAAIkS,EAAO9Q,GAAKqjC,EACrB3R,EAAY,IAEP/yB,KAAKC,IAAIkS,EAAO3H,GAAKk6B,IAC1B3R,EAAY,KAEhB,OAAOA,EArV6B4R,CAAoBxyB,QAEd,OAA1B7X,KAAKkpC,kBACLgB,GAAmBA,EAAgBlqC,KAAKkpC,mBAKhDlpC,KAAKsqC,WAAW,IAAKnpB,EAAKtD,MAAOhG,GACjC7X,KAAKsqC,WAAW,IAAKnpB,EAAKtD,MAAOhG,GAOjC7X,KAAKmN,cAAcS,SAKnBu8B,GAAUA,EAAO5sB,EAAO4D,IAOxB8jB,aALiB,CAAC1nB,EAAO4D,IAASnhB,KAAKq0B,KAAK9W,EAAO4D,IAMpD,CAAE5Y,mBAAoBvI,KAAKmN,cAAco9B,0BAEhDlW,KAAK9W,EAAO4D,GACR,MAAM8nB,EAAajpC,KAAKipC,WAExB,GADAjpC,KAAKugB,UACA0oB,EACD,OACJ,MAAM,SAAE7iB,GAAajF,EACrBnhB,KAAKi+B,eAAe7X,GACpB,MAAM,UAAEokB,GAAcxqC,KAAKohB,WACvBopB,GACA,WAAa,IAAMA,EAAUjtB,EAAO4D,KAG5CZ,SACIvgB,KAAKipC,YAAa,EAClB,MAAM,WAAE1uB,EAAU,eAAExM,GAAmB/N,KAAKmN,cACxCoN,IACAA,EAAWsvB,oBAAqB,GAEpC7pC,KAAKwpC,YAAcxpC,KAAKwpC,WAAWzE,MACnC/kC,KAAKwpC,gBAAap/B,EAClB,MAAM,gBAAEs/B,GAAoB1pC,KAAKohB,YAC5BsoB,GAAmB1pC,KAAKgpC,iBACzBhpC,KAAKgpC,iBACLhpC,KAAKgpC,eAAiB,MAE1Bj7B,GAAkBA,EAAeuT,UAAU,aAAa,GAE5DgpB,WAAW1E,EAAM6E,EAAQ5yB,GACrB,MAAM,KAAE9M,GAAS/K,KAAKohB,WAEtB,IAAKvJ,IAAW6yB,GAAW9E,EAAM76B,EAAM/K,KAAKkpC,kBACxC,OACJ,MAAMyB,EAAY3qC,KAAK8pC,mBAAmBlE,GAC1C,IAAI7f,EAAO/lB,KAAKgmC,YAAYJ,GAAQ/tB,EAAO+tB,GAEvC5lC,KAAKmpC,aAAenpC,KAAKmpC,YAAYvD,KACrC7f,ENzKZ,SAA0BlI,GAAO,IAAE3V,EAAG,IAAEC,GAAOkhC,GAS3C,YARYj/B,IAARlC,GAAqB2V,EAAQ3V,EAE7B2V,EAAQwrB,EAAUztB,GAAI1T,EAAK2V,EAAOwrB,EAAQnhC,KAAOxC,KAAKyC,IAAI0V,EAAO3V,QAEpDkC,IAARjC,GAAqB0V,EAAQ1V,IAElC0V,EAAQwrB,EAAUztB,GAAIzT,EAAK0V,EAAOwrB,EAAQlhC,KAAOzC,KAAKwC,IAAI2V,EAAO1V,IAE9D0V,EMgKQ+sB,CAAiB7kB,EAAM/lB,KAAKmpC,YAAYvD,GAAO5lC,KAAKqpC,QAAQzD,KAEvE+E,EAAUx7B,IAAI4W,GAElB6jB,qBACI,MAAM,gBAAEiB,EAAe,YAAEhE,GAAgB7mC,KAAKohB,YACxC,OAAE/V,GAAWrL,KAAKmN,cAAcoN,YAAc,GAC9CuwB,EAAkB9qC,KAAKmpC,YACzB0B,GAAmB5hC,EAAY4hC,GAC1B7qC,KAAKmpC,cACNnpC,KAAKmpC,YAAcnpC,KAAK+qC,yBAKxB/qC,KAAKmpC,eADL0B,IAAmBx/B,IN3JnC,SAAiC2+B,GAAW,IAAEzoC,EAAG,KAAEO,EAAI,OAAEN,EAAM,MAAEuR,IAC7D,MAAO,CACH7C,EAAGq2B,GAA4ByD,EAAU95B,EAAGpO,EAAMiR,GAClDhM,EAAGw/B,GAA4ByD,EAAUjjC,EAAGxF,EAAKC,IMyJtBwpC,CAAwB3/B,EAAO2+B,UAAWa,GAMrE7qC,KAAKqpC,QNpGb,SAA4BxC,EAAcF,IAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACHz2B,EAAG02B,GAAmBC,EAAa,OAAQ,SAC3C9/B,EAAG6/B,GAAmBC,EAAa,MAAO,WM2F3BoE,CAAmBpE,GAK9BiE,IAAoB9qC,KAAKmpC,aACzB99B,GACArL,KAAKmpC,cACJnpC,KAAKopC,uBACNlC,IAAUtB,IACF5lC,KAAK8pC,mBAAmBlE,KACxB5lC,KAAKmpC,YAAYvD,GN7HrC,SAA+Bv6B,EAAQ89B,GACnC,MAAM+B,EAAsB,GAO5B,YANwB9gC,IAApB++B,EAAYjhC,MACZgjC,EAAoBhjC,IAAMihC,EAAYjhC,IAAMmD,EAAOnD,UAE/BkC,IAApB++B,EAAYhhC,MACZ+iC,EAAoB/iC,IAAMghC,EAAYhhC,IAAMkD,EAAOnD,KAEhDgjC,EMqHkCC,CAAsB9/B,EAAO2+B,UAAUpE,GAAO5lC,KAAKmpC,YAAYvD,QAKxGmF,wBACI,MAAQF,gBAAiB1B,EAAW,yBAAEiC,GAA6BprC,KAAKohB,WACxE,IAAK+nB,IAAgBlgC,EAAYkgC,GAC7B,OAAO,EACX,MAAMkC,EAAqBlC,EAAYx9B,QACvC4a,GAAiC,OAAvB8kB,EAA6B,0GACvC,MAAM,WAAE9wB,GAAeva,KAAKmN,cAE5B,IAAKoN,IAAeA,EAAWlP,OAC3B,OAAO,EACX,MAAMigC,ED5Nd,SAAwBjxB,EAASkxB,EAAoBhjC,GACjD,MAAMijC,EAAc9C,GAAmBruB,EAAS9R,IAC1C,OAAEkjC,GAAWF,EAKnB,OAJIE,IACAxD,GAAcuD,EAAYt7B,EAAGu7B,EAAO5zB,OAAO3H,GAC3C+3B,GAAcuD,EAAYzkC,EAAG0kC,EAAO5zB,OAAO9Q,IAExCykC,ECqNoBE,CAAeL,EAAoB9wB,EAAWiI,KAAMxiB,KAAKmN,cAAco9B,yBAC9F,IAAIoB,ENtKZ,SAAiC3B,EAAWsB,GACxC,MAAO,CACHp7B,EAAGs2B,GAA4BwD,EAAU95B,EAAGo7B,EAAep7B,GAC3DnJ,EAAGy/B,GAA4BwD,EAAUjjC,EAAGukC,EAAevkC,IMmKjC6kC,CAAwBrxB,EAAWlP,OAAO2+B,UAAWsB,GAK/E,GAAIF,EAA0B,CAC1B,MAAMS,EAAkBT,EJ9NpC,UAAiC,EAAEl7B,EAAC,EAAEnJ,IAClC,MAAO,CAAExF,IAAKwF,EAAEmB,IAAK6K,MAAO7C,EAAE/H,IAAK3G,OAAQuF,EAAEoB,IAAKrG,KAAMoO,EAAEhI,KI6ND4jC,CAAwBH,IACzE3rC,KAAKopC,wBAA0ByC,EAC3BA,IACAF,EAAsBxE,GAAwB0E,IAGtD,OAAOF,EAEX1N,eAAe7X,GACX,MAAM,KAAErb,EAAI,aAAEghC,EAAY,YAAElF,EAAW,eAAEmF,EAAc,iBAAEC,EAAgB,oBAAEC,GAAyBlsC,KAAKohB,WACnG+nB,EAAcnpC,KAAKmpC,aAAe,GAClCgD,EAAqBjF,IAAUtB,IACjC,IAAK8E,GAAW9E,EAAM76B,EAAM/K,KAAKkpC,kBAC7B,OAEJ,IAAItsB,EAAcusB,GAAeA,EAAYvD,IAAU,GACnDqG,IACArvB,EAAa,CAAE1U,IAAK,EAAGC,IAAK,IAOhC,MAAMorB,EAAkBsT,EAAc,IAAM,IACtCvT,EAAgBuT,EAAc,GAAK,IACnC1T,EAAU,CACZprB,KAAM,UACNqe,SAAU2lB,EAAe3lB,EAASwf,GAAQ,EAC1CrS,gBAAAA,EACAD,cAAAA,EACAD,aAAc,IACdrB,UAAW,EACXC,UAAW,MACR+Z,KACApvB,GAKP,OAAO5c,KAAKosC,wBAAwBxG,EAAMzS,MAG9C,OAAO2C,QAAQ5S,IAAIipB,GAAoB3U,KAAK0U,GAEhDE,wBAAwBxG,EAAMhpB,GAC1B,MAAM+tB,EAAY3qC,KAAK8pC,mBAAmBlE,GAC1C,OAAO+E,EAAUphC,MAAMqxB,GAAmBgL,EAAM+E,EAAW,EAAG/tB,IAElE6sB,gBACIvC,IAAUtB,GAAS5lC,KAAK8pC,mBAAmBlE,GAAMvR,SAQrDyV,mBAAmBlE,GACf,MAAMyG,EAAU,QAAUzG,EAAKzqB,cACzBrW,EAAQ9E,KAAKmN,cAAciU,WAC3BkrB,EAAsBxnC,EAAMunC,GAClC,OAAOC,GAEDtsC,KAAKmN,cAAc6xB,SAAS4G,GAAO9gC,EAAMoF,QAAUpF,EAAMoF,QAAQ07B,QAAQx7B,IAAc,GAEjGm/B,aAAa1rB,GACTqpB,IAAUtB,IACN,MAAM,KAAE76B,GAAS/K,KAAKohB,WAEtB,IAAKspB,GAAW9E,EAAM76B,EAAM/K,KAAKkpC,kBAC7B,OACJ,MAAM,WAAE3uB,GAAeva,KAAKmN,cACtBw9B,EAAY3qC,KAAK8pC,mBAAmBlE,GAC1C,GAAIrrB,GAAcA,EAAWlP,OAAQ,CACjC,MAAM,IAAEnD,EAAG,IAAEC,GAAQoS,EAAWlP,OAAO2+B,UAAUpE,GACjD+E,EAAUx7B,IAAI0O,EAAM+nB,GAAQhqB,GAAI1T,EAAKC,EAAK,SAStDokC,iCACI,IAAKvsC,KAAKmN,cAAcxB,QACpB,OACJ,MAAM,KAAEZ,EAAI,gBAAE8/B,GAAoB7qC,KAAKohB,YACjC,WAAE7G,GAAeva,KAAKmN,cAC5B,IAAKlE,EAAY4hC,KAAqBtwB,IAAeva,KAAKmpC,YACtD,OAKJnpC,KAAKypC,gBAKL,MAAM+C,EAAc,CAAEt8B,EAAG,EAAGnJ,EAAG,GAC/BmgC,IAAUtB,IACN,MAAM+E,EAAY3qC,KAAK8pC,mBAAmBlE,GAC1C,GAAI+E,EAAW,CACX,MAAMnyB,EAASmyB,EAAU1sC,MACzBuuC,EAAY5G,GN5Q5B,SAAoBvvB,EAAQD,GACxB,IAAIwB,EAAS,GACb,MAAM60B,EAAe9G,GAAWtvB,GAC1Bq2B,EAAe/G,GAAWvvB,GAOhC,OANIs2B,EAAeD,EACf70B,EAAS2T,GAASnV,EAAOlO,IAAKkO,EAAOjO,IAAMskC,EAAcp2B,EAAOnO,KAE3DukC,EAAeC,IACpB90B,EAAS2T,GAASlV,EAAOnO,IAAKmO,EAAOlO,IAAMukC,EAAct2B,EAAOlO,MAE7DyI,EAAM,EAAG,EAAGiH,GMkQa,CAAW,CAAE1P,IAAKsQ,EAAQrQ,IAAKqQ,GAAUxY,KAAKmpC,YAAYvD,QAMtF,MAAM,kBAAExwB,GAAsBpV,KAAKmN,cAAciU,WACjDphB,KAAKmN,cAAcxB,QAAQpF,MAAMvE,UAAYoT,EACvCA,EAAkB,GAAI,IACtB,OACNmF,EAAWiI,MAAQjI,EAAWiI,KAAKmqB,eACnCpyB,EAAWqyB,eACX5sC,KAAK4pC,qBAKL1C,IAAUtB,IACN,IAAK8E,GAAW9E,EAAM76B,EAAM,MACxB,OAIJ,MAAM4/B,EAAY3qC,KAAK8pC,mBAAmBlE,IACpC,IAAE19B,EAAG,IAAEC,GAAQnI,KAAKmpC,YAAYvD,GACtC+E,EAAUx7B,IAAIyM,GAAI1T,EAAKC,EAAKqkC,EAAY5G,QAGhD7gC,eACI,IAAK/E,KAAKmN,cAAcxB,QACpB,OACJm9B,GAAoB35B,IAAInP,KAAKmN,cAAenN,MAC5C,MAIM6sC,EAAsB/uB,GAJZ9d,KAAKmN,cAAcxB,QAIkB,eAAgB4R,IACjE,MAAM,KAAExS,EAAI,aAAE4L,GAAe,GAAS3W,KAAKohB,WAC3CrW,GAAQ4L,GAAgB3W,KAAKuJ,MAAMgU,MAEjCuvB,EAAyB,KAC3B,MAAM,gBAAEjC,GAAoB7qC,KAAKohB,WAC7BnY,EAAY4hC,KACZ7qC,KAAKmpC,YAAcnpC,KAAK+qC,2BAG1B,WAAExwB,GAAeva,KAAKmN,cACtB4/B,EAA4BxyB,EAAWnU,iBAAiB,UAAW0mC,GACrEvyB,IAAeA,EAAWlP,SAC1BkP,EAAWiI,MAAQjI,EAAWiI,KAAKmqB,eACnCpyB,EAAWqyB,gBAEfE,IAKA,MAAME,EAAqB9vB,GAAYnc,OAAQ,UAAU,IAAMf,KAAKusC,mCAK9DU,EAA2B1yB,EAAWnU,iBAAiB,aAAa,EAAI6Y,MAAAA,EAAOiuB,iBAAAA,MAC7EltC,KAAKipC,YAAciE,IACnBhG,IAAUtB,IACN,MAAMpH,EAAcx+B,KAAK8pC,mBAAmBlE,GACvCpH,IAELx+B,KAAKgmC,YAAYJ,IAAS3mB,EAAM2mB,GAAMK,UACtCzH,EAAYrvB,IAAIqvB,EAAYvgC,MAAQghB,EAAM2mB,GAAMK,eAEpDjmC,KAAKmN,cAAcS,aAG3B,MAAO,KACHo/B,IACAH,IACAE,IACAE,GAA4BA,KAGpC7rB,WACI,MAAMtc,EAAQ9E,KAAKmN,cAAciU,YAC3B,KAAErW,GAAO,EAAK,kBAAEk/B,GAAoB,EAAK,gBAAEP,GAAkB,EAAK,gBAAEmB,GAAkB,EAAK,YAAEhE,EAAcF,GAAc,aAAEoF,GAAe,GAAUjnC,EAC1J,MAAO,IACAA,EACHiG,KAAAA,EACAk/B,kBAAAA,EACAP,gBAAAA,EACAmB,gBAAAA,EACAhE,YAAAA,EACAkF,aAAAA,IAIZ,SAASrB,GAAWjS,EAAW1tB,EAAMm+B,GACjC,QAAkB,IAATn+B,GAAiBA,IAAS0tB,KACT,OAArByQ,GAA6BA,IAAqBzQ,GE9a3D,MAAM0U,GAAgB/vB,GAAY,CAACG,EAAO4D,KAClC/D,GACA,WAAa,IAAMA,EAAQG,EAAO4D,MCN1C,SAASisB,GAAgBC,EAAQzH,GAC7B,OAAIA,EAAKz9B,MAAQy9B,EAAK19B,IACX,EACHmlC,GAAUzH,EAAKz9B,IAAMy9B,EAAK19B,KAAQ,IAS9C,MAAMolC,GAAsB,CACxBC,QAAS,CAAC/0B,EAAQ3V,KACd,IAAKA,EAAKuT,OACN,OAAOoC,EAKX,GAAsB,kBAAXA,EAAqB,CAC5B,IAAI5G,GAAGpC,KAAKgJ,GAIR,OAAOA,EAHPA,EAAS1H,WAAW0H,GAY5B,MAAO,GAFG40B,GAAgB50B,EAAQ3V,EAAKuT,OAAOlG,OACpCk9B,GAAgB50B,EAAQ3V,EAAKuT,OAAOrP,QChChDymC,GAAmB,CACrBD,QAAS,CAAC/0B,GAAUi1B,UAAAA,EAAWC,gBAAAA,MAC3B,MAAMC,EAAWn1B,EACXo1B,EAASrgB,GAAQ1c,MAAM2H,GAE7B,GAAIo1B,EAAOvsC,OAAS,EAChB,OAAOssC,EACX,MAAMvf,EAAWb,GAAQJ,kBAAkB3U,GACrCX,EAA8B,kBAAd+1B,EAAO,GAAkB,EAAI,EAE7CC,EAASH,EAAgBx9B,EAAEc,MAAQy8B,EAAUv9B,EAC7C49B,EAASJ,EAAgB3mC,EAAEiK,MAAQy8B,EAAU1mC,EACnD6mC,EAAO,EAAI/1B,IAAWg2B,EACtBD,EAAO,EAAI/1B,IAAWi2B,EAOtB,MAAMC,EAAenyB,GAAIiyB,EAAQC,EAAQ,IAOzC,MALkC,kBAAvBF,EAAO,EAAI/1B,KAClB+1B,EAAO,EAAI/1B,IAAWk2B,GAEQ,kBAAvBH,EAAO,EAAI/1B,KAClB+1B,EAAO,EAAI/1B,IAAWk2B,GACnB3f,EAASwf,KCpBxB,MAAMI,WAAiC,YAMnCC,oBACI,MAAM,cAAE9gC,EAAa,YAAE+gC,EAAW,kBAAEC,EAAiB,SAAEphC,GAAa/M,KAAK8E,OACnE,WAAEyV,GAAepN,E/IjB/B,IAA2BihC,EAAAA,E+IkBDC,G/IjBtBvwC,OAAOyG,OAAOkL,EAAiB2+B,G+IkBvB7zB,IACI2zB,EAAYI,OACZJ,EAAYI,MAAMjuB,IAAI9F,GACtB4zB,GAAqBA,EAAkBtK,UAAY92B,GACnDohC,EAAkBtK,SAAStpB,GAE/BA,EAAWiI,KAAK+rB,YAChBh0B,EAAWnU,iBAAiB,qBAAqB,KAC7CpG,KAAKwuC,kBAETj0B,EAAWk0B,WAAW,IACfl0B,EAAWpF,QACdsuB,eAAgB,IAAMzjC,KAAKwuC,kBAGnC5iC,EAAsBE,gBAAiB,EAE3C4iC,wBAAwB1zB,GACpB,MAAM,iBAAE2zB,EAAgB,cAAExhC,EAAa,KAAEpC,EAAI,UAAEy4B,GAAcxjC,KAAK8E,MAC5DyV,EAAapN,EAAcoN,WACjC,OAAKA,GASLA,EAAWipB,UAAYA,EACnBz4B,GACAiQ,EAAU2zB,mBAAqBA,QACVvkC,IAArBukC,EACAp0B,EAAWq0B,aAGX5uC,KAAKwuC,eAELxzB,EAAUwoB,YAAcA,IACpBA,EACAjpB,EAAWs0B,UAELt0B,EAAWu0B,YAMjB,eAAiB,KACb,MAAMC,EAAQx0B,EAAWy0B,WACpBD,GAAUA,EAAME,QAAQ5tC,QACzBrB,KAAKwuC,mBAKd,MAnCI,KAqCfU,qBACI,MAAM,WAAE30B,GAAeva,KAAK8E,MAAMqI,cAC9BoN,IACAA,EAAWiI,KAAK+rB,aACXh0B,EAAW40B,kBAAoB50B,EAAW60B,UAC3CpvC,KAAKwuC,gBAIjBa,uBACI,MAAM,cAAEliC,EAAa,YAAE+gC,EAAaC,kBAAmBmB,GAAoBtvC,KAAK8E,OAC1E,WAAEyV,GAAepN,EACnBoN,IACAA,EAAWg1B,4BACPrB,GAAeA,EAAYI,OAC3BJ,EAAYI,MAAMrO,OAAO1lB,GACzB+0B,GAAkBA,EAAeE,YACjCF,EAAeE,WAAWj1B,IAGtCi0B,eACI,MAAM,aAAEA,GAAiBxuC,KAAK8E,MAC9B0pC,GAAgBA,IAEpB5gC,SACI,OAAO,MAGf,SAASf,GAAc/H,GACnB,MAAO0+B,EAAWgL,GCjFtB,WACI,MAAMrkC,GAAU,IAAAI,YAAW,GAC3B,GAAgB,OAAZJ,EACA,MAAO,EAAC,EAAM,MAClB,MAAM,UAAEq5B,EAAS,eAAEC,EAAc,SAAEI,GAAa15B,EAG1C4B,GAAK,IAAA0jC,SAGX,OAFA,IAAA3mC,YAAU,IAAM+6B,EAAS93B,IAAK,KAEtBy3B,GAAaC,EAAiB,EAAC,EADlB,IAAMA,GAAkBA,EAAe13B,IACE,EAAC,GDuE7B2jC,GAC5BxB,GAAc,IAAA3jC,YAAWyB,GAC/B,OAAQ,gBAA6BgiC,GAA0B,IAAKlpC,EAAOopC,YAAaA,EAAaC,mBAAmB,IAAA5jC,YAAW0B,GAA2Bu3B,UAAWA,EAAWgL,aAAcA,IAEtM,MAAMH,GAAyB,CAC3B/7B,aAAc,IACPg7B,GACHqC,QAAS,CACL,sBACA,uBACA,yBACA,4BAGRn9B,oBAAqB86B,GACrB76B,qBAAsB66B,GACtB36B,uBAAwB26B,GACxB56B,wBAAyB46B,GACzBsC,UAAWpC,IEvHTqC,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQxuC,OACrB0uC,GAAY3xC,GAA2B,kBAAVA,EAAqB0S,WAAW1S,GAASA,EACtE4xC,GAAQ5xC,GAA2B,kBAAVA,GAAsBwT,GAAGpC,KAAKpR,GA0C7D,SAAS6xC,GAAUp2B,EAAQq2B,GACvB,YAA8B9lC,IAAvByP,EAAOq2B,GACRr2B,EAAOq2B,GACPr2B,EAAOvH,aAyBjB,MAAM69B,GAAkBC,GAAS,EAAG,GAAK3oB,IACnC4oB,GAAmBD,GAAS,GAAK,IAAM1uB,IAC7C,SAAS0uB,GAASloC,EAAKC,EAAK2e,GACxB,OAAQnoB,GAEAA,EAAIuJ,EACG,EACPvJ,EAAIwJ,EACG,EACJ2e,EAAOyE,GAASrjB,EAAKC,EAAKxJ,ICnFzC,SAAS2xC,GAAa1K,EAAM2K,GACxB3K,EAAK19B,IAAMqoC,EAAWroC,IACtB09B,EAAKz9B,IAAMooC,EAAWpoC,IAO1B,SAASqoC,GAAY3I,EAAK4I,GACtBH,GAAazI,EAAI33B,EAAGugC,EAAUvgC,GAC9BogC,GAAazI,EAAI9gC,EAAG0pC,EAAU1pC,GCTlC,SAAS2pC,GAAiB7yB,EAAOooB,EAAWj1B,EAAOg1B,EAAa0B,GAM5D,OAJA7pB,EAAQ2pB,GADR3pB,GAASooB,EACiB,EAAIj1B,EAAOg1B,QACpB57B,IAAbs9B,IACA7pB,EAAQ2pB,GAAW3pB,EAAO,EAAI6pB,EAAU1B,IAErCnoB,EAuBX,SAAS8yB,GAAqB/K,EAAMuC,GAAaxmC,EAAKymC,EAAUC,GAAYzwB,EAAQg5B,IAlBpF,SAAyBhL,EAAMK,EAAY,EAAGj1B,EAAQ,EAAG4G,EAAS,GAAK8vB,EAAU6I,EAAa3K,EAAMgL,EAAahL,GACzGj0B,GAAQnC,KAAKy2B,KACbA,EAAYn1B,WAAWm1B,GAEvBA,EADyBrqB,GAAIg1B,EAAW1oC,IAAK0oC,EAAWzoC,IAAK89B,EAAY,KAC1C2K,EAAW1oC,KAE9C,GAAyB,kBAAd+9B,EACP,OACJ,IAAID,EAAcpqB,GAAI20B,EAAWroC,IAAKqoC,EAAWpoC,IAAKyP,GAClDguB,IAAS2K,IACTvK,GAAeC,GACnBL,EAAK19B,IAAMwoC,GAAiB9K,EAAK19B,IAAK+9B,EAAWj1B,EAAOg1B,EAAa0B,GACrE9B,EAAKz9B,IAAMuoC,GAAiB9K,EAAKz9B,IAAK89B,EAAWj1B,EAAOg1B,EAAa0B,GAOrEmJ,CAAgBjL,EAAMuC,EAAWxmC,GAAMwmC,EAAWC,GAAWD,EAAWE,GAAYF,EAAWn3B,MAAO4G,EAAQg5B,GAKlH,MAAM,GAAQ,CAAC,IAAK,SAAU,WACxB,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAASE,GAAoBjJ,EAAKM,EAAYsI,EAAWM,GACrDJ,GAAqB9I,EAAI33B,EAAGi4B,EAAY,GAAOsI,EAAYA,EAAUvgC,OAAI9F,EAAW2mC,EAAYA,EAAU7gC,OAAI9F,GAC9GumC,GAAqB9I,EAAI9gC,EAAGohC,EAAY,GAAOsI,EAAYA,EAAU1pC,OAAIqD,EAAW2mC,EAAYA,EAAUhqC,OAAIqD,GChDlH,SAAS4mC,GAAgB/xB,GACrB,OAA2B,IAApBA,EAAMgnB,WAAmC,IAAhBhnB,EAAMjO,MAE1C,SAASigC,GAAYhyB,GACjB,OAAO+xB,GAAgB/xB,EAAM/O,IAAM8gC,GAAgB/xB,EAAMlY,GAE7D,SAASmqC,GAAUxwC,EAAGuG,GAClB,OAAQvG,EAAEwP,EAAEhI,MAAQjB,EAAEiJ,EAAEhI,KACpBxH,EAAEwP,EAAE/H,MAAQlB,EAAEiJ,EAAE/H,KAChBzH,EAAEqG,EAAEmB,MAAQjB,EAAEF,EAAEmB,KAChBxH,EAAEqG,EAAEoB,MAAQlB,EAAEF,EAAEoB,IAExB,SAASgpC,GAAYtJ,GACjB,OAAOlC,GAAWkC,EAAI33B,GAAKy1B,GAAWkC,EAAI9gC,GCb9C,MAAMqqC,GACFryC,cACIiB,KAAKivC,QAAU,GAEnB5uB,IAAIxd,GACAm5B,GAAch8B,KAAKivC,QAASpsC,GAC5BA,EAAKwuC,iBAETpR,OAAOp9B,GAKH,GAJAq5B,GAAWl8B,KAAKivC,QAASpsC,GACrBA,IAAS7C,KAAKsxC,WACdtxC,KAAKsxC,cAAWlnC,GAEhBvH,IAAS7C,KAAKuxC,KAAM,CACpB,MAAMD,EAAWtxC,KAAKivC,QAAQjvC,KAAKivC,QAAQ5tC,OAAS,GAChDiwC,GACAtxC,KAAK6uC,QAAQyC,IAIzBxC,SAASjsC,GACL,MAAM2uC,EAAcxxC,KAAKivC,QAAQwC,WAAWC,GAAW7uC,IAAS6uC,IAChE,GAAoB,IAAhBF,EACA,OAAO,EAIX,IAAIF,EACJ,IAAK,IAAI/zC,EAAIi0C,EAAaj0C,GAAK,EAAGA,IAAK,CACnC,MAAMm0C,EAAS1xC,KAAKivC,QAAQ1xC,GAC5B,IAAyB,IAArBm0C,EAAOlO,UAAqB,CAC5B8N,EAAWI,EACX,OAGR,QAAIJ,IACAtxC,KAAK6uC,QAAQyC,IACN,GAMfzC,QAAQhsC,EAAM8uC,GACV,MAAML,EAAWtxC,KAAKuxC,KACtB,GAAI1uC,IAASyuC,IAEbtxC,KAAKsxC,SAAWA,EAChBtxC,KAAKuxC,KAAO1uC,EACZA,EAAK+uC,OACDN,GAAU,CACVA,EAAShjC,UAAYgjC,EAASD,iBAC9BxuC,EAAKwuC,iBACLxuC,EAAKgvC,WAAaP,EACdK,IACA9uC,EAAKgvC,WAAWC,iBAAkB,GAElCR,EAASS,WACTlvC,EAAKkvC,SAAWT,EAASS,SACzBlvC,EAAKkvC,SAAS78B,aACVo8B,EAASU,iBAAmBV,EAASp8B,cAEzCrS,EAAK2f,MAAQ3f,EAAK2f,KAAKyvB,aACvBpvC,EAAKqvC,eAAgB,GAEzB,MAAM,UAAEC,GAActvC,EAAKsS,SACT,IAAdg9B,GACAb,EAASc,QAgBrBC,wBACIryC,KAAKivC,QAAQnnC,SAASjF,IAClB,MAAM,QAAEsS,EAAO,aAAEm9B,GAAiBzvC,EAClCsS,EAAQsuB,gBAAkBtuB,EAAQsuB,iBAC9B6O,GACAA,EAAan9B,QAAQsuB,gBACjB6O,EAAan9B,QAAQsuB,oBAIrC4N,iBACIrxC,KAAKivC,QAAQnnC,SAASjF,IAClBA,EAAKyL,UAAYzL,EAAKwuC,gBAAe,MAO7CkB,qBACQvyC,KAAKuxC,MAAQvxC,KAAKuxC,KAAKQ,WACvB/xC,KAAKuxC,KAAKQ,cAAW3nC,IC1GjC,SAASooC,GAAyBvzB,EAAOwuB,EAAWgF,GAChD,IAAIzwC,EAAY,GAOhB,MAAM0wC,EAAazzB,EAAM/O,EAAE+1B,UAAYwH,EAAUv9B,EAC3CyiC,EAAa1zB,EAAMlY,EAAEk/B,UAAYwH,EAAU1mC,EAWjD,IAVI2rC,GAAcC,KACd3wC,EAAY,eAAe0wC,QAAiBC,YAM5B,IAAhBlF,EAAUv9B,GAA2B,IAAhBu9B,EAAU1mC,IAC/B/E,GAAa,SAAS,EAAIyrC,EAAUv9B,MAAM,EAAIu9B,EAAU1mC,OAExD0rC,EAAiB,CACjB,MAAM,OAAE/+B,EAAM,QAAEC,EAAO,QAAEC,GAAY6+B,EACjC/+B,IACA1R,GAAa,UAAU0R,UACvBC,IACA3R,GAAa,WAAW2R,UACxBC,IACA5R,GAAa,WAAW4R,UAMhC,MAAMg/B,EAAgB3zB,EAAM/O,EAAEc,MAAQy8B,EAAUv9B,EAC1C2iC,EAAgB5zB,EAAMlY,EAAEiK,MAAQy8B,EAAU1mC,EAIhD,OAHsB,IAAlB6rC,GAAyC,IAAlBC,IACvB7wC,GAAa,SAAS4wC,MAAkBC,MAErC7wC,GAAa,OCtCxB,MAAM8wC,GAAiB,CAACpyC,EAAGuG,IAAMvG,EAAEqyC,MAAQ9rC,EAAE8rC,MCG7C,MAAMC,GACFj0C,cACIiB,KAAKuH,SAAW,GAChBvH,KAAKizC,SAAU,EAEnB5yB,IAAImB,GACAwa,GAAch8B,KAAKuH,SAAUia,GAC7BxhB,KAAKizC,SAAU,EAEnBhT,OAAOze,GACH0a,GAAWl8B,KAAKuH,SAAUia,GAC1BxhB,KAAKizC,SAAU,EAEnBnrC,QAAQkY,GACJhgB,KAAKizC,SAAWjzC,KAAKuH,SAASm5B,KAAKoS,IACnC9yC,KAAKizC,SAAU,EACfjzC,KAAKuH,SAASO,QAAQkY,ICM9B,MAAMkzB,GAAgB,CAAC,GAAI,IAAK,IAAK,KAMrC,IAAI,GAAK,EAKT,MAAMC,GAAsB,CACxBprC,KAAM,kBACNqrC,WAAY,EACZC,qBAAsB,EACtBC,uBAAwB,GAE5B,SAASC,IAAqB,qBAAEC,EAAoB,cAAEC,EAAa,cAAEC,EAAa,kBAAEC,EAAiB,eAAEC,IACnG,OAAO,MACH70C,YAAY80C,EAAW3+B,EAAe,GAAI3S,GAA2B,OAAlBkxC,QAA4C,IAAlBA,OAA2B,EAASA,MAI7GzzC,KAAK+L,GAAK,KAIV/L,KAAK8zC,YAAc,EAOnB9zC,KAAKuH,SAAW,IAAIqI,IAKpB5P,KAAKmV,QAAU,GAMfnV,KAAK+zC,iBAAkB,EACvB/zC,KAAK6pC,oBAAqB,EAO1B7pC,KAAKkyC,eAAgB,EAKrBlyC,KAAKg0C,mBAAoB,EAKzBh0C,KAAKi0C,yBAA0B,EAK/Bj0C,KAAKk0C,kBAAmB,EAIxBl0C,KAAKm0C,uBAAwB,EAC7Bn0C,KAAKo0C,uBAAwB,EAK7Bp0C,KAAKiyC,YAAa,EAIlBjyC,KAAKq0C,OAAQ,EAKbr0C,KAAKs0C,YAAa,EAIlBt0C,KAAKu0C,sBAAuB,EAS5Bv0C,KAAKytC,UAAY,CAAEv9B,EAAG,EAAGnJ,EAAG,GAI5B/G,KAAKw0C,cAAgB,IAAIxlC,IAEzBhP,KAAKy0C,eAAiB,IAAIzlC,IAC1BhP,KAAK00C,kBAAoB,KACjB10C,KAAKiyC,aACLjyC,KAAKiyC,YAAa,EAClBjyC,KAAK20C,sBAQb30C,KAAK40C,iBAAmB,KC/IpC,IAAgBC,EDoJA1B,GAAoBC,WAChBD,GAAoBE,qBAChBF,GAAoBG,uBAChB,EACZtzC,KAAK80C,MAAMhtC,QAAQitC,IACnB/0C,KAAK80C,MAAMhtC,QAAQktC,IACnBh1C,KAAK80C,MAAMhtC,QAAQmtC,IACnBj1C,KAAK80C,MAAMhtC,QAAQotC,IC3JnBL,ED4JO1B,GC3JfpyC,OAAOo0C,aACPp0C,OAAOo0C,YAAYC,OAAOP,ID4JtB70C,KAAKq1C,cAAe,EACpBr1C,KAAKs1C,WAAY,EACjBt1C,KAAKu1C,kBAAoB,EAKzBv1C,KAAKw1C,YAAc,IAAIxmC,IACvBhP,KAAK6zC,UAAYA,EACjB7zC,KAAKkV,aAAeA,EACpBlV,KAAKwiB,KAAOjgB,EAASA,EAAOigB,MAAQjgB,EAASvC,KAC7CA,KAAKy1C,KAAOlzC,EAAS,IAAIA,EAAOkzC,KAAMlzC,GAAU,GAChDvC,KAAKuC,OAASA,EACdvC,KAAK+yC,MAAQxwC,EAASA,EAAOwwC,MAAQ,EAAI,EACzCc,GAAa7zC,KAAKwiB,KAAKkzB,sBAAsB7B,EAAW7zC,MACxD,IAAK,IAAIzC,EAAI,EAAGA,EAAIyC,KAAKy1C,KAAKp0C,OAAQ9D,IAClCyC,KAAKy1C,KAAKl4C,GAAGg3C,sBAAuB,EAEpCv0C,KAAKwiB,OAASxiB,OACdA,KAAK80C,MAAQ,IAAI9B,IAEzB5sC,iBAAiByD,EAAMuT,GAInB,OAHKpd,KAAKw0C,cAActlC,IAAIrF,IACxB7J,KAAKw0C,cAAcrlC,IAAItF,EAAM,IAAIsyB,IAE9Bn8B,KAAKw0C,cAAcv2C,IAAI4L,GAAMwW,IAAIjD,GAE5Cu4B,gBAAgB9rC,KAAS+rC,GACrB,MAAMC,EAAsB71C,KAAKw0C,cAAcv2C,IAAI4L,GACnDgsC,GAAuBA,EAAoBxZ,UAAUuZ,GAEzDE,aAAajsC,GACT,OAAO7J,KAAKw0C,cAActlC,IAAIrF,GAElC6rC,sBAAsB7B,EAAWhxC,GAC7B7C,KAAKy0C,eAAetlC,IAAI0kC,EAAWhxC,GAKvC0L,MAAMD,EAAU4jC,GAAgB,GAC5B,GAAIlyC,KAAKsO,SACL,OExMhB,IAAsB+L,EFyMVra,KAAKq0C,OEzMKh6B,EFyMgB/L,aExMRynC,YAAkC,QAApB17B,EAAQ2C,QFyMxChd,KAAKsO,SAAWA,EAChB,MAAM,SAAEvB,EAAQ,OAAE1B,EAAM,cAAE8B,GAAkBnN,KAAKmV,QAUjD,GATIhI,IAAkBA,EAAcxB,SAChCwB,EAAcoB,MAAMD,GAExBtO,KAAKwiB,KAAKsyB,MAAMz0B,IAAIrgB,MACpBA,KAAKuC,QAAUvC,KAAKuC,OAAOgF,SAAS8Y,IAAIrgB,MACxCA,KAAK6zC,WAAa7zC,KAAKwiB,KAAKiyB,eAAeh0B,OAAOzgB,KAAK6zC,WACnD3B,IAAkB7mC,GAAU0B,KAC5B/M,KAAKkyC,eAAgB,GAErBsB,EAAsB,CACtB,IAAIwC,EACJ,MAAMC,EAAsB,IAAOj2C,KAAKwiB,KAAK4xB,uBAAwB,EACrEZ,EAAqBllC,GAAU,KAC3BtO,KAAKwiB,KAAK4xB,uBAAwB,EAClC4B,GAAeA,IACfA,EGtNpB,SAAeh2B,EAAUk2B,GACrB,MAAM3sC,EAAQ+qB,YAAY3xB,MACpBwzC,EAAe,EAAGvzC,UAAAA,MACpB,MAAMk0B,EAAUl0B,EAAY2G,EACxButB,GAAWof,IACXn1B,GAAYo1B,GACZn2B,EAAS8W,EAAUof,KAI3B,OADA,QAAWC,GAAc,GAClB,IAAMp1B,GAAYo1B,GH4MKphB,CAAMkhB,EAAqB,KACrCrqC,EAAsBC,yBACtBD,EAAsBC,wBAAyB,EAC/C7L,KAAK80C,MAAMhtC,QAAQsuC,QAI3BrpC,GACA/M,KAAKwiB,KAAK6zB,mBAAmBtpC,EAAU/M,OAGd,IAAzBA,KAAKmV,QAAQxL,SACbwD,IACCJ,GAAY1B,IACbrL,KAAKoG,iBAAiB,aAAa,EAAG6Y,MAAAA,EAAOiuB,iBAAAA,EAAkBoJ,yBAAAA,EAA0BjrC,OAAQkrC,MAC7F,GAAIv2C,KAAKw2C,yBAGL,OAFAx2C,KAAKoW,YAAShM,OACdpK,KAAKy2C,oBAAiBrsC,GAI1B,MAAMssC,EAAmB12C,KAAKmV,QAAQyH,YAClCzP,EAAcisB,wBACdud,IACE,uBAAEC,EAAsB,0BAAEC,GAA+B1pC,EAAciU,WAKvE01B,GAAiB92C,KAAK+2C,eACvB7F,GAAUlxC,KAAK+2C,aAAcR,IAC9BD,EAMEU,GAAgC9J,GAAoBoJ,EAC1D,GAAIt2C,KAAKmV,QAAQ8hC,YACZj3C,KAAK6xC,YAAc7xC,KAAK6xC,WAAWvjC,UACpC0oC,GACC9J,IACI4J,IAAkB92C,KAAKmvC,kBAAoB,CAC5CnvC,KAAK6xC,aACL7xC,KAAKsyC,aAAetyC,KAAK6xC,WACzB7xC,KAAKsyC,aAAaA,kBAAeloC,GAErCpK,KAAKk3C,mBAAmBj4B,EAAO+3B,GAC/B,MAAMG,EAAmB,IAClBxc,GAAmB+b,EAAkB,UACxCrhB,OAAQuhB,EACRrhB,WAAYshB,IAEZ1pC,EAAc6yB,oBACdhgC,KAAKmV,QAAQ8hC,cACbE,EAAiBpiB,MAAQ,EACzBoiB,EAAiBpvC,MAAO,GAE5B/H,KAAKi+B,eAAekZ,QAQfjK,GAC0B,IAA3BltC,KAAKu1C,mBACLa,GAAgBp2C,MAEhBA,KAAKovC,UAAYpvC,KAAKmV,QAAQsuB,gBAC9BzjC,KAAKmV,QAAQsuB,iBAGrBzjC,KAAK+2C,aAAeR,KAIhC/nC,UACIxO,KAAKmV,QAAQpI,UAAY/M,KAAK4uC,aAC9B5uC,KAAKwiB,KAAKsyB,MAAM7U,OAAOjgC,MACvB,MAAM+uC,EAAQ/uC,KAAKgvC,WACnBD,GAASA,EAAM9O,OAAOjgC,MACtBA,KAAKuC,QAAUvC,KAAKuC,OAAOgF,SAASkZ,OAAOzgB,MAC3CA,KAAKsO,cAAWlE,EAChB2W,GAAY/gB,KAAK40C,kBAGrBwC,cACIp3C,KAAKm0C,uBAAwB,EAEjCkD,gBACIr3C,KAAKm0C,uBAAwB,EAEjCmD,kBACI,OAAOt3C,KAAKm0C,uBAAyBn0C,KAAKo0C,sBAE9CoC,yBACI,OAAQx2C,KAAK6pC,oBACR7pC,KAAKuC,QAAUvC,KAAKuC,OAAOi0C,2BAC5B,EAGRe,cACQv3C,KAAKs3C,oBAETt3C,KAAKiyC,YAAa,EAClBjyC,KAAK80C,OAAS90C,KAAK80C,MAAMhtC,QAAQ0vC,IACjCx3C,KAAK8zC,eAET2D,uBACI,MAAM,cAAEtqC,GAAkBnN,KAAKmV,QAC/B,OAAOhI,GAAiBA,EAAciU,WAAWhM,kBAErDw5B,WAAW8I,GAAwB,GAC/B,GAAI13C,KAAKwiB,KAAK80B,kBAEV,YADAt3C,KAAKmV,QAAQsuB,gBAAkBzjC,KAAKmV,QAAQsuB,kBAIhD,IADCzjC,KAAKwiB,KAAKyvB,YAAcjyC,KAAKwiB,KAAK+0B,cAC/Bv3C,KAAKkyC,cACL,OACJlyC,KAAKkyC,eAAgB,EACrB,IAAK,IAAI30C,EAAI,EAAGA,EAAIyC,KAAKy1C,KAAKp0C,OAAQ9D,IAAK,CACvC,MAAMsF,EAAO7C,KAAKy1C,KAAKl4C,GACvBsF,EAAK0xC,sBAAuB,EAC5B1xC,EAAK8pC,aAAa,YACd9pC,EAAKsS,QAAQ8hC,YACbp0C,EAAK+rC,YAAW,GAGxB,MAAM,SAAE7hC,EAAQ,OAAE1B,GAAWrL,KAAKmV,QAClC,QAAiB/K,IAAb2C,IAA2B1B,EAC3B,OACJ,MAAM+J,EAAoBpV,KAAKy3C,uBAC/Bz3C,KAAK23C,2BAA6BviC,EAC5BA,EAAkBpV,KAAKkV,aAAc,SACrC9K,EACNpK,KAAK43C,iBACLF,GAAyB13C,KAAK21C,gBAAgB,cAGlDpH,YAKI,GAJyBvuC,KAAKs3C,kBAQ1B,OAHAt3C,KAAKq3C,gBACLr3C,KAAK20C,yBACL30C,KAAK80C,MAAMhtC,QAAQ+vC,IAGlB73C,KAAKiyC,aAEVjyC,KAAKiyC,YAAa,EAOdjyC,KAAKy0C,eAAe3hC,OACpB9S,KAAKy0C,eAAe3sC,QAAQgwC,IAC5B93C,KAAKy0C,eAAejY,SAKxBx8B,KAAK80C,MAAMhtC,QAAQiwC,IAKnB/3C,KAAK80C,MAAMhtC,QAAQ8kC,IAKnB5sC,KAAK80C,MAAMhtC,QAAQkwC,IACnBh4C,KAAK20C,oBAELr1B,GAAM3R,OAAO+S,QAAQ1B,IACrBM,GAAM24B,UAAUv3B,QAAQ1B,IACxBM,GAAM1R,OAAO8S,QAAQ1B,KAEzB21B,oBACI30C,KAAK80C,MAAMhtC,QAAQowC,IACnBl4C,KAAKw1C,YAAY1tC,QAAQqwC,IAE7BC,2BACI,aAAgBp4C,KAAK40C,kBAAkB,GAAO,GAElDrF,4BAMI,eAAiB,KACTvvC,KAAKkyC,cACLlyC,KAAKwiB,KAAK+rB,YAGVvuC,KAAKwiB,KAAKkyB,uBAOtBkD,kBACQ53C,KAAK+xC,UAAa/xC,KAAKsO,WAE3BtO,KAAK+xC,SAAW/xC,KAAKq4C,WAEzBzL,eACI,IAAK5sC,KAAKsO,SACN,OAGJ,GADAtO,KAAK2sC,iBACC3sC,KAAKmV,QAAQmjC,sBAAuBt4C,KAAKovC,YAC1CpvC,KAAKkyC,cACN,OASJ,GAAIlyC,KAAK6xC,aAAe7xC,KAAK6xC,WAAWvjC,SACpC,IAAK,IAAI/Q,EAAI,EAAGA,EAAIyC,KAAKy1C,KAAKp0C,OAAQ9D,IAAK,CAC1ByC,KAAKy1C,KAAKl4C,GAClBovC,eAGb,MAAM4L,EAAav4C,KAAKqL,OACxBrL,KAAKqL,OAASrL,KAAKq4C,SAAQ,GAC3Br4C,KAAKw4C,gBdhcO,CACpBtoC,EAFqB,CAAGhI,IAAK,EAAGC,IAAK,GAGrCpB,EAHqB,CAAGmB,IAAK,EAAGC,IAAK,Ickc7BnI,KAAKkyC,eAAgB,EACrBlyC,KAAK0tC,qBAAkBtjC,EACvBpK,KAAK21C,gBAAgB,UAAW31C,KAAKqL,OAAO2+B,WAC5C,MAAM,cAAE78B,GAAkBnN,KAAKmV,QAC/BhI,GACIA,EAAckvB,OAAO,gBAAiBr8B,KAAKqL,OAAO2+B,UAAWuO,EAAaA,EAAWvO,eAAY5/B,GAEzGuiC,aAAa8L,EAAQ,WACjB,IAAIC,EAAmB3uC,QAAQ/J,KAAKmV,QAAQwjC,cAAgB34C,KAAKsO,UAC7DtO,KAAKyrC,QACLzrC,KAAKyrC,OAAOqI,cAAgB9zC,KAAKwiB,KAAKsxB,aACtC9zC,KAAKyrC,OAAOgN,QAAUA,IACtBC,GAAmB,GAEnBA,IACA14C,KAAKyrC,OAAS,CACVqI,YAAa9zC,KAAKwiB,KAAKsxB,YACvB2E,MAAAA,EACAG,OAAQjF,EAAkB3zC,KAAKsO,UAC/BuJ,OAAQ67B,EAAc1zC,KAAKsO,YAIvCslC,iBACI,IAAKA,EACD,OACJ,MAAMiF,EAAmB74C,KAAKkyC,eAAiBlyC,KAAKu0C,qBAC9CuE,EAAgB94C,KAAK0tC,kBAAoBuD,GAAYjxC,KAAK0tC,iBAC1Dt4B,EAAoBpV,KAAKy3C,uBACzBsB,EAAyB3jC,EACzBA,EAAkBpV,KAAKkV,aAAc,SACrC9K,EACA4uC,EAA8BD,IAA2B/4C,KAAK23C,2BAChEkB,IACCC,GACGvjC,GAAavV,KAAKkV,eAClB8jC,KACJpF,EAAe5zC,KAAKsO,SAAUyqC,GAC9B/4C,KAAKu0C,sBAAuB,EAC5Bv0C,KAAKqxC,kBAGbgH,QAAQY,GAAkB,GACtB,MAAMC,EAAUl5C,KAAK0rC,iBACrB,IAAI1B,EAAYhqC,KAAKm5C,oBAAoBD,GAy7BrD,IAAkBrR,EA/6BN,OAJIoR,IACAjP,EAAYhqC,KAAKi5C,gBAAgBjP,IAm7B7CoP,IADcvR,EAh7BGmC,GAi7BH95B,GACdkpC,GAAUvR,EAAI9gC,GAj7BC,CACH+sC,YAAa9zC,KAAKwiB,KAAKsxB,YACvBuF,YAAaH,EACblP,UAAAA,EACA90B,aAAc,GACdmB,OAAQrW,KAAK+L,IAGrB2/B,iBACI,MAAM,cAAEv+B,GAAkBnN,KAAKmV,QAC/B,IAAKhI,EACD,MdlgBQ,CACpB+C,EAFqB,CAAGhI,IAAK,EAAGC,IAAK,GAGrCpB,EAHqB,CAAGmB,IAAK,EAAGC,IAAK,IcogB7B,MAAM0/B,EAAM16B,EAAcu7B,sBAEpB,OAAE+C,GAAWzrC,KAAKwiB,KAKxB,OAJIipB,IACAxD,GAAcJ,EAAI33B,EAAGu7B,EAAO5zB,OAAO3H,GACnC+3B,GAAcJ,EAAI9gC,EAAG0kC,EAAO5zB,OAAO9Q,IAEhC8gC,EAEXsR,oBAAoBtR,GAChB,MAAMyR,Ed7gBM,CACpBppC,EAFqB,CAAGhI,IAAK,EAAGC,IAAK,GAGrCpB,EAHqB,CAAGmB,IAAK,EAAGC,IAAK,Ic+gB7BqoC,GAAY8I,EAAkBzR,GAK9B,IAAK,IAAItqC,EAAI,EAAGA,EAAIyC,KAAKy1C,KAAKp0C,OAAQ9D,IAAK,CACvC,MAAMsF,EAAO7C,KAAKy1C,KAAKl4C,IACjB,OAAEkuC,EAAM,QAAEt2B,GAAYtS,EAC5B,GAAIA,IAAS7C,KAAKwiB,MAAQipB,GAAUt2B,EAAQwjC,aAAc,CAKtD,GAAIlN,EAAOmN,OAAQ,CACfpI,GAAY8I,EAAkBzR,GAC9B,MAAQ4D,OAAQ8N,GAAev5C,KAAKwiB,KAKhC+2B,IACAtR,GAAcqR,EAAiBppC,GAAIqpC,EAAW1hC,OAAO3H,GACrD+3B,GAAcqR,EAAiBvyC,GAAIwyC,EAAW1hC,OAAO9Q,IAG7DkhC,GAAcqR,EAAiBppC,EAAGu7B,EAAO5zB,OAAO3H,GAChD+3B,GAAcqR,EAAiBvyC,EAAG0kC,EAAO5zB,OAAO9Q,IAGxD,OAAOuyC,EAEXE,eAAe3R,EAAK4R,GAAgB,GAChC,MAAMC,Ed9iBM,CACpBxpC,EAFqB,CAAGhI,IAAK,EAAGC,IAAK,GAGrCpB,EAHqB,CAAGmB,IAAK,EAAGC,IAAK,IcgjB7BqoC,GAAYkJ,EAAgB7R,GAC5B,IAAK,IAAItqC,EAAI,EAAGA,EAAIyC,KAAKy1C,KAAKp0C,OAAQ9D,IAAK,CACvC,MAAMsF,EAAO7C,KAAKy1C,KAAKl4C,IAClBk8C,GACD52C,EAAKsS,QAAQwjC,cACb91C,EAAK4oC,QACL5oC,IAASA,EAAK2f,MACdimB,GAAaiR,EAAgB,CACzBxpC,GAAIrN,EAAK4oC,OAAO5zB,OAAO3H,EACvBnJ,GAAIlE,EAAK4oC,OAAO5zB,OAAO9Q,IAG1BwO,GAAa1S,EAAKqS,eAEvBuzB,GAAaiR,EAAgB72C,EAAKqS,cAKtC,OAHIK,GAAavV,KAAKkV,eAClBuzB,GAAaiR,EAAgB15C,KAAKkV,cAE/BwkC,EAEXT,gBAAgBpR,GACZ,MAAM8R,EdrkBM,CACpBzpC,EAFqB,CAAGhI,IAAK,EAAGC,IAAK,GAGrCpB,EAHqB,CAAGmB,IAAK,EAAGC,IAAK,IcukB7BqoC,GAAYmJ,EAAqB9R,GACjC,IAAK,IAAItqC,EAAI,EAAGA,EAAIyC,KAAKy1C,KAAKp0C,OAAQ9D,IAAK,CACvC,MAAMsF,EAAO7C,KAAKy1C,KAAKl4C,GACvB,IAAKsF,EAAKyL,SACN,SACJ,IAAKiH,GAAa1S,EAAKqS,cACnB,SACJmyB,GAASxkC,EAAKqS,eAAiBrS,EAAK+0C,iBACpC,MAAM7G,Ed9kBE,CACpB7gC,EAFqB,CAAGhI,IAAK,EAAGC,IAAK,GAGrCpB,EAHqB,CAAGmB,IAAK,EAAGC,IAAK,IcilBzBqoC,GAAYO,EADIluC,EAAK6oC,kBAErBoF,GAAoB6I,EAAqB92C,EAAKqS,aAAcrS,EAAKkvC,SAAWlvC,EAAKkvC,SAAS/H,eAAY5/B,EAAW2mC,GAKrH,OAHIx7B,GAAavV,KAAKkV,eAClB47B,GAAoB6I,EAAqB35C,KAAKkV,cAE3CykC,EAEXC,eAAe36B,GACXjf,KAAK65C,YAAc56B,EACnBjf,KAAKwiB,KAAK41B,2BACVp4C,KAAKg0C,mBAAoB,EAE7BvF,WAAWt5B,GACPnV,KAAKmV,QAAU,IACRnV,KAAKmV,WACLA,EACHg9B,eAAiC/nC,IAAtB+K,EAAQg9B,WAA0Bh9B,EAAQg9B,WAG7D0F,oBACI73C,KAAKyrC,YAASrhC,EACdpK,KAAKqL,YAASjB,EACdpK,KAAK+xC,cAAW3nC,EAChBpK,KAAK23C,gCAA6BvtC,EAClCpK,KAAK65C,iBAAczvC,EACnBpK,KAAKoW,YAAShM,EACdpK,KAAKkyC,eAAgB,EAEzB4H,qCACS95C,KAAK+5C,gBAQN/5C,KAAK+5C,eAAeC,2BACpBh7B,GAAUpc,WACV5C,KAAK+5C,eAAe/E,oBAAmB,GAG/CA,mBAAmBiF,GAAqB,GACpC,IAAIviC,EAMJ,MAAM65B,EAAOvxC,KAAKk6C,UAClBl6C,KAAKg0C,oBAAsBh0C,KAAKg0C,kBAAoBzC,EAAKyC,mBACzDh0C,KAAKk0C,mBAAqBl0C,KAAKk0C,iBAAmB3C,EAAK2C,kBACvDl0C,KAAKi0C,0BAA4Bj0C,KAAKi0C,wBAA0B1C,EAAK0C,yBACrE,MAAMkG,EAAWpwC,QAAQ/J,KAAKsyC,eAAiBtyC,OAASuxC,EAUxD,KALkB0I,GACbE,GAAYn6C,KAAKi0C,yBAClBj0C,KAAKg0C,oBACmB,QAAtBt8B,EAAK1X,KAAKuC,cAA2B,IAAPmV,OAAgB,EAASA,EAAGs8B,oBAC5Dh0C,KAAKo6C,gCAEL,OACJ,MAAM,OAAE/uC,EAAM,SAAE0B,GAAa/M,KAAKmV,QAIlC,GAAKnV,KAAKqL,SAAYA,GAAU0B,GAAhC,CASA,GAPA/M,KAAKg6C,yBAA2Bh7B,GAAUpc,WAOrC5C,KAAK65C,cAAgB75C,KAAKy2C,eAAgB,CAE3C,MAAMsD,EAAiB/5C,KAAKq6C,6BACxBN,GAAkBA,EAAe1uC,QACjCrL,KAAK+5C,eAAiBA,EACtB/5C,KAAK85C,qCACL95C,KAAKy2C,edrqBD,CACpBvmC,EAFqB,CAAGhI,IAAK,EAAGC,IAAK,GAGrCpB,EAHqB,CAAGmB,IAAK,EAAGC,IAAK,IcuqBrBnI,KAAKs6C,qBdtqBD,CACpBpqC,EAFqB,CAAGhI,IAAK,EAAGC,IAAK,GAGrCpB,EAHqB,CAAGmB,IAAK,EAAGC,IAAK,IcwqBrBm+B,GAAqBtmC,KAAKs6C,qBAAsBt6C,KAAKqL,OAAO2+B,UAAW+P,EAAe1uC,OAAO2+B,WAC7FwG,GAAYxwC,KAAKy2C,eAAgBz2C,KAAKs6C,uBAGtCt6C,KAAK+5C,eAAiB/5C,KAAKy2C,oBAAiBrsC,EAOpD,GAAKpK,KAAKy2C,gBAAmBz2C,KAAK65C,YAAlC,CtBlqBZ,IAAyBzjC,EAAQgwB,EAAU7jC,EsB2sB/B,GApCKvC,KAAKoW,SACNpW,KAAKoW,OdxrBG,CACpBlG,EAFqB,CAAGhI,IAAK,EAAGC,IAAK,GAGrCpB,EAHqB,CAAGmB,IAAK,EAAGC,IAAK,Ic0rBzBnI,KAAKu6C,qBdzrBG,CACpBrqC,EAFqB,CAAGhI,IAAK,EAAGC,IAAK,GAGrCpB,EAHqB,CAAGmB,IAAK,EAAGC,IAAK,Kc+rBzBnI,KAAKy2C,gBACLz2C,KAAKs6C,sBACLt6C,KAAK+5C,gBACL/5C,KAAK+5C,eAAe3jC,QACpBpW,KAAK85C,qCtBlrBI1jC,EsBmrBOpW,KAAKoW,OtBnrBJgwB,EsBmrBYpmC,KAAKy2C,etBnrBPl0C,EsBmrBuBvC,KAAK+5C,eAAe3jC,OtBlrBlF+vB,GAAiB/vB,EAAOlG,EAAGk2B,EAASl2B,EAAG3N,EAAO2N,GAC9Ci2B,GAAiB/vB,EAAOrP,EAAGq/B,EAASr/B,EAAGxE,EAAOwE,IsBsrB7B/G,KAAK65C,aACN9vC,QAAQ/J,KAAKsyC,cAEbtyC,KAAKoW,OAASpW,KAAKw5C,eAAex5C,KAAKqL,OAAO2+B,WAG9CwG,GAAYxwC,KAAKoW,OAAQpW,KAAKqL,OAAO2+B,WAEzCpC,GAAc5nC,KAAKoW,OAAQpW,KAAK65C,cAMhCrJ,GAAYxwC,KAAKoW,OAAQpW,KAAKqL,OAAO2+B,WAKrChqC,KAAKo6C,+BAAgC,CACrCp6C,KAAKo6C,gCAAiC,EACtC,MAAML,EAAiB/5C,KAAKq6C,6BACxBN,GACAhwC,QAAQgwC,EAAezH,gBACnBvoC,QAAQ/J,KAAKsyC,gBAChByH,EAAe5kC,QAAQwjC,cACxBoB,EAAe3jC,QACfpW,KAAK+5C,eAAiBA,EACtB/5C,KAAK85C,qCACL95C,KAAKy2C,edruBD,CACpBvmC,EAFqB,CAAGhI,IAAK,EAAGC,IAAK,GAGrCpB,EAHqB,CAAGmB,IAAK,EAAGC,IAAK,IcuuBrBnI,KAAKs6C,qBdtuBD,CACpBpqC,EAFqB,CAAGhI,IAAK,EAAGC,IAAK,GAGrCpB,EAHqB,CAAGmB,IAAK,EAAGC,IAAK,IcwuBrBm+B,GAAqBtmC,KAAKs6C,qBAAsBt6C,KAAKoW,OAAQ2jC,EAAe3jC,QAC5Eo6B,GAAYxwC,KAAKy2C,eAAgBz2C,KAAKs6C,uBAGtCt6C,KAAK+5C,eAAiB/5C,KAAKy2C,oBAAiBrsC,EAMpD+oC,GAAoBE,yBAExBgH,6BACI,GAAKr6C,KAAKuC,SACN8kC,GAASrnC,KAAKuC,OAAO2S,gBACrBoyB,GAAetnC,KAAKuC,OAAO2S,cAG/B,OAAIlV,KAAKuC,OAAOi4C,eACLx6C,KAAKuC,OAGLvC,KAAKuC,OAAO83C,6BAG3BG,eACI,OAAOzwC,SAAS/J,KAAKy2C,gBACjBz2C,KAAK65C,aACL75C,KAAKmV,QAAQ8hC,aACbj3C,KAAKqL,QAEb4pC,iBACI,IAAIv9B,EACJ,MAAM65B,EAAOvxC,KAAKk6C,UACZC,EAAWpwC,QAAQ/J,KAAKsyC,eAAiBtyC,OAASuxC,EACxD,IAAIkJ,GAAU,EAuBd,IAlBIz6C,KAAKg0C,oBAA6C,QAAtBt8B,EAAK1X,KAAKuC,cAA2B,IAAPmV,OAAgB,EAASA,EAAGs8B,sBACtFyG,GAAU,GAMVN,IACCn6C,KAAKi0C,yBAA2Bj0C,KAAKk0C,oBACtCuG,GAAU,GAMVz6C,KAAKg6C,2BAA6Bh7B,GAAUpc,YAC5C63C,GAAU,GAEVA,EACA,OACJ,MAAM,OAAEpvC,EAAM,SAAE0B,GAAa/M,KAAKmV,QAWlC,GANAnV,KAAK+zC,gBAAkBhqC,QAAS/J,KAAKuC,QAAUvC,KAAKuC,OAAOwxC,iBACvD/zC,KAAKmvC,kBACLnvC,KAAK06C,kBACJ16C,KAAK+zC,kBACN/zC,KAAK65C,YAAc75C,KAAKy2C,oBAAiBrsC,IAExCpK,KAAKqL,SAAYA,IAAU0B,EAC5B,OAKJyjC,GAAYxwC,KAAKw4C,gBAAiBx4C,KAAKqL,OAAO2+B,WjBvxB1D,SAAyBnC,EAAK4F,EAAWkN,EAAUC,GAAqB,GACpE,MAAMC,EAAaF,EAASt5C,OAC5B,IAAKw5C,EACD,OAGJ,IAAIh4C,EACAoc,EAFJwuB,EAAUv9B,EAAIu9B,EAAU1mC,EAAI,EAG5B,IAAK,IAAIxJ,EAAI,EAAGA,EAAIs9C,EAAYt9C,IAAK,CACjCsF,EAAO83C,EAASp9C,GAChB0hB,EAAQpc,EAAK6qC,gBAKb,MAAMp/B,EAAWzL,EAAKyL,SAClBA,GACAA,EAAS/H,OACkB,aAA3B+H,EAAS/H,MAAMu0C,UAGfF,GACA/3C,EAAKsS,QAAQwjC,cACb91C,EAAK4oC,QACL5oC,IAASA,EAAK2f,MACdimB,GAAaZ,EAAK,CACd33B,GAAIrN,EAAK4oC,OAAO5zB,OAAO3H,EACvBnJ,GAAIlE,EAAK4oC,OAAO5zB,OAAO9Q,IAG3BkY,IAEAwuB,EAAUv9B,GAAK+O,EAAM/O,EAAEc,MACvBy8B,EAAU1mC,GAAKkY,EAAMlY,EAAEiK,MAEvB42B,GAAcC,EAAK5oB,IAEnB27B,GAAsBrlC,GAAa1S,EAAKqS,eACxCuzB,GAAaZ,EAAKhlC,EAAKqS,eAO/Bu4B,EAAUv9B,EAAI43B,GAAc2F,EAAUv9B,GACtCu9B,EAAU1mC,EAAI+gC,GAAc2F,EAAU1mC,GiB8uB9Bg0C,CAAgB/6C,KAAKw4C,gBAAiBx4C,KAAKytC,UAAWztC,KAAKy1C,KAAM0E,GACjE,MAAM,OAAE/jC,GAAWm7B,EACnB,IAAKn7B,EACD,OACCpW,KAAK0tC,kBACN1tC,KAAK0tC,gBdn0BK,CACtBx9B,EAP0B,CAC1B+1B,UAAW,EACXj1B,MAAO,EACP4G,OAAQ,EACRouB,YAAa,GAIbj/B,EAR0B,CAC1Bk/B,UAAW,EACXj1B,MAAO,EACP4G,OAAQ,EACRouB,YAAa,Ics0BDhmC,KAAKg7C,6Bdp0BK,CACtB9qC,EAP0B,CAC1B+1B,UAAW,EACXj1B,MAAO,EACP4G,OAAQ,EACRouB,YAAa,GAIbj/B,EAR0B,CAC1Bk/B,UAAW,EACXj1B,MAAO,EACP4G,OAAQ,EACRouB,YAAa,Kcw0BL,MAAMiV,EAAiBj7C,KAAKytC,UAAUv9B,EAChCgrC,EAAiBl7C,KAAKytC,UAAU1mC,EAChCo0C,EAA0Bn7C,KAAKo7C,oBAUrClV,GAAalmC,KAAK0tC,gBAAiB1tC,KAAKw4C,gBAAiBpiC,EAAQpW,KAAKkV,cACtElV,KAAKo7C,oBAAsB5I,GAAyBxyC,KAAK0tC,gBAAiB1tC,KAAKytC,WAC3EztC,KAAKo7C,sBAAwBD,GAC7Bn7C,KAAKytC,UAAUv9B,IAAM+qC,GACrBj7C,KAAKytC,UAAU1mC,IAAMm0C,IACrBl7C,KAAKq1C,cAAe,EACpBr1C,KAAKqxC,iBACLrxC,KAAK21C,gBAAgB,mBAAoBv/B,IAK7C+8B,GAAoBG,yBAExBlB,OACIpyC,KAAKs1C,WAAY,EAGrB1D,OACI5xC,KAAKs1C,WAAY,EAGrBjE,eAAegK,GAAY,GAEvB,GADAr7C,KAAKmV,QAAQk8B,gBAAkBrxC,KAAKmV,QAAQk8B,iBACxCgK,EAAW,CACX,MAAMtM,EAAQ/uC,KAAKgvC,WACnBD,GAASA,EAAMsC,iBAEfrxC,KAAKsyC,eAAiBtyC,KAAKsyC,aAAahkC,WACxCtO,KAAKsyC,kBAAeloC,GAG5B8sC,mBAAmBj4B,EAAO+3B,GAA+B,GACrD,MAAMjF,EAAW/xC,KAAK+xC,SAChBuJ,EAAuBvJ,EACvBA,EAAS78B,aACT,GACAqmC,EAAc,IAAKv7C,KAAKkV,cACxB2kC,Edx3BQ,CACtB3pC,EAP0B,CAC1B+1B,UAAW,EACXj1B,MAAO,EACP4G,OAAQ,EACRouB,YAAa,GAIbj/B,EAR0B,CAC1Bk/B,UAAW,EACXj1B,MAAO,EACP4G,OAAQ,EACRouB,YAAa,Ic23BAhmC,KAAK+5C,gBACL/5C,KAAK+5C,eAAe5kC,QAAQ8hC,aAC7Bj3C,KAAKy2C,eAAiBz2C,KAAKs6C,0BAAuBlwC,GAEtDpK,KAAKo6C,gCAAkCpD,EACvC,MAAMwE,Edz3BM,CACpBtrC,EAFqB,CAAGhI,IAAK,EAAGC,IAAK,GAGrCpB,EAHqB,CAAGmB,IAAK,EAAGC,IAAK,Ic63BvBszC,GAFiB1J,EAAWA,EAAS17B,YAASjM,MAC/BpK,KAAKqL,OAASrL,KAAKqL,OAAOgL,YAASjM,GAElD2kC,EAAQ/uC,KAAKgvC,WACb0M,GAAgB3M,GAASA,EAAME,QAAQ5tC,QAAU,EACjDs6C,EAAyB5xC,QAAQ0xC,IAClCC,IAC0B,IAA3B17C,KAAKmV,QAAQg9B,YACZnyC,KAAKy1C,KAAK7rC,KAAKgyC,KAEpB,IAAIC,EADJ77C,KAAKu1C,kBAAoB,EAEzBv1C,KAAK87C,eAAkBtjC,IACnB,MAAM+S,EAAW/S,EAAS,IAggB1C,IAAgB6U,EAAQhC,EAAMC,EAAI3sB,EA/flBo9C,GAAalC,EAAY3pC,EAAG+O,EAAM/O,EAAGqb,GACrCwwB,GAAalC,EAAY9yC,EAAGkY,EAAMlY,EAAGwkB,GACrCvrB,KAAK45C,eAAeC,GAChB75C,KAAKy2C,gBACLz2C,KAAKs6C,sBACLt6C,KAAKqL,QACLrL,KAAK+5C,gBACL/5C,KAAK+5C,eAAe1uC,SACpBi7B,GAAqBkV,EAAgBx7C,KAAKqL,OAAO2+B,UAAWhqC,KAAK+5C,eAAe1uC,OAAO2+B,WAuf3F3c,EAtfWrtB,KAAKy2C,eAsfRprB,EAtfwBrrB,KAAKs6C,qBAsfvBhvB,EAtf6CkwB,EAsfzC78C,EAtfyD4sB,EAufvFywB,GAAQ3uB,EAAOnd,EAAGmb,EAAKnb,EAAGob,EAAGpb,EAAGvR,GAChCq9C,GAAQ3uB,EAAOtmB,EAAGskB,EAAKtkB,EAAGukB,EAAGvkB,EAAGpI,GAnfZk9C,GACA3K,GAAUlxC,KAAKy2C,eAAgBoF,KAC/B77C,KAAKg0C,mBAAoB,GAExB6H,IACDA,Ed15BA,CACpB3rC,EAFqB,CAAGhI,IAAK,EAAGC,IAAK,GAGrCpB,EAHqB,CAAGmB,IAAK,EAAGC,IAAK,Kc45BrBqoC,GAAYqL,EAAoB77C,KAAKy2C,iBAErCgF,IACAz7C,KAAKgyC,gBAAkBuJ,ER/5B3C,SAAmBnlC,EAAQ6lC,EAAQ1K,EAAMhmB,EAAUowB,EAAwBD,GACnEC,GACAvlC,EAAO3B,QAAUmH,GAAI,OAEJxR,IAAjBmnC,EAAK98B,QAAwB88B,EAAK98B,QAAU,EAAG07B,GAAgB5kB,IAC/DnV,EAAO8lC,YAActgC,QAAuBxR,IAAnB6xC,EAAOxnC,QAAwBwnC,EAAOxnC,QAAU,EAAG,EAAG47B,GAAiB9kB,KAE3FmwB,IACLtlC,EAAO3B,QAAUmH,QAAuBxR,IAAnB6xC,EAAOxnC,QAAwBwnC,EAAOxnC,QAAU,OAAoBrK,IAAjBmnC,EAAK98B,QAAwB88B,EAAK98B,QAAU,EAAG8W,IAK3H,IAAK,IAAIhuB,EAAI,EAAGA,EAAIuyC,GAAYvyC,IAAK,CACjC,MAAM4+C,EAAc,SAAStM,GAAQtyC,WACrC,IAAI6+C,EAAenM,GAAUgM,EAAQE,GACjCE,EAAapM,GAAUsB,EAAM4K,QACZ/xC,IAAjBgyC,QAA6ChyC,IAAfiyC,IAElCD,IAAiBA,EAAe,GAChCC,IAAeA,EAAa,GACI,IAAjBD,GACI,IAAfC,GACArM,GAAKoM,KAAkBpM,GAAKqM,IAE5BjmC,EAAO+lC,GAAez2C,KAAKyC,IAAIyT,GAAIm0B,GAASqM,GAAerM,GAASsM,GAAa9wB,GAAW,IACxF5Z,GAAQnC,KAAK6sC,IAAe1qC,GAAQnC,KAAK4sC,MACzChmC,EAAO+lC,IAAgB,MAI3B/lC,EAAO+lC,GAAeE,IAM1BJ,EAAOvoC,QAAU69B,EAAK79B,UACtB0C,EAAO1C,OAASkI,GAAIqgC,EAAOvoC,QAAU,EAAG69B,EAAK79B,QAAU,EAAG6X,IQ03B9C+wB,CAAUf,EAAaD,EAAsBt7C,KAAKkV,aAAcqW,EAAUowB,EAAwBD,IAEtG17C,KAAKwiB,KAAK41B,2BACVp4C,KAAKqxC,iBACLrxC,KAAKu1C,kBAAoBhqB,GAE7BvrB,KAAK87C,eAAe97C,KAAKmV,QAAQ8hC,WAAa,IAAO,GAEzDhZ,eAAe9oB,GACXnV,KAAK21C,gBAAgB,kBACrB31C,KAAKmvC,kBAAoBnvC,KAAKmvC,iBAAiB9a,OAC3Cr0B,KAAKsyC,cAAgBtyC,KAAKsyC,aAAanD,kBACvCnvC,KAAKsyC,aAAanD,iBAAiB9a,OAEnCr0B,KAAK06C,mBACL35B,GAAY/gB,KAAK06C,kBACjB16C,KAAK06C,sBAAmBtwC,GAO5BpK,KAAK06C,iBAAmB,WAAa,KACjC9uC,EAAsBC,wBAAyB,EAC/C7L,KAAKmvC,iBI/7BrB,SAA4B/wC,EAAOwxB,EAAWza,GAC1C,MAAMonC,EAAgBxsC,EAAc3R,GAASA,EAAQogC,GAAYpgC,GAEjE,OADAm+C,EAAchzC,MAAMqxB,GAAmB,GAAI2hB,EAAe3sB,EAAWza,IAC9DonC,EAAc1xC,UJ47Be2xC,CAAmB,EAr6BnC,IAq6BuD,IACxDrnC,EACHqgB,SAAWhd,IACPxY,KAAK87C,eAAetjC,GACpBrD,EAAQqgB,UAAYrgB,EAAQqgB,SAAShd,IAEzC+c,WAAY,KACRpgB,EAAQogB,YAAcpgB,EAAQogB,aAC9Bv1B,KAAKy8C,uBAGTz8C,KAAKsyC,eACLtyC,KAAKsyC,aAAanD,iBAAmBnvC,KAAKmvC,kBAE9CnvC,KAAK06C,sBAAmBtwC,KAGhCqyC,oBACQz8C,KAAKsyC,eACLtyC,KAAKsyC,aAAanD,sBAAmB/kC,EACrCpK,KAAKsyC,aAAaR,qBAAkB1nC,GAExC,MAAM2kC,EAAQ/uC,KAAKgvC,WACnBD,GAASA,EAAMsD,wBACfryC,KAAKsyC,aACDtyC,KAAKmvC,iBACDnvC,KAAKgyC,qBACD5nC,EACZpK,KAAK21C,gBAAgB,qBAEzBS,kBACQp2C,KAAKmvC,mBACLnvC,KAAK87C,gBAAkB97C,KAAK87C,eAr8BpB,KAs8BR97C,KAAKmvC,iBAAiB9a,QAE1Br0B,KAAKy8C,oBAETC,0BACI,MAAMnL,EAAOvxC,KAAKk6C,UAClB,IAAI,qBAAEK,EAAoB,OAAEnkC,EAAM,OAAE/K,EAAM,aAAE6J,GAAiBq8B,EAC7D,GAAKgJ,GAAyBnkC,GAAW/K,EAAzC,CAOA,GAAIrL,OAASuxC,GACTvxC,KAAKqL,QACLA,GACAsxC,GAA0B38C,KAAKmV,QAAQynC,cAAe58C,KAAKqL,OAAO2+B,UAAW3+B,EAAO2+B,WAAY,CAChG5zB,EAASpW,KAAKoW,Qd3+BN,CACpBlG,EAFqB,CAAGhI,IAAK,EAAGC,IAAK,GAGrCpB,EAHqB,CAAGmB,IAAK,EAAGC,IAAK,Ic6+BzB,MAAM00C,EAAUlX,GAAW3lC,KAAKqL,OAAO2+B,UAAU95B,GACjDkG,EAAOlG,EAAEhI,IAAMqpC,EAAKn7B,OAAOlG,EAAEhI,IAC7BkO,EAAOlG,EAAE/H,IAAMiO,EAAOlG,EAAEhI,IAAM20C,EAC9B,MAAMC,EAAUnX,GAAW3lC,KAAKqL,OAAO2+B,UAAUjjC,GACjDqP,EAAOrP,EAAEmB,IAAMqpC,EAAKn7B,OAAOrP,EAAEmB,IAC7BkO,EAAOrP,EAAEoB,IAAMiO,EAAOrP,EAAEmB,IAAM40C,EAElCtM,GAAY+J,EAAsBnkC,GAMlCqyB,GAAa8R,EAAsBrlC,GAOnCgxB,GAAalmC,KAAKg7C,6BAA8Bh7C,KAAKw4C,gBAAiB+B,EAAsBrlC,IAEhGmhC,mBAAmBtpC,EAAUlK,GACpB7C,KAAKw1C,YAAYtmC,IAAInC,IACtB/M,KAAKw1C,YAAYrmC,IAAIpC,EAAU,IAAIqkC,IAEzBpxC,KAAKw1C,YAAYv3C,IAAI8O,GAC7BsT,IAAIxd,GACV,MAAMkZ,EAASlZ,EAAKsS,QAAQ4nC,uBAC5Bl6C,EAAKgsC,QAAQ,CACTjyB,WAAYb,EAASA,EAAOa,gBAAaxS,EACzCunC,sBAAuB51B,GAAUA,EAAOihC,4BAClCjhC,EAAOihC,4BAA4Bn6C,QACnCuH,IAGdglC,SACI,MAAML,EAAQ/uC,KAAKgvC,WACnB,OAAOD,GAAQA,EAAMwC,OAASvxC,KAElCk6C,UACI,IAAIxiC,EACJ,MAAM,SAAE3K,GAAa/M,KAAKmV,QAC1B,OAAOpI,IAAuC,QAA1B2K,EAAK1X,KAAKgvC,kBAA+B,IAAPt3B,OAAgB,EAASA,EAAG65B,OAAgBvxC,KAEtGi9C,cACI,IAAIvlC,EACJ,MAAM,SAAE3K,GAAa/M,KAAKmV,QAC1B,OAAOpI,EAAsC,QAA1B2K,EAAK1X,KAAKgvC,kBAA+B,IAAPt3B,OAAgB,EAASA,EAAG45B,cAAWlnC,EAEhG4kC,WACI,MAAM,SAAEjiC,GAAa/M,KAAKmV,QAC1B,GAAIpI,EACA,OAAO/M,KAAKwiB,KAAKgzB,YAAYv3C,IAAI8O,GAEzC8hC,SAAQ,WAAEyF,EAAU,WAAE13B,EAAU,sBAAE+0B,GAA2B,IACzD,MAAM5C,EAAQ/uC,KAAKgvC,WACfD,GACAA,EAAMF,QAAQ7uC,KAAM2xC,GACpB2C,IACAt0C,KAAK0tC,qBAAkBtjC,EACvBpK,KAAKs0C,YAAa,GAElB13B,GACA5c,KAAKyuC,WAAW,CAAE7xB,WAAAA,IAE1BkyB,WACI,MAAMC,EAAQ/uC,KAAKgvC,WACnB,QAAID,GACOA,EAAMD,SAAS9uC,MAM9Bw3C,gBACI,MAAM,cAAErqC,GAAkBnN,KAAKmV,QAC/B,IAAKhI,EACD,OAEJ,IAAI+vC,GAAY,EAKhB,MAAM,aAAEhoC,GAAiB/H,EAQzB,IAPI+H,EAAaxB,QACbwB,EAAavB,SACbuB,EAAatB,SACbsB,EAAarB,WACbqpC,GAAY,IAGXA,EACD,OACJ,MAAMC,EAAc,GAEpB,IAAK,IAAI5/C,EAAI,EAAGA,EAAI21C,GAAc7xC,OAAQ9D,IAAK,CAC3C,MAAMoE,EAAM,SAAWuxC,GAAc31C,GAEjC2X,EAAavT,KACbw7C,EAAYx7C,GAAOuT,EAAavT,GAChCwL,EAAciwC,eAAez7C,EAAK,IAK1CwL,EAAcS,SAEd,IAAK,MAAMjM,KAAOw7C,EACdhwC,EAAciwC,eAAez7C,EAAKw7C,EAAYx7C,IAIlDwL,EAAckkC,iBAElB72B,oBAAoBF,EAAY,IAC5B,IAAI5C,EAAI8V,EAER,MAAM6vB,EAAS,GACf,IAAKr9C,KAAKsO,UAAYtO,KAAKq0C,MACvB,OAAOgJ,EACX,IAAKr9C,KAAKs1C,UACN,MAAO,CAAEgI,WAAY,UAGrBD,EAAOC,WAAa,GAExB,MAAMloC,EAAoBpV,KAAKy3C,uBAC/B,GAAIz3C,KAAKs0C,WAQL,OAPAt0C,KAAKs0C,YAAa,EAClB+I,EAAO5oC,QAAU,GACjB4oC,EAAOE,cACH7hC,GAAmBpB,EAAUijC,gBAAkB,GACnDF,EAAOr7C,UAAYoT,EACbA,EAAkBpV,KAAKkV,aAAc,IACrC,OACCmoC,EAEX,MAAM9L,EAAOvxC,KAAKk6C,UAClB,IAAKl6C,KAAK0tC,kBAAoB1tC,KAAKqL,SAAWkmC,EAAKn7B,OAAQ,CACvD,MAAMonC,EAAc,GAepB,OAdIx9C,KAAKmV,QAAQpI,WACbywC,EAAY/oC,aACsBrK,IAA9BpK,KAAKkV,aAAaT,QACZzU,KAAKkV,aAAaT,QAClB,EACV+oC,EAAYD,cACR7hC,GAAmBpB,EAAUijC,gBAAkB,IAEnDv9C,KAAKq1C,eAAiB9/B,GAAavV,KAAKkV,gBACxCsoC,EAAYx7C,UAAYoT,EAClBA,EAAkB,GAAI,IACtB,OACNpV,KAAKq1C,cAAe,GAEjBmI,EAEX,MAAMC,EAAiBlM,EAAKS,iBAAmBT,EAAKr8B,aACpDlV,KAAK08C,0BACLW,EAAOr7C,UAAYwwC,GAAyBxyC,KAAKg7C,6BAA8Bh7C,KAAKytC,UAAWgQ,GAC3FroC,IACAioC,EAAOr7C,UAAYoT,EAAkBqoC,EAAgBJ,EAAOr7C,YAEhE,MAAM,EAAEkO,EAAC,EAAEnJ,GAAM/G,KAAK0tC,gBACtB2P,EAAO/nC,gBAAkB,GAAc,IAAXpF,EAAE0H,WAA4B,IAAX7Q,EAAE6Q,YAC7C25B,EAAKS,gBAKLqL,EAAO5oC,QACH88B,IAASvxC,KACiG,QAAnGwtB,EAAuC,QAAjC9V,EAAK+lC,EAAehpC,eAA4B,IAAPiD,EAAgBA,EAAK1X,KAAKkV,aAAaT,eAA4B,IAAP+Y,EAAgBA,EAAK,EACjIxtB,KAAK8xC,gBACD9xC,KAAKkV,aAAaT,QAClBgpC,EAAevB,YAO7BmB,EAAO5oC,QACH88B,IAASvxC,UACwBoK,IAA3BqzC,EAAehpC,QACXgpC,EAAehpC,QACf,QAC2BrK,IAA/BqzC,EAAevB,YACXuB,EAAevB,YACf,EAKlB,IAAK,MAAMv6C,KAAO8N,EAAiB,CAC/B,QAA4BrF,IAAxBqzC,EAAe97C,GACf,SACJ,MAAM,QAAE4rC,EAAO,QAAEoC,GAAYlgC,EAAgB9N,GAOvC+7C,EAAiC,SAArBL,EAAOr7C,UACnBy7C,EAAe97C,GACf4rC,EAAQkQ,EAAe97C,GAAM4vC,GACnC,GAAI5B,EAAS,CACT,MAAMgO,EAAMhO,EAAQtuC,OACpB,IAAK,IAAI9D,EAAI,EAAGA,EAAIogD,EAAKpgD,IACrB8/C,EAAO1N,EAAQpyC,IAAMmgD,OAIzBL,EAAO17C,GAAO+7C,EActB,OANI19C,KAAKmV,QAAQpI,WACbswC,EAAOE,cACHhM,IAASvxC,KACH0b,GAAmBpB,EAAUijC,gBAAkB,GAC/C,QAEPF,EAEXnF,gBACIl4C,KAAK6xC,WAAa7xC,KAAK+xC,cAAW3nC,EAGtCwzC,YACI59C,KAAKwiB,KAAKsyB,MAAMhtC,SAASjF,IAAW,IAAI6U,EAAI,OAAwC,QAAhCA,EAAK7U,EAAKssC,wBAAqC,IAAPz3B,OAAgB,EAASA,EAAG2c,UACxHr0B,KAAKwiB,KAAKsyB,MAAMhtC,QAAQ+vC,IACxB73C,KAAKwiB,KAAKgzB,YAAYhZ,UAIlC,SAASoQ,GAAa/pC,GAClBA,EAAK+pC,eAET,SAASoL,GAAmBn1C,GACxB,IAAI6U,EACJ,MAAMq6B,GAAuC,QAA1Br6B,EAAK7U,EAAKgvC,kBAA+B,IAAPn6B,OAAgB,EAASA,EAAGq6B,WAAalvC,EAAKkvC,SACnG,GAAIlvC,EAAKusC,UACLvsC,EAAKwI,QACL0mC,GACAlvC,EAAKizC,aAAa,aAAc,CAChC,MAAQ9L,UAAW3+B,EAAQguC,YAAawE,GAAmBh7C,EAAKwI,QAC1D,cAAEuxC,GAAkB/5C,EAAKsS,QACzBglC,EAAWpI,EAAS17B,SAAWxT,EAAKwI,OAAOgL,OAG3B,SAAlBumC,EACA1V,IAAUtB,IACN,MAAMkY,EAAe3D,EACfpI,EAASsH,YAAYzT,GACrBmM,EAAS/H,UAAUpE,GACnBvkC,EAASskC,GAAWmY,GAC1BA,EAAa51C,IAAMmD,EAAOu6B,GAAM19B,IAChC41C,EAAa31C,IAAM21C,EAAa51C,IAAM7G,KAGrCs7C,GAA0BC,EAAe7K,EAAS/H,UAAW3+B,IAClE67B,IAAUtB,IACN,MAAMkY,EAAe3D,EACfpI,EAASsH,YAAYzT,GACrBmM,EAAS/H,UAAUpE,GACnBvkC,EAASskC,GAAWt6B,EAAOu6B,IACjCkY,EAAa31C,IAAM21C,EAAa51C,IAAM7G,EAIlCwB,EAAK4zC,iBAAmB5zC,EAAKssC,mBAC7BtsC,EAAKmxC,mBAAoB,EACzBnxC,EAAK4zC,eAAe7Q,GAAMz9B,IACtBtF,EAAK4zC,eAAe7Q,GAAM19B,IAAM7G,MAIhD,MAAM08C,Ed7wCY,CACtB7tC,EAP0B,CAC1B+1B,UAAW,EACXj1B,MAAO,EACP4G,OAAQ,EACRouB,YAAa,GAIbj/B,EAR0B,CAC1Bk/B,UAAW,EACXj1B,MAAO,EACP4G,OAAQ,EACRouB,YAAa,IcgxCTE,GAAa6X,EAAa1yC,EAAQ0mC,EAAS/H,WAC3C,MAAMgU,Ed/wCY,CACtB9tC,EAP0B,CAC1B+1B,UAAW,EACXj1B,MAAO,EACP4G,OAAQ,EACRouB,YAAa,GAIbj/B,EAR0B,CAC1Bk/B,UAAW,EACXj1B,MAAO,EACP4G,OAAQ,EACRouB,YAAa,IckxCLmU,EACAjU,GAAa8X,EAAan7C,EAAK22C,eAAeqE,GAAgB,GAAO9L,EAASsH,aAG9EnT,GAAa8X,EAAa3yC,EAAQ0mC,EAAS/H,WAE/C,MAAMkD,GAAoB+D,GAAY8M,GACtC,IAAIzH,GAA2B,EAC/B,IAAKzzC,EAAKgvC,WAAY,CAClB,MAAMkI,EAAiBl3C,EAAKw3C,6BAK5B,GAAIN,IAAmBA,EAAelI,WAAY,CAC9C,MAAQE,SAAUkM,EAAgB5yC,OAAQ6yC,GAAiBnE,EAC3D,GAAIkE,GAAkBC,EAAc,CAChC,MAAMC,Ed5xCF,CACpBjuC,EAFqB,CAAGhI,IAAK,EAAGC,IAAK,GAGrCpB,EAHqB,CAAGmB,IAAK,EAAGC,IAAK,Ic8xCrBm+B,GAAqB6X,EAAkBpM,EAAS/H,UAAWiU,EAAejU,WAC1E,MAAMwR,Ed9xCF,CACpBtrC,EAFqB,CAAGhI,IAAK,EAAGC,IAAK,GAGrCpB,EAHqB,CAAGmB,IAAK,EAAGC,IAAK,IcgyCrBm+B,GAAqBkV,EAAgBnwC,EAAQ6yC,EAAalU,WACrDkH,GAAUiN,EAAkB3C,KAC7BlF,GAA2B,GAE3ByD,EAAe5kC,QAAQ8hC,aACvBp0C,EAAK4zC,eAAiB+E,EACtB34C,EAAKy3C,qBAAuB6D,EAC5Bt7C,EAAKk3C,eAAiBA,KAKtCl3C,EAAK8yC,gBAAgB,YAAa,CAC9BtqC,OAAAA,EACA0mC,SAAAA,EACA9yB,MAAO++B,EACPD,YAAAA,EACA7Q,iBAAAA,EACAoJ,yBAAAA,SAGH,GAAIzzC,EAAKusC,SAAU,CACpB,MAAM,eAAE3L,GAAmB5gC,EAAKsS,QAChCsuB,GAAkBA,IAOtB5gC,EAAKsS,QAAQyH,gBAAaxS,EAE9B,SAAS2qC,GAAoBlyC,GAIzBswC,GAAoBC,aACfvwC,EAAKN,SAQLM,EAAK23C,iBACN33C,EAAKmxC,kBAAoBnxC,EAAKN,OAAOyxC,mBAOzCnxC,EAAKoxC,0BAA4BpxC,EAAKoxC,wBAA0BlqC,QAAQlH,EAAKmxC,mBACzEnxC,EAAKN,OAAOyxC,mBACZnxC,EAAKN,OAAO0xC,0BAChBpxC,EAAKqxC,mBAAqBrxC,EAAKqxC,iBAAmBrxC,EAAKN,OAAO2xC,mBAElE,SAASgB,GAAgBryC,GACrBA,EAAKmxC,kBACDnxC,EAAKoxC,wBACDpxC,EAAKqxC,kBACD,EAEhB,SAASgE,GAAcr1C,GACnBA,EAAKq1C,gBAET,SAASL,GAAkBh1C,GACvBA,EAAKg1C,oBAET,SAASE,GAAoBl1C,GACzB,MAAM,cAAEsK,GAAkBtK,EAAKsS,QAC3BhI,GAAiBA,EAAciU,WAAWg9B,uBAC1CjxC,EAAckvB,OAAO,uBAEzBx5B,EAAK+wC,iBAET,SAASwC,GAAgBvzC,GACrBA,EAAKuzC,kBACLvzC,EAAKg3C,YAAch3C,EAAK4zC,eAAiB5zC,EAAKuT,YAAShM,EAE3D,SAAS4qC,GAAmBnyC,GACxBA,EAAKmyC,qBAET,SAASC,GAAepyC,GACpBA,EAAKoyC,iBAET,SAASuC,GAAc30C,GACnBA,EAAK20C,gBAET,SAASW,GAAoBpJ,GACzBA,EAAMwD,qBAEV,SAASwJ,GAAa1uB,EAAQpO,EAAOtgB,GACjC0uB,EAAO4Y,UAAYrqB,GAAIqD,EAAMgnB,UAAW,EAAGtnC,GAC3C0uB,EAAOrc,MAAQ4K,GAAIqD,EAAMjO,MAAO,EAAGrS,GACnC0uB,EAAOzV,OAASqH,EAAMrH,OACtByV,EAAO2Y,YAAc/mB,EAAM+mB,YAE/B,SAASgW,GAAQ3uB,EAAQhC,EAAMC,EAAI3sB,GAC/B0uB,EAAOnlB,IAAM0T,GAAIyP,EAAKnjB,IAAKojB,EAAGpjB,IAAKvJ,GACnC0uB,EAAOllB,IAAMyT,GAAIyP,EAAKljB,IAAKmjB,EAAGnjB,IAAKxJ,GAMvC,SAASi9C,GAAoB/4C,GACzB,OAAQA,EAAKmvC,sBAAwD5nC,IAArCvH,EAAKmvC,gBAAgBkK,YAEzD,MAAMvF,GAA0B,CAC5B9mB,SAAU,IACVzI,KAAM,CAAC,GAAK,EAAG,GAAK,IAExB,SAAS0wB,GAAej1C,EAAMgxC,GAK1B,IAAIwK,EAAax7C,EAAK2f,KACtB,IAAK,IAAIjlB,EAAIsF,EAAK4yC,KAAKp0C,OAAS,EAAG9D,GAAK,EAAGA,IACvC,GAAIwM,QAAQlH,EAAK4yC,KAAKl4C,GAAG+Q,UAAW,CAChC+vC,EAAax7C,EAAK4yC,KAAKl4C,GACvB,MAGR,MACM8c,GADgBgkC,GAAcA,IAAex7C,EAAK2f,KAAO67B,EAAW/vC,SAAWtN,UACvDs9C,cAAc,wBAAwBzK,OAChEx5B,GACAxX,EAAK0L,MAAM8L,GAAS,GAE5B,SAAS++B,GAAUxT,GACfA,EAAK19B,IAAMxC,KAAKiC,MAAMi+B,EAAK19B,KAC3B09B,EAAKz9B,IAAMzC,KAAKiC,MAAMi+B,EAAKz9B,KAM/B,SAASw0C,GAA0BC,EAAe7K,EAAU1mC,GACxD,MAA0B,aAAlBuxC,GACe,oBAAlBA,IACI/W,GAAOsL,GAAYY,GAAWZ,GAAY9lC,GAAS,IKr7ChE,MAAMkzC,GAAyBhL,GAAqB,CAChDC,qBAAsB,CAACrsC,EAAKk1B,IAAWnf,GAAY/V,EAAK,SAAUk1B,GAClEqX,cAAe,KAAM,CACjBxjC,EAAGlP,SAASC,gBAAgBu9C,YAAcx9C,SAASy9C,KAAKD,WACxDz3C,EAAG/F,SAASC,gBAAgBy9C,WAAa19C,SAASy9C,KAAKC,YAE3D/K,kBAAmB,KAAM,ICNvBpI,GAAqB,CACvB5/B,aAASvB,GAEPu0C,GAAqBpL,GAAqB,CAC5CG,cAAgBplC,IAAa,CACzB4B,EAAG5B,EAASkwC,WACZz3C,EAAGuH,EAASowC,YAEhBjL,cAAe,KACX,IAAKlI,GAAmB5/B,QAAS,CAC7B,MAAMizC,EAAe,IAAIL,GAAuB,EAAG,IACnDK,EAAarwC,MAAMxN,QACnB69C,EAAanQ,WAAW,CAAEkK,cAAc,IACxCpN,GAAmB5/B,QAAUizC,EAEjC,OAAOrT,GAAmB5/B,SAE9BioC,eAAgB,CAACtlC,EAAUlQ,KACvBkQ,EAAS/H,MAAMvE,eAAsBoI,IAAVhM,EAAsBA,EAAQ,QAE7Du1C,kBAAoBrlC,GAAavE,QAAuD,UAA/ChJ,OAAO89C,iBAAiBvwC,GAAUzM,YClBzEkJ,GAAO,CACTI,IAAK,CACD2T,QpBIR,cAAyBA,GACrB/f,cACIqkB,SAASnjB,WACTD,KAAK8+C,0BAA4Bp9B,GAErCq9B,cAAcC,GACVh/C,KAAKi/C,QAAU,IAAInb,GAAWkb,EAAkBh/C,KAAKk/C,oBAAqB,CAAE32C,mBAAoBvI,KAAK6C,KAAK0nC,0BAE9G2U,oBACI,MAAM,kBAAEC,EAAiB,WAAEC,EAAU,MAAEC,EAAK,SAAEC,GAAat/C,KAAK6C,KAAKue,WACrE,MAAO,CACHgkB,eAAgB+H,GAAagS,GAC7Bza,QAASyI,GAAaiS,GACtBza,OAAQ0a,EACRra,MAAO,CAACznB,EAAO4D,YACJnhB,KAAKi/C,QACRK,GACA,WAAa,IAAMA,EAAS/hC,EAAO4D,OAKnD5S,QACIvO,KAAK8+C,0BAA4BhhC,GAAgB9d,KAAK6C,KAAK8I,QAAS,eAAgB4R,GAAUvd,KAAK++C,cAAcxhC,KAErH5P,SACI3N,KAAKi/C,SAAWj/C,KAAKi/C,QAAQ5Z,eAAerlC,KAAKk/C,qBAErD1wC,UACIxO,KAAK8+C,4BACL9+C,KAAKi/C,SAAWj/C,KAAKi/C,QAAQla,SoBhCjCh6B,KAAM,CACF+T,QCNR,cAA0BA,GACtB/f,YAAY8D,GACRugB,MAAMvgB,GACN7C,KAAKu/C,oBAAsB79B,GAC3B1hB,KAAKiF,gBAAkByc,GACvB1hB,KAAKu3B,SAAW,IAAIwR,GAA0BlmC,GAElD0L,QAGI,MAAM,aAAEixC,GAAiBx/C,KAAK6C,KAAKue,WAC/Bo+B,IACAx/C,KAAKu/C,oBAAsBC,EAAalc,UAAUtjC,KAAKu3B,WAE3Dv3B,KAAKiF,gBAAkBjF,KAAKu3B,SAASxyB,gBAAkB2c,GAE3DlT,UACIxO,KAAKu/C,sBACLv/C,KAAKiF,oBDXLw6C,eAAgBd,GAChB9xC,cAAa,KEAf6yC,GAAwB,uDAS9B,SAASC,GAAiBh0C,EAAS0O,EAAS04B,EAAQ,GAChDxsB,GAAUwsB,GAFG,EAEgB,yDAAyDpnC,yDACtF,MAAO4E,EAAOqvC,GAVlB,SAA0Bj0C,GACtB,MAAM2e,EAAQo1B,GAAsBG,KAAKl0C,GACzC,IAAK2e,EACD,MAAO,CAAC,GACZ,MAAO,CAAE/Z,EAAOqvC,GAAYt1B,EAC5B,MAAO,CAAC/Z,EAAOqvC,GAKWE,CAAiBn0C,GAE3C,IAAK4E,EACD,OAEJ,MAAMmM,EAAW3b,OAAO89C,iBAAiBxkC,GAAS0lC,iBAAiBxvC,GACnE,OAAImM,EACOA,EAAS1G,OAEXvF,EAAmBmvC,GAEjBD,GAAiBC,EAAUvlC,EAAS04B,EAAQ,GAG5C6M,EC7Bf,MAAMI,GAAiB,IAAIpwC,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,SACA,IACA,MAEEqwC,GAAmBt+C,GAAQq+C,GAAe9wC,IAAIvN,GAI9Cu+C,GAAiB/2C,GAAMA,IAAMyH,GAAUzH,IAAMyI,GAC7CuuC,GAAmB,CAACC,EAAQC,IAAQvvC,WAAWsvC,EAAO3uC,MAAM,MAAM4uC,IAClEC,GAAyB,CAACC,EAAMC,IAAS,CAACC,GAASz+C,UAAAA,MACrD,GAAkB,SAAdA,IAAyBA,EACzB,OAAO,EACX,MAAM0+C,EAAW1+C,EAAUsoB,MAAM,sBACjC,GAAIo2B,EACA,OAAOP,GAAiBO,EAAS,GAAIF,GAEpC,CACD,MAAMJ,EAASp+C,EAAUsoB,MAAM,oBAC/B,OAAI81B,EACOD,GAAiBC,EAAO,GAAIG,GAG5B,IAIbI,GAAgB,IAAI/wC,IAAI,CAAC,IAAK,IAAK,MACnCgxC,GAAgClxC,EAAmBjK,QAAQ9D,IAASg/C,GAAczxC,IAAIvN,KAe5F,MAAMk/C,GAAmB,CAErBz9C,MAAO,EAAG8M,EAAAA,IAAOkD,YAAAA,EAAc,IAAKF,aAAAA,EAAe,OAAUhD,EAAE/H,IAAM+H,EAAEhI,IAAM4I,WAAWsC,GAAetC,WAAWoC,GAClHhQ,OAAQ,EAAG6D,EAAAA,IAAOkM,WAAAA,EAAa,IAAKE,cAAAA,EAAgB,OAAUpM,EAAEoB,IAAMpB,EAAEmB,IAAM4I,WAAWmC,GAAcnC,WAAWqC,GAClH5R,IAAK,CAACk/C,GAASl/C,IAAAA,KAAUuP,WAAWvP,GACpCO,KAAM,CAAC2+C,GAAS3+C,KAAAA,KAAWgP,WAAWhP,GACtCN,OAAQ,EAAGuF,EAAAA,IAAOxF,IAAAA,KAAUuP,WAAWvP,IAAQwF,EAAEoB,IAAMpB,EAAEmB,KACzD6K,MAAO,EAAG7C,EAAAA,IAAOpO,KAAAA,KAAWgP,WAAWhP,IAASoO,EAAE/H,IAAM+H,EAAEhI,KAE1DgI,EAAGowC,GAAuB,EAAG,IAC7Bv5C,EAAGu5C,GAAuB,EAAG,KA+B3BQ,GAAmC,CAAC3zC,EAAeiJ,EAAQwB,EAAS,GAAI+E,EAAgB,MAC1FvG,EAAS,IAAKA,GACduG,EAAgB,IAAKA,GACrB,MAAMokC,EAAuBjjD,OAAOkb,KAAK5C,GAAQ3Q,OAAOw6C,IAGxD,IAAIe,EAAyB,GACzBC,GAAsC,EAC1C,MAAMC,EAAuB,GAkF7B,GAjFAH,EAAqBj5C,SAASnG,IAC1B,MAAMvD,EAAQ+O,EAAc6xB,SAASr9B,GACrC,IAAKwL,EAAc4xB,SAASp9B,GACxB,OACJ,IAAI0pB,EAAOzT,EAAOjW,GACdw/C,EAAWxiB,GAAuBtT,GACtC,MAAMC,EAAKlV,EAAOzU,GAClB,IAAIy/C,EAKJ,GAAI3lC,GAAkB6P,GAAK,CACvB,MAAM+1B,EAAe/1B,EAAGjqB,OAClBigD,EAAsB,OAAVh2B,EAAG,GAAc,EAAI,EACvCD,EAAOC,EAAGg2B,GACVH,EAAWxiB,GAAuBtT,GAClC,IAAK,IAAI9tB,EAAI+jD,EAAW/jD,EAAI8jD,GAKV,OAAV/1B,EAAG/tB,GAL+BA,IAOjC6jD,EAMD76B,GAAUoY,GAAuBrT,EAAG/tB,MAAQ6jD,EAAQ,2CALpDA,EAASziB,GAAuBrT,EAAG/tB,IACnCgpB,GAAU66B,IAAWD,GAChBjB,GAAciB,IAAajB,GAAckB,GAAU,sEAQhEA,EAASziB,GAAuBrT,GAEpC,GAAI61B,IAAaC,EAGb,GAAIlB,GAAciB,IAAajB,GAAckB,GAAS,CAClD,MAAMz1C,EAAUvN,EAAMH,MACC,kBAAZ0N,GACPvN,EAAM+Q,IAAI2B,WAAWnF,IAEP,kBAAP2f,EACPlV,EAAOzU,GAAOmP,WAAWwa,GAEpBliB,MAAMC,QAAQiiB,IAAO81B,IAAWxvC,KACrCwE,EAAOzU,GAAO2pB,EAAGzD,IAAI/W,kBAGN,OAAbqwC,QAAkC,IAAbA,OAAsB,EAASA,EAASn/C,aACvD,OAAXo/C,QAA8B,IAAXA,OAAoB,EAASA,EAAOp/C,aAC9C,IAATqpB,GAAqB,IAAPC,GAGF,IAATD,EACAjtB,EAAM+Q,IAAIiyC,EAAOp/C,UAAUqpB,IAG3BjV,EAAOzU,GAAOw/C,EAASn/C,UAAUspB,IAMhC21B,IACDD,EApIpB,SAAyC7zC,GACrC,MAAMo0C,EAAoB,GAW1B,OAVAX,GAA8B94C,SAASnG,IACnC,MAAMvD,EAAQ+O,EAAc6xB,SAASr9B,QACvByI,IAAVhM,IACAmjD,EAAkBjhC,KAAK,CAAC3e,EAAKvD,EAAMH,QACnCG,EAAM+Q,IAAIxN,EAAImO,WAAW,SAAW,EAAI,OAI5CyxC,EAAkBlgD,QAClB8L,EAAcS,SACX2zC,EAyHaC,CAAgCr0C,GACpC8zC,GAAsC,GAE1CC,EAAqB5gC,KAAK3e,GAC1Bgb,EAAchb,QACayI,IAAvBuS,EAAchb,GACRgb,EAAchb,GACdyU,EAAOzU,GACjBvD,EAAM2/B,KAAKzS,OAInB41B,EAAqB7/C,OAAQ,CAC7B,MAAMogD,EAAUP,EAAqB3xC,QAAQ,WAAa,EACpDxO,OAAO2gD,YACP,KACAC,EA3HmB,EAACvrC,EAAQjJ,EAAey0C,KACrD,MAAMC,EAAa10C,EAAcu7B,qBAC3BruB,EAAUlN,EAAcxB,QACxBm2C,EAAuBjD,iBAAiBxkC,IACxC,QAAEygC,GAAYgH,EACdlqC,EAAS,GAGC,SAAZkjC,GACA3tC,EAAciwC,eAAe,UAAWhnC,EAAO0kC,SAAW,SAK9D8G,EAAY95C,SAASnG,IACjBiW,EAAOjW,GAAOk/C,GAAiBl/C,GAAKkgD,EAAYC,MAGpD30C,EAAcS,SACd,MAAMm0C,EAAa50C,EAAcu7B,qBAQjC,OAPAkZ,EAAY95C,SAASnG,IAGjB,MAAMvD,EAAQ+O,EAAc6xB,SAASr9B,GACrCvD,GAASA,EAAM2/B,KAAKnmB,EAAOjW,IAC3ByU,EAAOzU,GAAOk/C,GAAiBl/C,GAAKogD,EAAYD,MAE7C1rC,GAgGqB4rC,CAAyB5rC,EAAQjJ,EAAe+zC,GAaxE,OAXIF,EAAuB3/C,QACvB2/C,EAAuBl5C,SAAQ,EAAEnG,EAAKvD,MAClC+O,EAAc6xB,SAASr9B,GAAKwN,IAAI/Q,MAIxC+O,EAAcS,SAEVjF,GAAyB,OAAZ84C,GACb1gD,OAAOkhD,SAAS,CAAE1gD,IAAKkgD,IAEpB,CAAErrC,OAAQurC,EAAiBhlC,cAAAA,GAGlC,MAAO,CAAEvG,OAAAA,EAAQuG,cAAAA,IAUzB,SAASulC,GAAe/0C,EAAeiJ,EAAQwB,EAAQ+E,GACnD,MAxMqB,CAACvG,GACftY,OAAOkb,KAAK5C,GAAQxM,KAAKq2C,IAuMzBkC,CAAiB/rC,GAClB0qC,GAAiC3zC,EAAeiJ,EAAQwB,EAAQ+E,GAChE,CAAEvG,OAAAA,EAAQuG,cAAAA,GCtNpB,MAAMylC,GAAkB,CAACj1C,EAAeiJ,EAAQwB,EAAQ+E,KACpD,MAAMD,EFqCV,SAA6BvP,MAAoBiJ,GAAUuG,GACvD,MAAMtC,EAAUlN,EAAcxB,QAC9B,KAAM0O,aAAmB2N,SACrB,MAAO,CAAE5R,OAAAA,EAAQuG,cAAAA,GAGjBA,IACAA,EAAgB,IAAKA,IAGzBxP,EAAc0M,OAAO/R,SAAS1J,IAC1B,MAAMuN,EAAUvN,EAAMH,MACtB,IAAKwS,EAAmB9E,GACpB,OACJ,MAAM+Q,EAAWijC,GAAiBh0C,EAAS0O,GACvCqC,GACAte,EAAM+Q,IAAIuN,MAIlB,IAAK,MAAM/a,KAAOyU,EAAQ,CACtB,MAAMzK,EAAUyK,EAAOzU,GACvB,IAAK8O,EAAmB9E,GACpB,SACJ,MAAM+Q,EAAWijC,GAAiBh0C,EAAS0O,GACtCqC,IAGLtG,EAAOzU,GAAO+a,EACTC,IACDA,EAAgB,SAIOvS,IAAvBuS,EAAchb,KACdgb,EAAchb,GAAOgK,IAG7B,MAAO,CAAEyK,OAAAA,EAAQuG,cAAAA,GE3EA0lC,CAAoBl1C,EAAeiJ,EAAQuG,GAG5D,OAAOulC,GAAe/0C,EAFtBiJ,EAASsG,EAAStG,OAE2BwB,EAD7C+E,EAAgBD,EAASC,gBCTvB2lC,GAAuB,CAAE32C,QAAS,MAClC42C,GAA2B,CAAE52C,SAAS,GCF5C,MAAM62C,GAAqB,IAAIxgC,QCoBzBygC,GAAe3kD,OAAOkb,KAAK1N,GAC3Bo3C,GAAcD,GAAaphD,OAC3BshD,GAAoB,CACtB,iBACA,oBACA,SACA,sBACA,gBACA,uBACA,2BAEEC,GAAkBn5C,EAAapI,OC3BrC,MAAMwhD,WDgCN,MACI9jD,aAAY,OAAEwD,EAAM,MAAEuC,EAAK,gBAAEuI,EAAe,oBAAEC,EAAmB,YAAEJ,GAAgBiI,EAAU,IAKzFnV,KAAK2L,QAAU,KAIf3L,KAAKuH,SAAW,IAAIqI,IAIpB5P,KAAK8J,eAAgB,EACrB9J,KAAK0J,uBAAwB,EAQ7B1J,KAAKggC,mBAAqB,KAM1BhgC,KAAK6Z,OAAS,IAAI7K,IAIlBhP,KAAKwM,SAAW,GAKhBxM,KAAK8iD,mBAAqB,IAAI9zC,IAM9BhP,KAAK+iD,iBAAmB,GAIxB/iD,KAAK88B,OAAS,GAMd98B,KAAKgjD,uBAAyB,GAC9BhjD,KAAKijD,aAAe,IAAMjjD,KAAKq8B,OAAO,SAAUr8B,KAAKkV,cACrDlV,KAAK4N,OAAS,KACL5N,KAAK2L,UAEV3L,KAAKkjD,eACLljD,KAAKmjD,eAAenjD,KAAK2L,QAAS3L,KAAK4a,YAAa5a,KAAK8E,MAAMyB,MAAOvG,KAAKua,cAE/Eva,KAAKqxC,eAAiB,IAAM,UAAarxC,KAAK4N,QAAQ,GAAO,GAC7D,MAAM,aAAEsH,EAAY,YAAE0F,GAAgB1N,EACtClN,KAAKkV,aAAeA,EACpBlV,KAAKojD,WAAa,IAAKluC,GACvBlV,KAAKqjD,cAAgBv+C,EAAMoF,QAAU,IAAKgL,GAAiB,GAC3DlV,KAAK4a,YAAcA,EACnB5a,KAAKuC,OAASA,EACdvC,KAAK8E,MAAQA,EACb9E,KAAKqN,gBAAkBA,EACvBrN,KAAK+yC,MAAQxwC,EAASA,EAAOwwC,MAAQ,EAAI,EACzC/yC,KAAKsN,oBAAsBA,EAC3BtN,KAAKmV,QAAUA,EACfnV,KAAK0J,sBAAwBA,EAAsB5E,GACnD9E,KAAK8J,cAAgBA,EAAchF,GAC/B9E,KAAK8J,gBACL9J,KAAKsgC,gBAAkB,IAAI1wB,KAE/B5P,KAAKqiC,uBAAyBt4B,QAAQxH,GAAUA,EAAOoJ,SAWvD,MAAM,WAAEg0B,KAAe2jB,GAAwBtjD,KAAK+a,4BAA4BjW,EAAO,IACvF,IAAK,MAAMnD,KAAO2hD,EAAqB,CACnC,MAAMllD,EAAQklD,EAAoB3hD,QACRyI,IAAtB8K,EAAavT,IAAsBoO,EAAc3R,KACjDA,EAAM+Q,IAAI+F,EAAavT,IAAM,GACzBm6B,GAAwB6D,IACxBA,EAAWtf,IAAI1e,KAY/BoZ,4BAA4BwoC,EAAQC,GAChC,MAAO,GAEXj1C,MAAMD,GACFtO,KAAK2L,QAAU2C,EACfk0C,GAAmBrzC,IAAIb,EAAUtO,MAC7BA,KAAKua,YACLva,KAAKua,WAAWhM,MAAMD,GAEtBtO,KAAKuC,QAAUvC,KAAK8J,gBAAkB9J,KAAK0J,wBAC3C1J,KAAKyjD,sBAAwBzjD,KAAKuC,OAAOmhD,gBAAgB1jD,OAE7DA,KAAK6Z,OAAO/R,SAAQ,CAAC1J,EAAOuD,IAAQ3B,KAAK2jD,kBAAkBhiD,EAAKvD,KAC3DmkD,GAAyB52C,SE1JtC,WAEI,GADA42C,GAAyB52C,SAAU,EAC9BhD,EAEL,GAAI5H,OAAO6iD,WAAY,CACnB,MAAMC,EAAmB9iD,OAAO6iD,WAAW,4BACrCE,EAA8B,IAAOxB,GAAqB32C,QAAUk4C,EAAiBj+B,QAC3Fi+B,EAAiBE,YAAYD,GAC7BA,SAGAxB,GAAqB32C,SAAU,EFgJ3Bq4C,GAEJhkD,KAAKggC,mBAC4B,UAA7BhgC,KAAKsN,sBAE8B,WAA7BtN,KAAKsN,qBAEDg1C,GAAqB32C,SAI/B3L,KAAKuC,QACLvC,KAAKuC,OAAOgF,SAAS8Y,IAAIrgB,MAC7BA,KAAK2N,OAAO3N,KAAK8E,MAAO9E,KAAKqN,iBAEjCmB,UACIg0C,GAAA,OAA0BxiD,KAAK2L,SAC/B3L,KAAKua,YAAcva,KAAKua,WAAW/L,UACnCuS,GAAY/gB,KAAKijD,cACjBliC,GAAY/gB,KAAK4N,QACjB5N,KAAK8iD,mBAAmBh7C,SAASm4B,GAAWA,MAC5CjgC,KAAKyjD,uBAAyBzjD,KAAKyjD,wBACnCzjD,KAAKuC,QAAUvC,KAAKuC,OAAOgF,SAASkZ,OAAOzgB,MAC3C,IAAK,MAAM2B,KAAO3B,KAAK88B,OACnB98B,KAAK88B,OAAOn7B,GAAK66B,QAErB,IAAK,MAAM76B,KAAO3B,KAAKwM,SACnBxM,KAAKwM,SAAS7K,GAAK6M,UAEvBxO,KAAK2L,QAAU,KAEnBg4C,kBAAkBhiD,EAAKvD,GACnB,MAAM6lD,EAAmBt0C,EAAeT,IAAIvN,GACtCuiD,EAAiB9lD,EAAMo/B,GAAG,UAAW2mB,IACvCnkD,KAAKkV,aAAavT,GAAOwiD,EACzBnkD,KAAK8E,MAAM0wB,UACP,UAAax1B,KAAKijD,cAAc,GAAO,GACvCgB,GAAoBjkD,KAAKua,aACzBva,KAAKua,WAAW25B,kBAAmB,MAGrCkQ,EAAwBhmD,EAAMo/B,GAAG,gBAAiBx9B,KAAKqxC,gBAC7DrxC,KAAK8iD,mBAAmB3zC,IAAIxN,GAAK,KAC7BuiD,IACAE,OAGRrjB,iBAAiBsjB,GAIb,OAAKrkD,KAAK2L,SACL3L,KAAKskD,0BACNtkD,KAAK+H,OAASs8C,EAAMt8C,KAGjB/H,KAAKskD,yBAAyBtkD,KAAK2L,QAAS04C,EAAM14C,SAF9C,EAIfc,cAAa,SAAElF,KAAag9C,GAAiBp2C,EAAU/B,EAAmBa,EAAciB,GACpF,IAAIs2C,EACA33C,EAaJ,IAAK,IAAItP,EAAI,EAAGA,EAAImlD,GAAanlD,IAAK,CAClC,MAAMsM,EAAO44C,GAAallD,IACpB,UAAEgO,EAAWuT,QAAS2lC,EAAkB,eAAEhF,EAAgB5yC,cAAe63C,GAA4Bp5C,EAAmBzB,GAC1H41C,IACA+E,EAA4B/E,GAC5Bl0C,EAAUg5C,MACLvkD,KAAKwM,SAAS3C,IAAS46C,IACxBzkD,KAAKwM,SAAS3C,GAAQ,IAAI46C,EAAmBzkD,OAE7C0kD,IACA73C,EAAgB63C,IAI5B,IAAK1kD,KAAKua,YAAciqC,EAA2B,CAC/CxkD,KAAKua,WAAa,IAAIiqC,EAA0Bv3C,EAAcjN,KAAKkV,aAAclV,KAAKuC,QAAUvC,KAAKuC,OAAOgY,YAC5G,MAAM,SAAExN,EAAQ,OAAE1B,EAAM,KAAEN,EAAI,gBAAE8/B,EAAe,aAAE8N,EAAY,WAAE1B,GAAgBsN,EAC/EvkD,KAAKua,WAAWk0B,WAAW,CACvB1hC,SAAAA,EACA1B,OAAAA,EACAitC,oBAAqBvuC,QAAQgB,IACxB8/B,GAAmB5hC,EAAY4hC,GACpC19B,cAAenN,KACfqxC,eAAgB,IAAMrxC,KAAKqxC,iBAQ3BuL,cAAiC,kBAAXvxC,EAAsBA,EAAS,OACrD0xC,uBAAwB7uC,EACxByqC,aAAAA,EACA1B,WAAAA,IAGR,OAAOpqC,EAEXgB,iBACI,IAAK,MAAMlM,KAAO3B,KAAKwM,SAAU,CAC7B,MAAMm4C,EAAU3kD,KAAKwM,SAAS7K,GAC1BgjD,EAAQ5lC,UACR4lC,EAAQh3C,OAAO3N,KAAK8E,MAAO9E,KAAKgb,YAGhC2pC,EAAQp2C,QACRo2C,EAAQ5lC,WAAY,IAIhCmkC,eACIljD,KAAK4kD,MAAM5kD,KAAK4a,YAAa5a,KAAKkV,aAAclV,KAAKmV,QAASnV,KAAK8E,OAOvE4jC,qBACI,OAAO1oC,KAAK2L,QACN3L,KAAK6kD,2BAA2B7kD,KAAK2L,QAAS3L,KAAK8E,O5BzRzC,CACpBoL,EAFqB,CAAGhI,IAAK,EAAGC,IAAK,GAGrCpB,EAHqB,CAAGmB,IAAK,EAAGC,IAAK,I4B6RrC28C,eAAenjD,GACX,OAAO3B,KAAKkV,aAAavT,GAE7By7C,eAAez7C,EAAKvD,GAChB4B,KAAKkV,aAAavT,GAAOvD,EAS7B+gC,qBAAqB/oB,EAAQ2uC,GAAY,GACrC,OAAO/kD,KAAKglD,iCAAiC5uC,EAAQpW,KAAK8E,MAAOigD,GAMrEp3C,OAAO7I,EAAOuI,IACNvI,EAAMsQ,mBAAqBpV,KAAK8E,MAAMsQ,oBACtCpV,KAAKqxC,iBAETrxC,KAAKgb,UAAYhb,KAAK8E,MACtB9E,KAAK8E,MAAQA,EACb9E,KAAK2jC,oBAAsB3jC,KAAKqN,gBAChCrN,KAAKqN,gBAAkBA,EAIvB,IAAK,IAAI9P,EAAI,EAAGA,EAAIolD,GAAkBthD,OAAQ9D,IAAK,CAC/C,MAAMoE,EAAMghD,GAAkBplD,GAC1ByC,KAAKgjD,uBAAuBrhD,KAC5B3B,KAAKgjD,uBAAuBrhD,YACrB3B,KAAKgjD,uBAAuBrhD,IAEvC,MAAMsjD,EAAWngD,EAAM,KAAOnD,GAC1BsjD,IACAjlD,KAAKgjD,uBAAuBrhD,GAAO3B,KAAKw9B,GAAG77B,EAAKsjD,IAGxDjlD,KAAK+iD,iBG5Ub,SAAqC1oC,EAAS0L,EAAMC,GAChD,MAAM,WAAE2Z,GAAe5Z,EACvB,IAAK,MAAMpkB,KAAOokB,EAAM,CACpB,MAAMm/B,EAAYn/B,EAAKpkB,GACjBwjD,EAAYn/B,EAAKrkB,GACvB,GAAIoO,EAAcm1C,GAKd7qC,EAAQ4kB,SAASt9B,EAAKujD,GAClBppB,GAAwB6D,IACxBA,EAAWtf,IAAI1e,QAUlB,GAAIoO,EAAco1C,GAKnB9qC,EAAQ4kB,SAASt9B,EAAK68B,GAAY0mB,EAAW,CAAEvsB,MAAOte,KAClDyhB,GAAwB6D,IACxBA,EAAWM,OAAOt+B,QAGrB,GAAIwjD,IAAcD,EAMnB,GAAI7qC,EAAQ0kB,SAASp9B,GAAM,CACvB,MAAMyjD,EAAgB/qC,EAAQ2kB,SAASr9B,IAEtCyjD,EAAc/nB,aAAe+nB,EAAcj2C,IAAI+1C,OAE/C,CACD,MAAMf,EAAc9pC,EAAQyqC,eAAenjD,GAC3C0Y,EAAQ4kB,SAASt9B,EAAK68B,QAA4Bp0B,IAAhB+5C,EAA4BA,EAAce,EAAW,CAAEvsB,MAAOte,MAK5G,IAAK,MAAM1Y,KAAOqkB,OACI5b,IAAd2b,EAAKpkB,IACL0Y,EAAQgrC,YAAY1jD,GAE5B,OAAOokB,EHsRqBu/B,CAA4BtlD,KAAMA,KAAK+a,4BAA4BjW,EAAO9E,KAAKgb,WAAYhb,KAAK+iD,kBACpH/iD,KAAKulD,wBACLvlD,KAAKulD,yBAGbnkC,WACI,OAAOphB,KAAK8E,MAKhB0gD,WAAW37C,GACP,OAAO7J,KAAK8E,MAAMkF,SAAWhK,KAAK8E,MAAMkF,SAASH,QAAQO,EAK7DgvB,uBACI,OAAOp5B,KAAK8E,MAAM8X,WAEtB2tB,wBACI,OAAOvqC,KAAK8E,MAAMyD,mBAEtBk9C,wBACI,OAAOzlD,KAAK8J,cACN9J,KACAA,KAAKuC,OACDvC,KAAKuC,OAAOkjD,6BACZr7C,EAEdy3B,kBAAkB6jB,GAAgB,GAC9B,GAAIA,EACA,OAAO1lD,KAAKuC,OAASvC,KAAKuC,OAAOs/B,yBAAsBz3B,EAE3D,IAAKpK,KAAK0J,sBAAuB,CAC7B,MAAMS,EAAUnK,KAAKuC,QACfvC,KAAKuC,OAAOs/B,qBACZ,GAIN,YAH2Bz3B,IAAvBpK,KAAK8E,MAAMoF,UACXC,EAAQD,QAAUlK,KAAK8E,MAAMoF,SAE1BC,EAEX,MAAMA,EAAU,GAChB,IAAK,IAAI5M,EAAI,EAAGA,EAAIqlD,GAAiBrlD,IAAK,CACtC,MAAMsM,EAAOJ,EAAalM,GACpBmN,EAAO1K,KAAK8E,MAAM+E,IACpBX,EAAewB,KAAkB,IAATA,KACxBP,EAAQN,GAAQa,GAGxB,OAAOP,EAKXu5C,gBAAgBliC,GACZ,MAAMmkC,EAAqB3lD,KAAKylD,wBAChC,GAAIE,EAGA,OAFAA,EAAmBrlB,iBACfqlB,EAAmBrlB,gBAAgBjgB,IAAImB,GACpC,IAAMmkC,EAAmBrlB,gBAAgB7f,OAAOe,GAM/Dyd,SAASt9B,EAAKvD,GAENA,IAAU4B,KAAK6Z,OAAO5b,IAAI0D,KAC1B3B,KAAKqlD,YAAY1jD,GACjB3B,KAAK2jD,kBAAkBhiD,EAAKvD,IAEhC4B,KAAK6Z,OAAO1K,IAAIxN,EAAKvD,GACrB4B,KAAKkV,aAAavT,GAAOvD,EAAMH,MAKnConD,YAAY1jD,GACR3B,KAAK6Z,OAAO4G,OAAO9e,GACnB,MAAM87B,EAAcz9B,KAAK8iD,mBAAmB7kD,IAAI0D,GAC5C87B,IACAA,IACAz9B,KAAK8iD,mBAAmBriC,OAAO9e,WAE5B3B,KAAKkV,aAAavT,GACzB3B,KAAK4lD,2BAA2BjkD,EAAK3B,KAAK4a,aAK9CmkB,SAASp9B,GACL,OAAO3B,KAAK6Z,OAAO3K,IAAIvN,GAE3Bq9B,SAASr9B,EAAK+3B,GACV,GAAI15B,KAAK8E,MAAM+U,QAAU7Z,KAAK8E,MAAM+U,OAAOlY,GACvC,OAAO3B,KAAK8E,MAAM+U,OAAOlY,GAE7B,IAAIvD,EAAQ4B,KAAK6Z,OAAO5b,IAAI0D,GAK5B,YAJcyI,IAAVhM,QAAwCgM,IAAjBsvB,IACvBt7B,EAAQogC,GAAY9E,EAAc,CAAEf,MAAO34B,OAC3CA,KAAKi/B,SAASt9B,EAAKvD,IAEhBA,EAOXynD,UAAUlkD,GACN,YAAkCyI,IAA3BpK,KAAKkV,aAAavT,IAAuB3B,KAAK2L,QAE/C3L,KAAK8lD,sBAAsB9lD,KAAK2L,QAAShK,EAAK3B,KAAKmV,SADnDnV,KAAKkV,aAAavT,GAO5BokD,cAAcpkD,EAAKvD,GACf4B,KAAKojD,WAAWzhD,GAAOvD,EAM3B6kC,cAActhC,GACV,IAAI+V,EACJ,MAAM,QAAExN,GAAYlK,KAAK8E,MACnBkhD,EAAsC,kBAAZ97C,GAA2C,kBAAZA,EACD,QAAvDwN,EAAK2D,GAAwBrb,KAAK8E,MAAOoF,UAA6B,IAAPwN,OAAgB,EAASA,EAAG/V,QAC5FyI,EAIN,GAAIF,QAAgCE,IAArB47C,EACX,OAAOA,EAMX,MAAM5vC,EAASpW,KAAKimD,uBAAuBjmD,KAAK8E,MAAOnD,GACvD,YAAeyI,IAAXgM,GAAyBrG,EAAcqG,QAMRhM,IAA5BpK,KAAKqjD,cAAc1hD,SACDyI,IAArB47C,OACE57C,EACApK,KAAKojD,WAAWzhD,GARXyU,EAUfonB,GAAGrgB,EAAW6C,GAIV,OAHKhgB,KAAK88B,OAAO3f,KACbnd,KAAK88B,OAAO3f,GAAa,IAAIgf,IAE1Bn8B,KAAK88B,OAAO3f,GAAWkD,IAAIL,GAEtCqc,OAAOlf,KAAcy4B,GACb51C,KAAK88B,OAAO3f,IACZnd,KAAK88B,OAAO3f,GAAWkf,UAAUuZ,KC/ezC0O,yBAAyB5jD,EAAGuG,GAMxB,OAAsC,EAA/BvG,EAAEwlD,wBAAwBj/C,GAAS,GAAK,EAEnDg/C,uBAAuBnhD,EAAOnD,GAC1B,OAAOmD,EAAMyB,MAAQzB,EAAMyB,MAAM5E,QAAOyI,EAE5Cw7C,2BAA2BjkD,GAAK,KAAE0T,EAAI,MAAE9O,WAC7B8O,EAAK1T,UACL4E,EAAM5E,GAEjBqjD,kCAAiC,WAAEpoC,EAAU,cAAED,KAAkBvG,IAAU,gBAAEI,GAAmBuI,GAC5F,IAAInH,E/CqFZ,SAAmBxB,EAAQwG,EAAYzP,GACnC,MAAMyK,EAAS,GACf,IAAK,MAAMjW,KAAOyU,EAAQ,CACtB,MAAM+vC,EAAmB/mB,GAAwBz9B,EAAKib,GACtD,QAAyBxS,IAArB+7C,EACAvuC,EAAOjW,GAAOwkD,MAEb,CACD,MAAM/nD,EAAQ+O,EAAc6xB,SAASr9B,GACjCvD,IACAwZ,EAAOjW,GAAOvD,EAAMH,QAIhC,OAAO2Z,E+CnGUwuC,CAAUhwC,EAAQwG,GAAc,GAAI5c,MAYjD,GARIwW,IACImG,IACAA,EAAgBnG,EAAgBmG,IAChCvG,IACAA,EAASI,EAAgBJ,IACzBwB,IACAA,EAASpB,EAAgBoB,KAE7BmH,EAAW,E/CoBvB,SAAiC5R,EAAeiJ,EAAQwB,GACpD,IAAIF,EAAI8V,EACR,MAAM64B,EAAevoD,OAAOkb,KAAK5C,GAAQ3Q,QAAQ9D,IAASwL,EAAc4xB,SAASp9B,KAC3E2kD,EAAeD,EAAahlD,OAClC,GAAKilD,EAEL,IAAK,IAAI/oD,EAAI,EAAGA,EAAI+oD,EAAc/oD,IAAK,CACnC,MAAMoE,EAAM0kD,EAAa9oD,GACnBgpD,EAAcnwC,EAAOzU,GAC3B,IAAIvD,EAAQ,KAKRgL,MAAMC,QAAQk9C,KACdnoD,EAAQmoD,EAAY,IAOV,OAAVnoD,IACAA,EAAoG,QAA3FovB,EAA4B,QAAtB9V,EAAKE,EAAOjW,UAAyB,IAAP+V,EAAgBA,EAAKvK,EAAc04C,UAAUlkD,UAAyB,IAAP6rB,EAAgBA,EAAKpX,EAAOzU,SAM9HyI,IAAVhM,GAAiC,OAAVA,IAEN,kBAAVA,ITjFc,iBAAiBoR,KSkFnBpR,IAAU29B,GAAkB39B,IAE/CA,EAAQ0S,WAAW1S,IAEbygC,GAAczgC,IAAUmvB,GAAQ/d,KAAK+2C,KAC3CnoD,EAAQ,GAAkBuD,EAAK4kD,IAEnCp5C,EAAc8xB,SAASt9B,EAAK68B,GAAYpgC,EAAO,CAAEu6B,MAAOxrB,UACpC/C,IAAhBwN,EAAOjW,KACPiW,EAAOjW,GAAOvD,GAEJ,OAAVA,GACA+O,EAAc44C,cAAcpkD,EAAKvD,K+C/DjCooD,CAAwBxmD,KAAMoW,EAAQwB,GACtC,MAAM+V,EAASy0B,GAAgBpiD,KAAMoW,EAAQwB,EAAQ+E,GACrDA,EAAgBgR,EAAOhR,cACvBvG,EAASuX,EAAOvX,OAEpB,MAAO,CACHwG,WAAAA,EACAD,cAAAA,KACGvG,IG7Bf,MAAMqwC,WAA0B5D,GAC5BiD,sBAAsBx3C,EAAU3M,GAC5B,GAAIgO,EAAeT,IAAIvN,GAAM,CACzB,MAAM+kD,EAAcpsB,GAAoB34B,GACxC,OAAO+kD,GAAcA,EAAYloD,SAAe,EAE/C,CACD,MAAMmoD,GAVQtsC,EAUyB/L,EATxCvN,OAAO89C,iBAAiBxkC,IAUjBjc,GAASoS,EAAkB7O,GAC3BglD,EAAc5G,iBAAiBp+C,GAC/BglD,EAAchlD,KAAS,EAC7B,MAAwB,kBAAVvD,EAAqBA,EAAM4X,OAAS5X,EAd9D,IAA0Bic,EAiBtBwqC,2BAA2Bv2C,GAAU,mBAAE/F,IACnC,OAAOmgC,GAAmBp6B,EAAU/F,GAExCq8C,MAAMhqC,EAAa1F,EAAcC,EAASrQ,GACtCmQ,GAAgB2F,EAAa1F,EAAcC,EAASrQ,EAAMsQ,mBAE9D2F,4BAA4BjW,EAAOkW,GAC/B,OAAOD,GAA4BjW,EAAOkW,GAE9CuqC,yBACQvlD,KAAK4mD,oBACL5mD,KAAK4mD,2BACE5mD,KAAK4mD,mBAEhB,MAAM,SAAEr/C,GAAavH,KAAK8E,MACtBiL,EAAcxI,KACdvH,KAAK4mD,kBAAoBr/C,EAASi2B,GAAG,UAAWhlB,IACxCxY,KAAK2L,UACL3L,KAAK2L,QAAQk7C,YAAc,GAAGruC,SAI9C2qC,eAAe70C,EAAUsM,EAAaN,EAAWC,GAC7CH,GAAW9L,EAAUsM,EAAaN,EAAWC,ICvCrD,MAAMusC,WAAyBjE,GAC3B9jD,cACIqkB,SAASnjB,WACTD,KAAKyY,UAAW,EAEpBwtC,uBAAuBnhD,EAAOnD,GAC1B,OAAOmD,EAAMnD,GAEjBmkD,sBAAsBx3C,EAAU3M,GAC5B,GAAIgO,EAAeT,IAAIvN,GAAM,CACzB,MAAM+kD,EAAcpsB,GAAoB34B,GACxC,OAAO+kD,GAAcA,EAAYloD,SAAe,EAGpD,OADAmD,EAAO+Y,GAAoBxL,IAAIvN,GAA0BA,EAAnBsY,GAAYtY,GAC3C2M,EAASy4C,aAAaplD,GAEjCkjD,6BACI,MjCjBgB,CACpB30C,EAFqB,CAAGhI,IAAK,EAAGC,IAAK,GAGrCpB,EAHqB,CAAGmB,IAAK,EAAGC,IAAK,IiCoBrC4S,4BAA4BjW,EAAOkW,GAC/B,OAAO,GAA4BlW,EAAOkW,GAE9C4pC,MAAMhqC,EAAa1F,EAAcC,EAASrQ,GACtCmT,GAAc2C,EAAa1F,EAAcC,EAASnV,KAAKyY,SAAU3T,EAAMsQ,mBAE3E+tC,eAAe70C,EAAUsM,EAAaN,EAAWC,GAC7CI,GAAUrM,EAAUsM,EAAaN,EAAWC,GAEhDhM,MAAMD,GACFtO,KAAKyY,SAAWA,GAASnK,EAAS0O,SAClCoG,MAAM7U,MAAMD,ICrCpB,MAAM,GAAyB,CAAC7N,EAAW0U,IAChC9F,EAAe5O,GAChB,IAAIqmD,GAAiB3xC,EAAS,CAAES,4BAA4B,IAC5D,IAAI6wC,GAAkBtxC,EAAS,CAAES,4BAA4B,ICEjExJ,GAAoB,IACnBwzB,MACAzc,MACApY,MCTQ,CACXM,OAAQ,CACJo0C,eAAgBd,GAChB9xC,cAAa,MDefm6C,GAAuBr4C,GAAkB,CAAClO,EAAWsb,IEhB3D,SAA+Btb,GAAW,mBAAEiZ,GAAqB,GAAStN,EAAmBC,GAIzF,MAAO,IAHYgD,EAAe5O,GAC5Bqc,GACAG,GAGF7Q,kBAAAA,EACAE,UAAWmN,GAAgBC,GAC3BrN,oBAAAA,EACA5L,UAAAA,GFO8D,CAAsBA,EAAWsb,EAAQ3P,GAAmB","sources":["webpack://_N_E/./node_modules/next/head.js","webpack://_N_E/./node_modules/react-parallax/lib/index.js","webpack://_N_E/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/node/id.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/frameloop/data.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/frameloop/index.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/utils/wildcards.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/animators/instant.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/debug/record.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["module.exports = require('./dist/shared/lib/head')\n","!function webpackUniversalModuleDefinition(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t(require(\"react\")):\"function\"==typeof define&&define.amd?define(\"react-parallax\",[\"react\"],t):\"object\"==typeof exports?exports[\"react-parallax\"]=t(require(\"react\")):e[\"react-parallax\"]=t(e.react)}(\"undefined\"!=typeof self?self:this,(function(e){return function(e){var t={};function __webpack_require__(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,__webpack_require__),r.l=!0,r.exports}return __webpack_require__.m=e,__webpack_require__.c=t,__webpack_require__.d=function(e,t,n){__webpack_require__.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},__webpack_require__.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},__webpack_require__.t=function(e,t){if(1&t&&(e=__webpack_require__(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(__webpack_require__.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var r in e)__webpack_require__.d(n,r,function(t){return e[t]}.bind(null,r));return n},__webpack_require__.n=function(e){var t=e&&e.__esModule?function getDefault(){return e.default}:function getModuleExports(){return e};return __webpack_require__.d(t,\"a\",t),t},__webpack_require__.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},__webpack_require__.p=\"\",__webpack_require__(__webpack_require__.s=3)}([function(t,n){t.exports=e},function(e,t,n){\"use strict\";function _typeof(e){return(_typeof=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function _typeof(e){return typeof e}:function _typeof(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function _inherits(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&_setPrototypeOf(e,t)}function _setPrototypeOf(e,t){return(_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(e,t){return e.__proto__=t,e})(e,t)}function _createSuper(e){var t=function _isNativeReflectConstruct(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var n,r=_getPrototypeOf(e);if(t){var o=_getPrototypeOf(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return _possibleConstructorReturn(this,n)}}function _possibleConstructorReturn(e,t){return!t||\"object\"!==_typeof(t)&&\"function\"!=typeof t?function _assertThisInitialized(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function _getPrototypeOf(e){return(_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,\"__esModule\",{value:!0}),t.Background=t.Parallax=void 0;var o=r(n(0)),i=function(e){_inherits(Parallax,e);var t=_createSuper(Parallax);function Parallax(){return _classCallCheck(this,Parallax),t.apply(this,arguments)}return Parallax}(o.default.Component);t.Parallax=i;var a=function(e){_inherits(Background,e);var t=_createSuper(Background);function Background(){return _classCallCheck(this,Background),t.apply(this,arguments)}return Background}(o.default.Component);t.Background=a},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.canUseDOM=t.getNodeHeight=t.isScrolledIntoView=t.getWindowHeight=void 0,t.getWindowHeight=function(e){if(!e)return 0;var t=window,n=document,r=n.documentElement,o=n.getElementsByTagName(\"body\")[0];return t.innerHeight||r.clientHeight||o.clientHeight},t.isScrolledIntoView=function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2?arguments[2]:void 0;if(!r)return!1;var o=e.getBoundingClientRect().top-n,i=e.getBoundingClientRect().bottom+n;return o<=t.getWindowHeight(r)&&i>=0},t.getNodeHeight=function(e,n){return e?n&&\"clientHeight\"in n?n.clientHeight:t.getWindowHeight(e):0},t.canUseDOM=function(){return!(\"undefined\"==typeof window||!window.document||!window.document.createElement)}},function(e,t,n){\"use strict\";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,\"__esModule\",{value:!0}),t.Background=t.Parallax=void 0;var o=r(n(4));t.Parallax=o.default;var i=r(n(7));t.Background=i.default},function(e,t,n){\"use strict\";function _typeof(e){return(_typeof=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function _typeof(e){return typeof e}:function _typeof(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function _defineProperties(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _setPrototypeOf(e,t){return(_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(e,t){return e.__proto__=t,e})(e,t)}function _createSuper(e){var t=function _isNativeReflectConstruct(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var n,r=_getPrototypeOf(e);if(t){var o=_getPrototypeOf(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return _possibleConstructorReturn(this,n)}}function _possibleConstructorReturn(e,t){return!t||\"object\"!==_typeof(t)&&\"function\"!=typeof t?function _assertThisInitialized(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function _getPrototypeOf(e){return(_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,\"__esModule\",{value:!0});var o=r(n(0)),i=n(1),a=n(5),c=n(2),u=r(n(6)),s={position:\"absolute\",left:\"50%\",WebkitTransform:\"translate3d(-50%, 0, 0)\",transform:\"translate3d(-50%, 0, 0)\",WebkitTransformStyle:\"preserve-3d\",WebkitBackfaceVisibility:\"hidden\",MozBackfaceVisibility:\"hidden\",MsBackfaceVisibility:\"hidden\"},l=function(e){!function _inherits(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&_setPrototypeOf(e,t)}(Parallax,e);var t=_createSuper(Parallax);function Parallax(e){var n;return function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,Parallax),(n=t.call(this,e)).onWindowResize=function(){n.parentHeight=c.getNodeHeight(n.canUseDOM,n.parent),n.updatePosition()},n.onWindowLoad=function(){n.updatePosition()},n.onScroll=function(){if(n.canUseDOM){var e=Date.now();e-n.timestamp>=10&&c.isScrolledIntoView(n.node,100,n.canUseDOM)&&(window.requestAnimationFrame(n.updatePosition),n.timestamp=e)}},n.onContentMount=function(e){n.content=e},n.updatePosition=function(){if(n.content){var e=!1;n.contentHeight=n.content.getBoundingClientRect().height,n.contentWidth=n.node.getBoundingClientRect().width,n.img&&n.img.naturalWidth/n.img.naturalHeight<n.contentWidth/n.getImageHeight()&&(e=!0);var t=a.getRelativePosition(n.node,n.canUseDOM),r=!!n.img,o=n.bg&&n.state.splitChildren.bgChildren.length>0;r&&n.setImagePosition(t,e),o&&n.setBackgroundPosition(t),r||o||n.setState({percentage:t})}},n.state={bgImage:e.bgImage,bgImageSrcSet:e.bgImageSrcSet,bgImageSizes:e.bgImageSizes,imgStyle:s,bgStyle:Object.assign(Object.assign({},s),e.bgStyle),percentage:0,splitChildren:a.getSplitChildren(e)},n.canUseDOM=c.canUseDOM(),n.node=null,n.content=null,n.bgImageLoaded=!1,n.bgImageRef=void 0,n.parent=e.parent,n.parentHeight=c.getNodeHeight(n.canUseDOM,n.parent),n.timestamp=Date.now(),n.isDynamicBlur=a.getHasDynamicBlur(e.blur),n}return function _createClass(e,t,n){return t&&_defineProperties(e.prototype,t),n&&_defineProperties(e,n),e}(Parallax,[{key:\"componentDidMount\",value:function componentDidMount(){var e=this.props.parent,t=this.state,n=t.bgImage,r=t.bgImageSrcSet,o=t.bgImageSizes;this.parent=e||document,this.addListeners(),n?this.loadImage(n,r,o):this.updatePosition()}},{key:\"componentDidUpdate\",value:function componentDidUpdate(e){var t=this.props,n=t.parent,r=t.bgImage,o=t.bgImageSrcSet,i=t.bgImageSizes,a=this.state.bgImage;e.parent!==n&&(this.removeListeners(this.parent),this.parent=n,n&&this.addListeners()),this.parentHeight=c.getNodeHeight(this.canUseDOM,this.parent),a!==r&&this.loadImage(r,o,i)}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.removeListeners(this.parent),this.releaseImage()}},{key:\"setBackgroundPosition\",value:function setBackgroundPosition(e){var t=this.props,n=t.disabled,r=t.strength,o=Object.assign({},this.state.bgStyle);if(!n){var i=\"translate3d(-50%, \".concat((r<0?r:0)-r*e,\"px, 0)\");o.WebkitTransform=i,o.transform=i}this.setState({bgStyle:o,percentage:e})}},{key:\"setImagePosition\",value:function setImagePosition(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=this.props,r=n.disabled,o=n.strength,i=n.blur,c=t?\"auto\":\"\".concat(this.getImageHeight(),\"px\"),u=t?\"\".concat(this.contentWidth,\"px\"):\"auto\",s=Object.assign(Object.assign({},this.state.imgStyle),{height:c,width:u});if(!r){var l=o<0,f=(l?o:0)-o*e,p=\"translate3d(-50%, \".concat(f,\"px, 0)\"),d=\"none\";i&&(d=\"blur(\".concat(a.getBlurValue(this.isDynamicBlur,i,e),\"px)\")),s.WebkitTransform=p,s.transform=p,s.WebkitFilter=d,s.filter=d}this.setState({imgStyle:s,percentage:e})}},{key:\"getImageHeight\",value:function getImageHeight(){var e=this.props.strength,t=(e<0?2.5:1)*Math.abs(e);return Math.floor(this.contentHeight+t)}},{key:\"loadImage\",value:function loadImage(e,t,n){var r=this;this.releaseImage(),this.bgImageRef=new Image,this.bgImageRef.onload=function(o){r.setState({bgImage:e,bgImageSrcSet:t,bgImageSizes:n},(function(){return r.updatePosition()})),r.props.onLoad&&r.props.onLoad(o)},this.bgImageRef.onerror=this.bgImageRef.onload,this.bgImageRef.src=e,this.bgImageRef.srcset=t||\"\",this.bgImageRef.sizes=n||\"\"}},{key:\"releaseImage\",value:function releaseImage(){this.bgImageRef&&(this.bgImageRef.onload=null,this.bgImageRef.onerror=null,delete this.bgImageRef)}},{key:\"addListeners\",value:function addListeners(){this.canUseDOM&&this.parent&&(this.parent.addEventListener(\"scroll\",this.onScroll,!1),window.addEventListener(\"resize\",this.onWindowResize,!1),window.addEventListener(\"load\",this.onWindowLoad,!1))}},{key:\"removeListeners\",value:function removeListeners(e){this.canUseDOM&&(e&&e.removeEventListener(\"scroll\",this.onScroll,!1),window.removeEventListener(\"resize\",this.onWindowResize,!1),window.removeEventListener(\"load\",this.onWindowLoad,!1))}},{key:\"render\",value:function render(){var e=this,t=this.props,n=t.className,r=t.style,i=t.bgClassName,a=t.contentClassName,c=t.bgImageAlt,s=t.renderLayer,l=t.bgImageStyle,f=this.state,p=f.bgImage,d=f.bgImageSrcSet,g=f.bgImageSizes,_=f.percentage,y=f.imgStyle,h=f.bgStyle,b=f.splitChildren;return o.default.createElement(\"div\",{className:\"react-parallax \".concat(n),style:Object.assign({position:\"relative\",overflow:\"hidden\"},r),ref:function ref(t){e.node=t}},p?o.default.createElement(\"img\",{className:i,src:p,srcSet:d,sizes:g,ref:function ref(t){e.img=t},alt:c,style:Object.assign(Object.assign({},y),l)}):null,s?s(-(_-1)):null,b.bgChildren.length>0?o.default.createElement(\"div\",{className:\"react-parallax-background-children\",ref:function ref(t){e.bg=t},style:h},b.bgChildren):null,o.default.createElement(u.default,{onMount:this.onContentMount,className:a},b.children))}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(e){return{splitChildren:a.getSplitChildren(e)}}}]),Parallax}(i.Parallax);l.defaultProps={bgClassName:\"react-parallax-bgimage\",bgImageAlt:\"\",className:\"\",contentClassName:\"\",disabled:!1,strength:100},t.default=l},function(e,t,n){\"use strict\";function _typeof(e){return(_typeof=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function _typeof(e){return typeof e}:function _typeof(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.setBlur=t.getBlurValue=t.getHasDynamicBlur=t.getSplitChildren=t.getRelativePosition=t.getPercentage=void 0;var r=n(0),o=n(2);t.getPercentage=function(e,t,n){return(n-e)/(t-e)||0},t.getRelativePosition=function(e,n){if(!n)return 0;var r=e.getBoundingClientRect(),i=r.top,a=r.height,c=o.getNodeHeight(n),u=a>c?a:c,s=Math.round(i>u?u:i);return t.getPercentage(0,u,s)},t.getSplitChildren=function(e){var t=[],n=r.Children.toArray(e.children);return n.forEach((function(e,r){var o=e;o.type&&o.type.isParallaxBackground&&(t=t.concat(n.splice(r,1)))})),{bgChildren:t,children:n}},t.getHasDynamicBlur=function(e){return\"object\"===_typeof(e)&&void 0!==e.min&&void 0!==e.max},t.getBlurValue=function(e,t,n){return e?t.min+(1-n)*t.max:t},t.setBlur=function(e,t){e.style.webkitFilter=\"blur(\".concat(t,\"px)\"),e.style.filter=\"blur(\".concat(t,\"px)\")}},function(e,t,n){\"use strict\";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,\"__esModule\",{value:!0});var o=r(n(0));t.default=function ParallaxChildren(e){var t=e.children,n=e.onMount,r=e.className;return o.default.createElement(\"div\",{ref:function ref(e){return n(e)},className:r||\"react-parallax-content\",style:{position:\"relative\"}},t)}},function(e,t,n){\"use strict\";function _typeof(e){return(_typeof=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function _typeof(e){return typeof e}:function _typeof(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function _defineProperties(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _setPrototypeOf(e,t){return(_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(e,t){return e.__proto__=t,e})(e,t)}function _createSuper(e){var t=function _isNativeReflectConstruct(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var n,r=_getPrototypeOf(e);if(t){var o=_getPrototypeOf(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return _possibleConstructorReturn(this,n)}}function _possibleConstructorReturn(e,t){return!t||\"object\"!==_typeof(t)&&\"function\"!=typeof t?function _assertThisInitialized(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function _getPrototypeOf(e){return(_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,\"__esModule\",{value:!0});var o=r(n(0)),i=function(e){!function _inherits(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&_setPrototypeOf(e,t)}(Background,e);var t=_createSuper(Background);function Background(){return _classCallCheck(this,Background),t.apply(this,arguments)}return function _createClass(e,t,n){return t&&_defineProperties(e.prototype,t),n&&_defineProperties(e,n),e}(Background,[{key:\"render\",value:function render(){var e=this.props,t=e.className,n=e.children;return o.default.createElement(\"div\",{className:\"react-parallax-background \".concat(t)},n)}}]),Background}(n(1).Background);i.defaultProps={className:\"\"},i.isParallaxBackground=!0,t.default=i}])}));","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\nconst frame = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nfunction cancelFrame(process) {\n    stepsOrder.forEach((key) => steps[key].cancel(process));\n}\n\nexport { cancelFrame, frame, steps, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\nimport { fillWildcardKeyframes } from './wildcards.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        return fillWildcardKeyframes(origin, target);\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","function fillWildcardKeyframes(origin, [...keyframes]) {\n    /**\n     * Ensure an wildcard keyframes are hydrated by the origin.\n     */\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? origin : keyframes[i - 1];\n        }\n    }\n    return keyframes;\n}\n\nexport { fillWildcardKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { frame } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.12.4\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["module","exports","t","self","e","n","r","i","l","call","m","c","d","o","Object","defineProperty","enumerable","get","Symbol","toStringTag","value","__esModule","create","bind","default","prototype","hasOwnProperty","p","s","_typeof","iterator","constructor","_classCallCheck","TypeError","_inherits","writable","configurable","_setPrototypeOf","setPrototypeOf","__proto__","_createSuper","Reflect","construct","sham","Proxy","Date","toString","_getPrototypeOf","this","arguments","apply","_possibleConstructorReturn","ReferenceError","getPrototypeOf","__importDefault","Background","Parallax","Component","a","canUseDOM","getNodeHeight","isScrolledIntoView","getWindowHeight","window","document","documentElement","getElementsByTagName","innerHeight","clientHeight","length","getBoundingClientRect","top","bottom","createElement","_defineProperties","key","u","position","left","WebkitTransform","transform","WebkitTransformStyle","WebkitBackfaceVisibility","MozBackfaceVisibility","MsBackfaceVisibility","onWindowResize","parentHeight","parent","updatePosition","onWindowLoad","onScroll","now","timestamp","node","requestAnimationFrame","onContentMount","content","contentHeight","height","contentWidth","width","img","naturalWidth","naturalHeight","getImageHeight","getRelativePosition","bg","state","splitChildren","bgChildren","setImagePosition","setBackgroundPosition","setState","percentage","bgImage","bgImageSrcSet","bgImageSizes","imgStyle","bgStyle","assign","getSplitChildren","bgImageLoaded","bgImageRef","isDynamicBlur","getHasDynamicBlur","blur","props","addListeners","loadImage","removeListeners","releaseImage","disabled","strength","concat","f","getBlurValue","WebkitFilter","filter","Math","abs","floor","Image","onload","onLoad","onerror","src","srcset","sizes","addEventListener","removeEventListener","className","style","bgClassName","contentClassName","bgImageAlt","renderLayer","bgImageStyle","g","_","y","h","b","overflow","ref","srcSet","alt","onMount","children","defaultProps","setBlur","getPercentage","round","Children","toArray","forEach","type","isParallaxBackground","splice","min","max","webkitFilter","MotionConfigContext","createContext","transformPagePoint","isStatic","reducedMotion","MotionContext","isBrowser","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","useConstant","init","useRef","current","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","id","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","for","preloadedFeatures","createVisualElement","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","visualState","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","useInsertionEffect","update","render","updateFeatures","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","componentCache","Map","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","clamp","number","parse","parseFloat","alpha","scale","sanitize","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","size","right","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","renderedChildren","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","pipe","transformers","reduce","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","isMounted","frameData","delta","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","keepAlive","immediate","addToCurrentFrame","buffer","add","push","cancel","index","delete","process","createRenderStep","processStep","stepId","processFrame","cancelFrame","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","featureTests","waapi","Element","results","supports","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","performance","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","resolveFinishedPromise","currentFinishedPromise","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","getDefaultValueType","defaultValueType","isZero","getZeroUnit","potentialUnitType","getValueTransition","animateMotionValue","valueTransition","isTargetAnimatable","fillWildcardKeyframes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isZeroValueString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","clear","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","remove","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","searchNode","querySelector","DocumentProjectionNode","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","DOMVisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValue","readValueFromInstance","setBaseTarget","valueFromInitial","getBaseTargetFromProps","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion"],"sourceRoot":""}